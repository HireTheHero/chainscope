{
  "contests": [
    {
      "id": "abc361",
      "url": "https://abc361.contest.atcoder.jp/?lang=en",
      "start_time": "2024-07-06T12:00:00",
      "problems": [
        {
          "id": "abc361_a",
          "problem_letter": "A",
          "url": "https://abc361.contest.atcoder.jp/tasks/abc361_a?lang=en",
          "statement": "Problem Statement: \n\nYou are given an integer sequence A of length N and integers K and X. Print the integer sequence B obtained by inserting the integer X immediately after the K -th element of the sequence A.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le K \\le N \\le 100 \n 1 \\le A_i, X \\le 100",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nX\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the integer sequence B obtained by inserting the integer X immediately after the K -th element of the sequence A, in the following format:\n\nB_1\nB_2\n...\nB_{N+1}",
          "samples": [
            {
              "input": "4 3 7\n2 3 5 11",
              "output": "2 3 5 7 11",
              "explanation": "For K=3, X=7, and A=(2,3,5,11), we get B=(2,3,5,7,11)."
            },
            {
              "input": "1 1 100\n100",
              "output": "100 100",
              "explanation": null
            },
            {
              "input": "8 8 3\n9 9 8 2 4 4 3 5",
              "output": "9 9 8 2 4 4 3 5 3",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc361_b",
          "problem_letter": "B",
          "url": "https://abc361.contest.atcoder.jp/tasks/abc361_b?lang=en",
          "statement": "Problem Statement: \n\nYou are trying to implement collision detection in a 3D game.\n\nIn a 3 -dimensional space, let C(a,b,c,d,e,f) denote the cuboid with a diagonal connecting (a,b,c) and (d,e,f), and with all faces parallel to the xy -plane, yz -plane, or zx -plane. (This definition uniquely determines C(a,b,c,d,e,f).)\n\nGiven two cuboids C(a,b,c,d,e,f) and C(g,h,i,j,k,l), determine whether their intersection has a positive volume.",
          "constraints": "Constraints: 0 \\leq a < d \\leq 1000 \n 0 \\leq b < e \\leq 1000 \n 0 \\leq c < f \\leq 1000 \n 0 \\leq g < j \\leq 1000 \n 0 \\leq h < k \\leq 1000 \n 0 \\leq i < l \\leq 1000 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\n\nOutput: \n\nPrintYes if the intersection of the two cuboids has a positive volume, andNo otherwise.",
          "samples": [
            {
              "input": "0 0 0 4 5 6\n2 3 4 5 6 7",
              "output": "Yes",
              "explanation": "The positional relationship of the two cuboids is shown in the figure below, and their intersection has a volume of 8.\n\n"
            },
            {
              "input": "0 0 0 2 2 2\n0 0 2 2 2 4",
              "output": "No",
              "explanation": "The two cuboids touch at a face, where the volume of the intersection is 0."
            },
            {
              "input": "0 0 0 1000 1000 1000\n10 10 10 100 100 100",
              "output": "Yes",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc361_c",
          "problem_letter": "C",
          "url": "https://abc361.contest.atcoder.jp/tasks/abc361_c?lang=en",
          "statement": "Problem Statement: \n\nYou are given a sequence A of length N. Freely choose exactly K elements from A and remove them, then concatenate the remaining elements in their original order to form a new sequence B. Find the minimum possible value of this: the maximum value of B minus the minimum value of B.",
          "constraints": "Constraints: All inputs are integers. \n 1 \\le K < N \\le 2 \\times 10^5 \n 1 \\le A_i \\le 10^9",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the answer as an integer.",
          "samples": [
            {
              "input": "5 2\n3 1 5 4 9",
              "output": "2",
              "explanation": "Consider removing exactly two elements from A=(3,1,5,4,9).\n\nFor example, if you remove the 2nd element 1 and the 5th element 9, the resulting sequence is B=(3,5,4).In this case, the maximum value ofBis5and the minimum value is3, so (maximum value ofB)-(minimum value ofB)=2, which is the minimum possible value. \n In this case, the maximum value of B is 5 and the minimum value is 3, so (maximum value of B) - (minimum value of B) =2, which is the minimum possible value.\n\nIn this case, the maximum value of B is 5 and the minimum value is 3, so (maximum value of B) - (minimum value of B) =2, which is the minimum possible value."
            },
            {
              "input": "6 5\n1 1 1 1 1 1",
              "output": "0",
              "explanation": null
            },
            {
              "input": "8 3\n31 43 26 6 18 36 22 13",
              "output": "18",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc361_d",
          "problem_letter": "D",
          "url": "https://abc361.contest.atcoder.jp/tasks/abc361_d?lang=en",
          "statement": "Problem Statement: Choose a pair of adjacent cells that both contain stones, and move these two stones to the empty two cells while preserving their order.More precisely, choose an integer x such that 1 \\leq x \\leq N+1 and both cells x and x+1 contain stones. Let k and k+1 be the empty two cells. Move the stones from cells x and x+1 to cells k and k+1, respectively. \n Each of the cells from cell 1 to cell N contains one stone, and for each 1 \\leq i \\leq N, the stone in cell i is white if T_i isW, and black if T_i isB.",
          "constraints": "Constraints: 2 \\leq N \\leq 14 \n N is an integer. \n Each of S and T is a string of length N consisting ofBandW.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS\nT\n\nOutput: \n\nIf it is possible to achieve the desired state, print the minimum number of operations required. If it is impossible, print-1.",
          "samples": [
            {
              "input": "6\nBWBWBW\nWWWBBB",
              "output": "4",
              "explanation": "Using.to represent an empty cell, the desired state can be achieved in four operations as follows, which is the minimum:\n\nBWBWBW.. \n BW..BWBW \n BWWBB..W \n ..WBBBWW \n WWWBBB.."
            },
            {
              "input": "6\nBBBBBB\nWWWWWW",
              "output": "-1",
              "explanation": null
            },
            {
              "input": "14\nBBBWBWWWBBWWBW\nWBWWBBWWWBWBBB",
              "output": "7",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc361_e",
          "problem_letter": "E",
          "url": "https://abc361.contest.atcoder.jp/tasks/abc361_e?lang=en",
          "statement": "Problem Statement: \n\nIn the nation of AtCoder, there are N cities numbered 1 to N and N-1 roads numbered 1 to N-1.\n\nRoad i connects cities A_i and B_i bidirectionally, and its length is C_i. Any pair of cities can be reached from each other by traveling through some roads.\n\nFind the minimum travel distance required to start from a city and visit all cities at least once using the roads.",
          "constraints": "Constraints: 2 \\leq N \\leq 2\\times 10^5 \n 1 \\leq A_i, B_i \\leq N \n 1 \\leq C_i \\leq 10^9 \n All input values are integers. \n Any pair of cities can be reached from each other by traveling through some roads.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nB_1\nC_1\n\\vdots\nA_{N-1}\nB_{N-1}\nC_{N-1}\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "4\n1 2 2\n1 3 3\n1 4 4",
              "output": "11",
              "explanation": "If you travel as 4 \\to 1 \\to 2 \\to 1 \\to 3, the total travel distance is 11, which is the minimum.\n\nNote that you do not need to return to the starting city."
            },
            {
              "input": "10\n10 9 1000000000\n9 8 1000000000\n8 7 1000000000\n7 6 1000000000\n6 5 1000000000\n5 4 1000000000\n4 3 1000000000\n3 2 1000000000\n2 1 1000000000",
              "output": "9000000000",
              "explanation": "Beware overflow."
            }
          ]
        },
        {
          "id": "abc361_f",
          "problem_letter": "F",
          "url": "https://abc361.contest.atcoder.jp/tasks/abc361_f?lang=en",
          "statement": "Problem Statement: \n\nHow many integers x between 1 and N, inclusive, can be expressed as x = a^b using some positive integer a and a positive integer bnot less than2 ?",
          "constraints": "Constraints: All input values are integers. \n 1 \\le N \\le 10^{18}",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\n\nOutput: \n\nPrint the answer as an integer.",
          "samples": [
            {
              "input": "99",
              "output": "12",
              "explanation": "The integers that satisfy the conditions in the problem statement are 1, 4, 8, 9, 16, 25, 27, 32, 36, 49, 64, 81 : there are 12."
            },
            {
              "input": "1000000000000000000",
              "output": "1001003332",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc361_g",
          "problem_letter": "G",
          "url": "https://abc361.contest.atcoder.jp/tasks/abc361_g?lang=en",
          "statement": "Problem Statement: (x_0, y_0) = (x, y). \n (x_k, y_k) = (-1, -1). \n |x_i - x_{i+1}| + |y_i - y_{i+1}| = 1 for all 0 \\leq i < k. \n There is no stone at (x_i, y_i) for all 0 \\leq i \\leq k.",
          "constraints": "Constraints: 0 \\leq N \\leq 2 \\times 10^5 \n 0 \\leq X_i, Y_i \\leq 2 \\times 10^5 \n The pairs (X_i, Y_i) are distinct. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nX_1\nY_1\n\\vdots\nX_N\nY_N\n\nOutput: \n\nPrint the number of lattice points that satisfy the conditions.",
          "samples": [
            {
              "input": "5\n1 0\n0 1\n2 3\n1 2\n2 1",
              "output": "1",
              "explanation": "It is impossible to reach (-1, -1) from (1, 1).\n\n"
            },
            {
              "input": "0",
              "output": "0",
              "explanation": "There may be cases where no stones are placed."
            },
            {
              "input": "22\n0 1\n0 2\n0 3\n1 0\n1 4\n2 0\n2 2\n2 4\n3 0\n3 1\n3 2\n3 4\n5 1\n5 2\n5 3\n6 0\n6 4\n7 0\n7 4\n8 1\n8 2\n8 3",
              "output": "6",
              "explanation": "There are six such points: (6, 1), (6, 2), (6, 3), (7, 1), (7, 2), (7, 3)."
            }
          ]
        }
      ]
    },
    {
      "id": "abc362",
      "url": "https://abc362.contest.atcoder.jp/?lang=en",
      "start_time": "2024-07-13T12:00:00",
      "problems": [
        {
          "id": "abc362_a",
          "problem_letter": "A",
          "url": "https://abc362.contest.atcoder.jp/tasks/abc362_a?lang=en",
          "statement": "Problem Statement: \n\nTakahashi came to a store to buy a pen. Here, a red pen costs R yen, a green pen costs G yen, and a blue pen costs B yen.\n\nTakahashi dislikes the color C. If C isRed, he cannot buy a red pen; if C isGreen, he cannot buy a green pen; and if C isBlue, he cannot buy a blue pen.\n\nDetermine the minimum amount of money he needs to buy one pen.",
          "constraints": "Constraints: 1\\leq R,G,B\\leq 100 \n R, G, and B are integers. \n C isRed,Green, orBlue.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nR\nG\nB\nC\n\nOutput: \n\nIf the minimum amount of money Takahashi needs to buy one pen is X yen, print X.",
          "samples": [
            {
              "input": "20 30 10\nBlue",
              "output": "20",
              "explanation": "A red pen costs 20 yen, a green pen costs 30 yen, and a blue pen costs 10 yen. Takahashi cannot buy a blue pen, but he can buy a red pen for 20 yen."
            },
            {
              "input": "100 100 100\nRed",
              "output": "100",
              "explanation": null
            },
            {
              "input": "37 39 93\nBlue",
              "output": "37",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc362_b",
          "problem_letter": "B",
          "url": "https://abc362.contest.atcoder.jp/tasks/abc362_b?lang=en",
          "statement": "Problem Statement: \n\nIn the xy -plane, there are three points A(x_A, y_A), B(x_B, y_B), and C(x_C, y_C) that are not collinear. Determine whether the triangle ABC is a right triangle.",
          "constraints": "Constraints: -1000 \\leq x_A, y_A, x_B, y_B, x_C, y_C \\leq 1000 \n The three points A, B, and C are not collinear. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nx_A\ny_A\nx_B\ny_B\nx_C\ny_C\n\nOutput: \n\nPrintYes if the triangle ABC is a right triangle, andNo otherwise.",
          "samples": [
            {
              "input": "0 0\n4 0\n0 3",
              "output": "Yes",
              "explanation": "The triangle ABC is a right triangle.\n\n"
            },
            {
              "input": "-4 3\n2 1\n3 4",
              "output": "Yes",
              "explanation": "The triangle ABC is a right triangle.\n\n"
            },
            {
              "input": "2 4\n-3 2\n1 -2",
              "output": "No",
              "explanation": "The triangle ABC is not a right triangle.\n\n"
            }
          ]
        },
        {
          "id": "abc362_c",
          "problem_letter": "C",
          "url": "https://abc362.contest.atcoder.jp/tasks/abc362_c?lang=en",
          "statement": "Problem Statement: L_i \\leq X_i \\leq R_i for each i = 1, 2, \\ldots, N. \n \\displaystyle \\sum_{i=1}^N X_i = 0.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n -10^9 \\leq L_i \\leq R_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nL_1\nR_1\nL_2\nR_2\n\\vdots\nL_N\nR_N\n\nOutput: \n\nIf no solution exists, printNo. Otherwise, print an integer sequence X that satisfies the conditions in the following format:\n\nYesX_1\nX_2\n...\nX_N\n\nIf multiple solutions exist, any of them will be considered correct.",
          "samples": [
            {
              "input": "3\n3 5\n-4 1\n-2 3",
              "output": "Yes\n4 -3 -1",
              "explanation": "The sequence X = (4, -3, -1) satisfies all the conditions. Other valid sequences include (3, -3, 0) and (5, -4, -1)."
            },
            {
              "input": "3\n1 2\n1 2\n1 2",
              "output": "No",
              "explanation": "No sequence X satisfies the conditions."
            },
            {
              "input": "6\n-87 12\n-60 -54\n2 38\n-76 6\n87 96\n-17 38",
              "output": "Yes\n-66 -57 31 -6 89 9",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc362_d",
          "problem_letter": "D",
          "url": "https://abc362.contest.atcoder.jp/tasks/abc362_d?lang=en",
          "statement": "Problem Statement: Find the minimum weight of a path from vertex 1 to vertex i.",
          "constraints": "Constraints: 2 \\leq N \\leq 2 \\times 10^5 \n N-1 \\leq M \\leq 2 \\times 10^5 \n 1 \\leq U_j < V_j \\leq N \n (U_i, V_i) \\neq (U_j, V_j) if i \\neq j. \n The graph is connected. \n 0 \\leq A_i \\leq 10^9 \n 0 \\leq B_j \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nA_1\nA_2\n...\nA_N\nU_1\nV_1\nB_1\nU_2\nV_2\nB_2\n\\vdots\nU_M\nV_M\nB_M\n\nOutput: \n\nPrint the answers for i=2,3,...,N in a single line, separated by spaces.",
          "samples": [
            {
              "input": "3 3\n1 2 3\n1 2 1\n1 3 6\n2 3 2",
              "output": "4 9",
              "explanation": "Consider the paths from vertex 1 to vertex 2.\nThe weight of the path 1 \\to 2 is A_1 + B_1 + A_2 = 1 + 1 + 2 = 4, and the weight of the path 1 \\to 3 \\to 2 is A_1 + B_2 + A_3 + B_3 + A_2 = 1 + 6 + 3 + 2 + 2 = 14. The minimum weight is 4.\n\nConsider the paths from vertex 1 to vertex 3.\nThe weight of the path 1 \\to 3 is A_1 + B_2 + A_3 = 1 + 6 + 3 = 10, and the weight of the path 1 \\to 2 \\to 3 is A_1 + B_1 + A_2 + B_3 + A_3 = 1 + 1 + 2 + 2 + 3 = 9. The minimum weight is 9."
            },
            {
              "input": "2 1\n0 1\n1 2 3",
              "output": "4",
              "explanation": null
            },
            {
              "input": "5 8\n928448202 994752369 906965437 942744902 907560126\n2 5 975090662\n1 2 908843627\n1 5 969061140\n3 4 964249326\n2 3 957690728\n2 4 942986477\n4 5 948404113\n1 3 988716403",
              "output": "2832044198 2824130042 4696218483 2805069468",
              "explanation": "Note that the answers may not fit in a 32-bit integer."
            }
          ]
        },
        {
          "id": "abc362_e",
          "problem_letter": "E",
          "url": "https://abc362.contest.atcoder.jp/tasks/abc362_e?lang=en",
          "statement": "Problem Statement: \n\nYou are given a sequence A = (A_1, A_2, ..., A_N) of length N. For each k = 1, 2, ..., N, find the number, modulo 998244353, of (not necessarily contiguous) subsequences of A of length k that are arithmetic sequences. Two subsequences are distinguished if they are taken from different positions, even if they are equal as sequences.",
          "constraints": "Constraints: 1 \\leq N \\leq 80 \n 1 \\leq A_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the answers for k = 1, 2, ..., N in this order, in a single line, separated by spaces.",
          "samples": [
            {
              "input": "5\n1 2 3 2 3",
              "output": "5 10 3 0 0",
              "explanation": "There are 5 subsequences of length 1, all of which are arithmetic sequences. \n There are 10 subsequences of length 2, all of which are arithmetic sequences. \n There are 3 subsequences of length 3 that are arithmetic sequences: (A_1, A_2, A_3), (A_1, A_2, A_5), and (A_1, A_4, A_5). \n There are no arithmetic subsequences of length 4 or more."
            },
            {
              "input": "4\n1 2 3 4",
              "output": "4 6 2 1",
              "explanation": null
            },
            {
              "input": "1\n100",
              "output": "1",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc362_f",
          "problem_letter": "F",
          "url": "https://abc362.contest.atcoder.jp/tasks/abc362_f?lang=en",
          "statement": "Problem Statement: The weight w(x,y) of the edge between vertices x and y in G is the shortest distance between vertices x and y in T.",
          "constraints": "Constraints: 2 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq u_i < v_i \\leq N \n The input graph is a tree. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nu_1\nv_1\nu_2\nv_2\n\\vdots\nu_{N-1}\nv_{N-1}\n\nOutput: \n\nPrint a solution as \\{(x_1,y_1),(x_2,y_2),...,(x_{\\lfloor N/2 \\rfloor},y_{\\lfloor N/2 \\rfloor})\\} in the following format. If multiple solutions exist, any of them is acceptable.\n\nx_1\ny_1\nx_2\ny_2\n\\vdots\nx_{\\lfloor N/2 \\rfloor}\ny_{\\lfloor N/2 \\rfloor}",
          "samples": [
            {
              "input": "4\n1 2\n2 3\n3 4",
              "output": "2 4\n1 3",
              "explanation": "In T, the distance between vertices 2 and 4 is 2, and the distance between vertices 1 and 3 is 2, so the weight of the matching \\{(2,4),(1,3)\\} is 4. There is no matching with a weight greater than 4, so this is a maximum weight maximum matching. Other acceptable outputs include:"
            },
            {
              "input": "3\n1 2\n2 3",
              "output": "1 3",
              "explanation": "In T, the distance between vertices 1 and 3 is 2, so the weight of the matching \\{(1,3)\\} is 2. There is no matching with a weight greater than 2, so this is a maximum weight maximum matching. Another acceptable output is:"
            }
          ]
        },
        {
          "id": "abc362_g",
          "problem_letter": "G",
          "url": "https://abc362.contest.atcoder.jp/tasks/abc362_g?lang=en",
          "statement": "Problem Statement: A string T_i consisting of lowercase English letters is given. Print the number of substrings of S that equal T_i. Two substrings are distinguished if they are taken from different positions, even if they are equal as strings.",
          "constraints": "Constraints: 1 \\leq |S| \\leq 5 \\times 10^5 \n 1 \\leq Q \\leq 5 \\times 10^5 \n 1 \\leq |T_i| \\leq |S| \n \\displaystyle \\sum_{i=1}^Q |T_i| \\leq 5 \\times 10^5 \n S and T_i are strings consisting of lowercase English letters. \n Q is an integer.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS\nQ\nT_1\nT_2\n\\vdots\nT_Q\n\nOutput: \n\nPrint Q lines. The i -th line should contain the answer to the i -th query.",
          "samples": [
            {
              "input": "missisippi\n5\ni\ns\na\nis\nmissisippi",
              "output": "4\n3\n0\n2\n1",
              "explanation": "Let S[l:r] denote the substring of S from the l -th character through the r -th character.\n\nFor the 1st query, four substrings of S equali: S[2:2], S[5:5], S[7:7], S[10:10]. \n For the 2nd query, three substrings of S equals: S[3:3], S[4:4], S[6:6]. \n For the 3rd query, no substrings of S matcha. \n For the 4th query, two substrings of S equalis: S[2:3], S[5:6]. \n For the 5th query, one substring of S equalsmissisippi: S[1:10]."
            },
            {
              "input": "aaaaaa\n6\na\naa\naaa\naaaa\naaaaa\naaaaaa",
              "output": "6\n5\n4\n3\n2\n1",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc363",
      "url": "https://abc363.contest.atcoder.jp/?lang=en",
      "start_time": "2024-07-20T12:00:00",
      "problems": [
        {
          "id": "abc363_a",
          "problem_letter": "A",
          "url": "https://abc363.contest.atcoder.jp/tasks/abc363_a?lang=en",
          "statement": "Problem Statement: When the rating is between 1 and 99, inclusive,^is displayed once. \n When the rating is between 100 and 199, inclusive,^is displayed twice. \n When the rating is between 200 and 299, inclusive,^is displayed three times. \n When the rating is between 300 and 399, inclusive,^is displayed four times.",
          "constraints": "Constraints: 1 \\leq R \\leq 299 \n R is an integer.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nR\n\nOutput: \n\nPrint, as an integer, the minimum increase in rating required for Takahashi to increase the number of displayed^.",
          "samples": [
            {
              "input": "123",
              "output": "77",
              "explanation": "Takahashi's current rating is 123, and^is displayed twice.By increasing his rating by 77, his rating will become 200, and^will be displayed three times.\nWhen the rating is 199 or below,^is displayed not more than twice, so print 77."
            },
            {
              "input": "250",
              "output": "50",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc363_b",
          "problem_letter": "B",
          "url": "https://abc363.contest.atcoder.jp/tasks/abc363_b?lang=en",
          "statement": "Problem Statement: \n\nThere are N people, and the current hair length of the i -th person (1 \\leq i \\leq N) is L_i. Each person's hair grows by 1 per day.\n\nPrint the number of days after which the number of people whose hair length is at least T becomes P or more for the first time. If there are already P or more people whose hair length is at least T now, print 0.",
          "constraints": "Constraints: 1 \\leq N \\leq 100 \n 1 \\leq L_i \\leq 100 \n 1 \\leq T \\leq 100 \n 1 \\leq P \\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nT\nP\nL_1\nL_2\n...\nL_N\n\nOutput: \n\nPrint the number of days after which the number of people whose hair length is at least T becomes P or more for the first time. \nIf this condition is already satisfied now, print 0.",
          "samples": [
            {
              "input": "5 10 3\n3 11 1 6 2",
              "output": "7",
              "explanation": "There are five people, and their current hair lengths are 3, 11, 1, 6, 2, so there is one person whose hair length is at least 10.\n\nAfter seven days, the hair lengths of the people will be 10, 18, 8, 13, 9, respectively, and there will be three people whose hair length is at least 10.After six days, there are only two people whose hair length is at least 10, not satisfying the condition, so print 7."
            },
            {
              "input": "2 5 2\n10 10",
              "output": "0",
              "explanation": "Since there are already two people whose hair length is at least 5 now, satisfying the condition, so print 0."
            },
            {
              "input": "3 10 1\n1 2 3",
              "output": "7",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc363_c",
          "problem_letter": "C",
          "url": "https://abc363.contest.atcoder.jp/tasks/abc363_c?lang=en",
          "statement": "Problem Statement: \n\nYou are given a string S of length N consisting only of lowercase English letters.\n\nFind the number of strings obtained by permuting the characters of S (including the string S itself) thatdo not contain a palindrome of length K as a substring.\n\nHere, a string T of length N is said to \"contain a palindrome of length K as a substring\" if and only if there exists a non-negative integer i not greater than (N-K) such that T_{i+j} = T_{i+K+1-j} for every integer j with 1 \\leq j \\leq K. Here, T_k denotes the k -th character of the string T.",
          "constraints": "Constraints: 2 \\leq K \\leq N \\leq 10 \n N and K are integers. \n S is a string of length N consisting only of lowercase English letters.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nS\n\nOutput: \n\nPrint the number of strings obtained by permuting S that do not contain a palindrome of length K as a substring.",
          "samples": [
            {
              "input": "3 2\naab",
              "output": "1",
              "explanation": "The strings obtained by permutingaabareaab,aba, andbaa. Among these,aabandbaacontain the palindromeaaof length 2 as a substring.Thus, the only string that satisfies the condition isaba, so print 1."
            },
            {
              "input": "5 3\nzzyyx",
              "output": "16",
              "explanation": "There are 30 strings obtained by permutingzzyyx, 16 of which do not contain a palindrome of length 3. Thus, print 16."
            },
            {
              "input": "10 5\nabcwxyzyxw",
              "output": "440640",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc363_d",
          "problem_letter": "D",
          "url": "https://abc363.contest.atcoder.jp/tasks/abc363_d?lang=en",
          "statement": "Problem Statement: \n\nA non-negative integer X is called a palindrome number if its decimal representation (without leading zeros) is a palindrome. For example, 363, 12344321, and 0 are all palindrome numbers.\n\nFind the N -th smallest palindrome number.",
          "constraints": "Constraints: 1 \\leq N \\leq 10^{18} \n N is an integer.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\n\nOutput: \n\nPrint the N -th smallest palindrome number.",
          "samples": [
            {
              "input": "46",
              "output": "363",
              "explanation": "The 46th smallest palindrome number is 363."
            },
            {
              "input": "1",
              "output": "0",
              "explanation": null
            },
            {
              "input": "1000000000000000000",
              "output": "90000000000000000000000000000000009",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc363_e",
          "problem_letter": "E",
          "url": "https://abc363.contest.atcoder.jp/tasks/abc363_e?lang=en",
          "statement": "Problem Statement: \n\nThere is an island of size H \\times W, surrounded by the sea. The island is divided into H rows and W columns of 1 \\times 1 sections, and the elevation of the section at the i -th row from the top and the j -th column from the left (relative to the current sea level) is A_{i,j}.\n\nStarting from now, the sea level rises by 1 each year. Here, a section that is vertically or horizontally adjacent to the sea or a section sunk into the sea and has an elevationnot greater than the sea level will sink into the sea. Here, when a section newly sinks into the sea, any vertically or horizontally adjacent section with an elevation not greater than the sea level will also sink into the sea simultaneously, and this process repeats for the newly sunk sections.\n\nFor each i=1,2,..., Y, find the area of the island that remains above sea level i years from now.",
          "constraints": "Constraints: 1 \\leq H, W \\leq 1000 \n 1 \\leq Y \\leq 10^5 \n 1 \\leq A_{i,j} \\leq 10^5 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nH\nW\nY\nA_{1,1}\nA_{1,2}\n...\nA_{1,W}\nA_{2,1}\nA_{2,2}\n...\nA_{2,W}\n\\vdots\nA_{H,1}\nA_{H,2}\n...\nA_{H,W}\n\nOutput: \n\nPrint Y lines.\nThe i -th line (1 \\leq i \\leq Y) should contain the area of the island that remains above sea level i years from now.",
          "samples": [
            {
              "input": "3 3 5\n10 2 10\n3 1 4\n10 5 10",
              "output": "9\n7\n6\n5\n4",
              "explanation": "Let (i,j) denote the section at the i -th row from the top and the j -th column from the left. Then, the following happens:\n\nTherefore, print 9, 7, 6, 5, 4 in this order, each on a new line.\n\nAfter 1 year, the sea level is higher than now by 1, but there are no sections with an elevation of 1 that are adjacent to the sea, so no sections sink. Thus, the first line should contain 9. \n After 2 years, the sea level is higher than now by 2, and (1,2) sinks into the sea. This makes (2,2) adjacent to a sunken section, and its elevation is not greater than 2, so it also sinks. No other sections sink at this point. Thus, two sections sink, and the second line should contain 9-2=7. \n After 3 years, the sea level is higher than now by 3, and (2,1) sinks into the sea. No other sections sink. Thus, the third line should contain 6. \n After 4 years, the sea level is higher than now by 4, and (2,3) sinks into the sea. No other sections sink. Thus, the fourth line should contain 5. \n After 5 years, the sea level is higher than now by 5, and (3,2) sinks into the sea. No other sections sink. Thus, the fifth line should contain 4."
            },
            {
              "input": "3 5 3\n2 2 3 3 3\n2 1 2 1 3\n2 2 3 3 3",
              "output": "15\n7\n0",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc363_f",
          "problem_letter": "F",
          "url": "https://abc363.contest.atcoder.jp/tasks/abc363_f?lang=en",
          "statement": "Problem Statement: S is a string of length between 1 and 1000, inclusive, consisting of the characters1,2,3,4,5,6,7,8,9, and*(multiplication symbol). \n S is a palindrome. \n The first character of S is a digit. \n The value of S when evaluated as a formula equals N.",
          "constraints": "Constraints: 1 \\leq N \\leq 10^{12} \n N is an integer.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\n\nOutput: \n\nIf there is a string S that satisfies the conditions exists, print such a string. Otherwise, print-1.",
          "samples": [
            {
              "input": "363",
              "output": "11*3*11",
              "explanation": "S =11*3*11satisfies the conditions in the problem statement. Another string that satisfies the conditions is S=363."
            },
            {
              "input": "101",
              "output": "-1",
              "explanation": "Note that S must not contain the digit0."
            },
            {
              "input": "3154625100",
              "output": "2*57*184481*75*2",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc363_g",
          "problem_letter": "G",
          "url": "https://abc363.contest.atcoder.jp/tasks/abc363_g?lang=en",
          "statement": "Problem Statement: c x y: Change D_c to x and P_c to y. Then, solve the following problem and print the answer.",
          "constraints": "Constraints: 1 \\leq N \\leq 10^5 \n 1 \\leq Q \\leq 10^5 \n 1 \\leq D_i \\leq N \n 1 \\leq P_i \\leq 10^9 \n 1 \\leq c \\leq N \n 1 \\leq x \\leq N \n 1 \\leq y \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format. Here, \\mathrm{query}_i denotes the i -th query.\n\nN\nQ\nD_1\nD_2\n...\nD_N\nP_1\nP_2\n...\nP_N\n\\mathrm{query}_1\n\\mathrm{query}_2\n\\vdots\n\\mathrm{query}_Q\n\nEach query is given in the following format.\n\nc\nx\ny\n\nOutput: \n\nPrint Q lines. The i -th line should contain the answer to the i -th query.",
          "samples": [
            {
              "input": "3 2\n1 2 3\n3 6 3\n3 1 4\n2 3 9",
              "output": "10\n13",
              "explanation": "The first query is as follows:\n\nThe second query is as follows:\n\nUpdate D_3 to 1 and P_3 to 4. Now, D = (1, 2, 1) and P = (3, 6, 4). \n In the subproblem, one optimal procedure is to complete job 3 on day 1, job 2 on day 2, and job 1 on day 3. The total reward is 10, so print 10.\n\nUpdate D_2 to 3 and P_2 to 9. Now, D = (1, 3, 1) and P = (3, 9, 4). \n In the subproblem, one optimal procedure is to complete job 3 on day 1, job 1 on day 2, and job 2 on day 3. The total reward is 13, so print 13."
            },
            {
              "input": "5 1\n1 2 3 4 5\n1000000000 1000000000 1000000000 1000000000 1000000000\n1 1 1000000000",
              "output": "5000000000",
              "explanation": null
            },
            {
              "input": "10 10\n6 2 4 1 5 1 6 6 5 3\n45 65 71 52 86 52 48 60 40 98\n5 6 5\n8 4 34\n6 7 83\n1 3 21\n7 5 85\n7 4 51\n8 2 81\n2 7 54\n6 1 5\n8 6 30",
              "output": "394\n379\n462\n457\n459\n414\n443\n479\n401\n396",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc364",
      "url": "https://abc364.contest.atcoder.jp/?lang=en",
      "start_time": "2024-07-27T12:00:00",
      "problems": [
        {
          "id": "abc364_a",
          "problem_letter": "A",
          "url": "https://abc364.contest.atcoder.jp/tasks/abc364_a?lang=en",
          "statement": "Problem Statement: \n\nTakahashi is planning to eat N dishes.\n\nThe i -th dish he plans to eat is sweet if S_i =sweet, and salty if S_i =salty.\n\nIf he eats two sweet dishes consecutively, he will feel sick and be unable to eat any more dishes.\n\nDetermine whether he can eat all the dishes.",
          "constraints": "Constraints: N is an integer between 1 and 100, inclusive. \n Each S_i issweetorsalty.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS_1\nS_2\n\\vdots\nS_N\n\nOutput: \n\nPrintYes if Takahashi can eat all the dishes, andNo otherwise.",
          "samples": [
            {
              "input": "5\nsalty\nsweet\nsalty\nsalty\nsweet",
              "output": "Yes",
              "explanation": "He will not eat two sweet dishes consecutively, so he can eat all the dishes without feeling sick."
            },
            {
              "input": "4\nsweet\nsalty\nsweet\nsweet",
              "output": "Yes",
              "explanation": "He will feel sick but can still eat all the dishes."
            },
            {
              "input": "6\nsalty\nsweet\nsweet\nsalty\nsweet\nsweet",
              "output": "No",
              "explanation": "He feels sick when eating the 3rd dish and cannot eat the 4th and subsequent dishes."
            }
          ]
        },
        {
          "id": "abc364_b",
          "problem_letter": "B",
          "url": "https://abc364.contest.atcoder.jp/tasks/abc364_b?lang=en",
          "statement": "Problem Statement: If the i -th character of X isL, and the cell to the left of his current cell exists and is empty, he moves to the cell to the left. Otherwise, he stays in the current cell. \n If the i -th character of X isR, and the cell to the right of his current cell exists and is empty, he moves to the cell to the right. Otherwise, he stays in the current cell. \n If the i -th character of X isU, and the cell above his current cell exists and is empty, he moves to the cell above. Otherwise, he stays in the current cell. \n If the i -th character of X isD, and the cell below his current cell exists and is empty, he moves to the cell below. Otherwise, he stays in the current cell.",
          "constraints": "Constraints: 1 \\leq H, W \\leq 50 \n 1 \\leq S_i \\leq H \n 1 \\leq S_j \\leq W \n H, W, S_i, S_j are integers. \n C_{i, j} is.or#. \n C_{S_i, S_j} =. \n X is a string of length between 1 and 50, inclusive, consisting ofL,R,U,D.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nH\nW\nS_i\nS_j\nC_{1, 1}C_{1, 2}...C_{1, W}\nC_{2, 1}C_{2, 2}...C_{2, W}\n\\vdots\nC_{H, 1}C_{H, 2}...C_{H, W}\nX\n\nOutput: \n\nLet (x, y) be the cell where Takahashi is after completing the series of actions. Print x and y, separated by a space.",
          "samples": [
            {
              "input": "2 3\n2 1\n.#.\n...\nULDRU",
              "output": "2 2",
              "explanation": "Takahashi starts at cell (2, 1). His series of actions are as follows:\n\nTherefore, after completing the series of actions, he is at cell (2, 2).\n\nThe 1st character of X isU, and the cell above (2, 1) exists and is an empty cell, so he moves to the cell above, which is (1, 1). \n The 2nd character of X isL, and the cell to the left of (1, 1) does not exist, so he stays at (1, 1). \n The 3rd character of X isD, and the cell below (1, 1) exists and is an empty cell, so he moves to the cell below, which is (2, 1). \n The 4th character of X isR, and the cell to the right of (2, 1) exists and is an empty cell, so he moves to the cell to the right, which is (2, 2). \n The 5th character of X isU, and the cell above (2, 2) exists but is not an empty cell, so he stays at (2, 2)."
            },
            {
              "input": "4 4\n4 2\n....\n.#..\n...#\n....\nDUUUURULRD",
              "output": "2 4",
              "explanation": null
            },
            {
              "input": "6 6\n1 1\n.#####\n######\n######\n######\n######\n######\nRURLDLULLRULRDL",
              "output": "1 1",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc364_c",
          "problem_letter": "C",
          "url": "https://abc364.contest.atcoder.jp/tasks/abc364_c?lang=en",
          "statement": "Problem Statement: \n\nThere are N dishes, and the i -th dish has asweetness of A_i and asaltiness of B_i.\n\nTakahashi plans to arrange these N dishes in any order he likes and eat them in that order.\n\nHe will eat the dishes in the arranged order, but he will stop eating as soon as the total sweetness of the dishes he has eaten exceeds X or the total saltiness exceeds Y.\n\nFind the minimum possible number of dishes that he will end up eating.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq X, Y \\leq 2 \\times 10^{14} \n 1 \\leq A_i, B_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nX\nY\nA_1\nA_2\n...\nA_N\nB_1\nB_2\n...\nB_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "4 7 18\n2 3 5 1\n8 8 1 4",
              "output": "2",
              "explanation": "The i -th dish will be denoted as dish i.\n\nIf he arranges the four dishes in the order 2, 3, 1, 4, as soon as he eats dishes 2 and 3, their total sweetness is 8, which is greater than 7. Therefore, in this case, he will end up eating two dishes.\n\nThe number of dishes he will eat cannot be 1 or less, so print 2."
            },
            {
              "input": "5 200000000000000 200000000000000\n1 1 1 1 1\n2 2 2 2 2",
              "output": "5",
              "explanation": null
            },
            {
              "input": "8 30 30\n1 2 3 4 5 6 7 8\n8 7 6 5 4 3 2 1",
              "output": "6",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc364_d",
          "problem_letter": "D",
          "url": "https://abc364.contest.atcoder.jp/tasks/abc364_d?lang=en",
          "statement": "Problem Statement: Let X be the point among A_1,A_2,\\dots,A_N that is the k_j -th closest to point B_j. Find the distance between points X and B_j.\r\nMore formally, let d_i be the distance between points A_i and B_j. Sort (d_1,d_2,\\dots,d_N) in ascending order to get the sequence (d_1',d_2',\\dots,d_N'). Find d_{k_j}'.",
          "constraints": "Constraints: 1 \\leq N, Q \\leq 10^5 \n -10^8 \\leq a_i, b_j \\leq 10^8 \n 1 \\leq k_j \\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nQ\na_1\na_2\n...\na_N\nb_1\nk_1\nb_2\nk_2\n\\vdots\nb_Q\nk_Q\n\nOutput: \n\nPrint Q lines.\nThe l -th line (1 \\leq l \\leq Q) should contain the answer to the question for j=l as an integer.",
          "samples": [
            {
              "input": "4 3\n-3 -1 5 6\n-2 3\n2 1\n10 4",
              "output": "7\n3\n13",
              "explanation": "Let us explain the first query.\n\nThe distances from points A_1, A_2, A_3, A_4 to point B_1 are 1, 1, 7, 8, respectively, so the 3rd closest to point B_1 is point A_3.\nTherefore, print the distance between point A_3 and point B_1, which is 7."
            },
            {
              "input": "2 2\n0 0\n0 1\n0 2",
              "output": "0\n0",
              "explanation": "There may be multiple points with the same coordinates."
            },
            {
              "input": "10 5\n-84 -60 -41 -100 8 -8 -52 -62 -61 -76\n-52 5\n14 4\n-2 6\n46 2\n26 7",
              "output": "11\n66\n59\n54\n88",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc364_e",
          "problem_letter": "E",
          "url": "https://abc364.contest.atcoder.jp/tasks/abc364_e?lang=en",
          "statement": "Problem Statement: \n\nTakahashi has prepared N dishes for Snuke.\nThe dishes are numbered from 1 to N, and dish i has asweetness of A_i and asaltiness of B_i.\n\nTakahashi can arrange these dishes in any order he likes.\nSnuke will eat the dishes in the order they are arranged, but if at any point the total sweetness of the dishes he has eaten so far exceeds X or the total saltiness exceeds Y, he will not eat any further dishes.\n\nTakahashi wants Snuke to eat as many dishes as possible.\nFind the maximum number of dishes Snuke will eat if Takahashi arranges the dishes optimally.",
          "constraints": "Constraints: 1 \\leq N \\leq 80 \n 1 \\leq A_i, B_i \\leq 10000 \n 1 \\leq X, Y \\leq 10000 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nX\nY\nA_1\nB_1\nA_2\nB_2\n\\vdots\nA_N\nB_N\n\nOutput: \n\nPrint the answer as an integer.",
          "samples": [
            {
              "input": "4 8 4\n1 5\n3 2\n4 1\n5 3",
              "output": "3",
              "explanation": "Consider the scenario where Takahashi arranges the dishes in the order 2, 3, 1, 4.\n\nThus, in this arrangement, Snuke will eat three dishes.\n\nNo matter how Takahashi arranges the dishes, Snuke will not eat all four dishes, so the answer is 3.\n\nFirst, Snuke eats dish 2. The total sweetness so far is 3, and the total saltiness is 2. \n Next, Snuke eats dish 3. The total sweetness so far is 7, and the total saltiness is 3. \n Next, Snuke eats dish 1. The total sweetness so far is 8, and the total saltiness is 8. \n The total saltiness has exceeded Y=4, so Snuke will not eat any further dishes."
            },
            {
              "input": "2 1 1\n3 2\n3 2",
              "output": "1",
              "explanation": null
            },
            {
              "input": "2 100 100\n3 2\n3 2",
              "output": "2",
              "explanation": null
            },
            {
              "input": "6 364 463\n230 381\n154 200\n328 407\n339 94\n193 10\n115 309",
              "output": "3",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc364_f",
          "problem_letter": "F",
          "url": "https://abc364.contest.atcoder.jp/tasks/abc364_f?lang=en",
          "statement": "Problem Statement: For each integer j satisfying L_i \\leq j \\leq R_i, add an undirected edge with cost C_i between vertices N + i and j.",
          "constraints": "Constraints: 1 \\leq N, Q \\leq 2 \\times 10^5 \n 1 \\leq L_i \\leq R_i \\leq N \n 1 \\leq C_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nQ\nL_1\nR_1\nC_1\nL_2\nR_2\nC_2\n\\vdots\nL_Q\nR_Q\nC_Q\n\nOutput: \n\nIf the graph is connected, print the cost of a minimum spanning tree. Otherwise, print -1.",
          "samples": [
            {
              "input": "4 3\n1 2 2\n1 3 4\n2 4 5",
              "output": "22",
              "explanation": "The following edges form a minimum spanning tree:\n\nSince 2 + 2 + 4 + 4 + 5 + 5 = 22, print 22.\n\nAn edge with cost 2 connecting vertices 1 and 5 \n An edge with cost 2 connecting vertices 2 and 5 \n An edge with cost 4 connecting vertices 1 and 6 \n An edge with cost 4 connecting vertices 3 and 6 \n An edge with cost 5 connecting vertices 3 and 7 \n An edge with cost 5 connecting vertices 4 and 7"
            },
            {
              "input": "6 2\n1 2 10\n4 6 10",
              "output": "-1",
              "explanation": "The graph is disconnected."
            },
            {
              "input": "200000 4\n1 200000 1000000000\n1 200000 998244353\n1 200000 999999999\n1 200000 999999999",
              "output": "199651870599998",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc364_g",
          "problem_letter": "G",
          "url": "https://abc364.contest.atcoder.jp/tasks/abc364_g?lang=en",
          "statement": "Problem Statement: If city i is designated as the last major city, what is the minimum total cost of the expansion work required to ensure that one can travel between any two major cities using only expanded roads?",
          "constraints": "Constraints: 2 \\leq N \\leq 4000 \n N-1 \\leq M \\leq 8000 \n 2\\leq K \\leq \\min(N,\\, 10 ) \n 1 \\leq A_i < B_i \\leq N \n 1 \\leq C_i \\leq 10^9 \n One can travel between any two cities by traversing some roads. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nK\nA_1\nB_1\nC_1\nA_2\nB_2\nC_2\n\\vdots\nA_M\nB_M\nC_M\n\nOutput: \n\nPrint N-K+1 lines.\nThe l -th line (1 \\leq l \\leq N-K+1) should contain the answer to the question for i=l+K-1, as an integer.",
          "samples": [
            {
              "input": "4 5 3\n1 4 3\n3 4 4\n1 2 4\n2 3 2\n1 3 1",
              "output": "3\n6",
              "explanation": "\n\nIn the above figure, circles with numbers represent cities with those numbers, and lines with numbers represent roads with the cost of expansion being that number.\nThe left and right figures correspond to the cases i=3 and i=4, respectively. The colored circles represent the major cities, and the colored thick lines represent the roads that are expanded in an optimal solution.\n\nFor i=3, expanding roads 4 and 5 results in a total cost of 2+1=3, which is the minimum. \n For i=4, expanding roads 1, 4, and 5 results in a total cost of 3+2+1=6, which is the minimum."
            },
            {
              "input": "4 3 2\n2 4 28\n1 4 56\n1 3 82",
              "output": "84\n82\n56",
              "explanation": null
            },
            {
              "input": "6 12 4\n2 6 68\n2 5 93\n4 6 28\n2 4 89\n3 6 31\n1 3 10\n1 2 53\n3 5 1\n3 5 74\n3 4 22\n4 5 80\n3 4 35",
              "output": "85\n64\n94",
              "explanation": "There may be multiple roads connecting the same pair of cities."
            }
          ]
        }
      ]
    },
    {
      "id": "abc365",
      "url": "https://abc365.contest.atcoder.jp/?lang=en",
      "start_time": "2024-08-03T12:00:00",
      "problems": [
        {
          "id": "abc365_a",
          "problem_letter": "A",
          "url": "https://abc365.contest.atcoder.jp/tasks/abc365_a?lang=en",
          "statement": "Problem Statement: ifYis not a multiple of4, then365days; \n ifYis a multiple of4but not a multiple of100, then366days; \n ifYis a multiple of100but not a multiple of400, then365days; \n ifYis a multiple of400, then366days.",
          "constraints": "Constraints: Y is an integer between 1583 and 2023, inclusive.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nY\n\nOutput: \n\nPrint the number of days in the year Y as an integer.",
          "samples": [
            {
              "input": "2023",
              "output": "365",
              "explanation": "2023 is not a multiple of 4, so it has 365 days."
            },
            {
              "input": "1992",
              "output": "366",
              "explanation": "1992 is a multiple of 4 but not a multiple of 100, so it has 366 days."
            },
            {
              "input": "1800",
              "output": "365",
              "explanation": "1800 is a multiple of 100 but not a multiple of 400, so it has 365 days."
            },
            {
              "input": "1600",
              "output": "366",
              "explanation": "1600 is a multiple of 400, so it has 366 days."
            }
          ]
        },
        {
          "id": "abc365_b",
          "problem_letter": "B",
          "url": "https://abc365.contest.atcoder.jp/tasks/abc365_b?lang=en",
          "statement": "Problem Statement: \n\nYou are given an integer sequence A=(A_1,...,A_N) of length N. Here, A_1, A_2, ..., A_N are all distinct.\n\nWhich element in A is the second largest?",
          "constraints": "Constraints: 2 \\leq N \\leq 100 \n 1 \\leq A_i \\leq 10^9 \n A_1, A_2, \\ldots, A_N are all distinct. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_{N}\n\nOutput: \n\nPrint the integer X such that the X -th element in A is the second largest.",
          "samples": [
            {
              "input": "4\n8 2 5 1",
              "output": "3",
              "explanation": "The second largest element in A is A_3, so print 3."
            },
            {
              "input": "8\n1 2 3 4 5 10 9 11",
              "output": "6",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc365_c",
          "problem_letter": "C",
          "url": "https://abc365.contest.atcoder.jp/tasks/abc365_c?lang=en",
          "statement": "Problem Statement: \n\nThere are N people participating in an event, and the transportation cost for the i -th person is A_i yen.\n\nTakahashi, the organizer of the event, decided to set a maximum limit x for the transportation subsidy. The subsidy for person i will be \\min(x, A_i) yen. Here, x must be a non-negative integer.\n\nGiven that Takahashi's budget is M yen, and he wants the total transportation subsidy for all N people to be at most M yen, what is the maximum possible value of the subsidy limit x ?\n\nIf the subsidy limit can be made infinitely large, report that instead.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq M \\leq 2 \\times 10^{14} \n 1 \\leq A_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nA_1\nA_2\n...\nA_{N}\n\nOutput: \n\nPrint the maximum value of the subsidy limit x that satisfies the budget condition, as an integer.\n\nIf the subsidy limit can be made infinitely large, printinfinite instead.",
          "samples": [
            {
              "input": "4 8\n1 3 2 4",
              "output": "2",
              "explanation": "If the subsidy limit is set to 2 yen, the total transportation subsidy for all N people is \\min(2,1) + \\min(2,3) + \\min(2,2) + \\min(2,4) = 7 yen, which is within the budget of 8 yen.\n\nIf the subsidy limit is set to 3 yen, the total transportation subsidy for all N people is \\min(3,1) + \\min(3,3) + \\min(3,2) + \\min(3,4) = 9 yen, which exceeds the budget of 8 yen.\n\nTherefore, the maximum possible value of the subsidy limit is 2 yen."
            },
            {
              "input": "3 20\n5 3 2",
              "output": "infinite",
              "explanation": "The subsidy limit can be made infinitely large."
            },
            {
              "input": "10 23\n2 5 6 5 2 1 7 9 7 2",
              "output": "2",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc365_d",
          "problem_letter": "D",
          "url": "https://abc365.contest.atcoder.jp/tasks/abc365_d?lang=en",
          "statement": "Problem Statement: Takahashi never lost to Aoki. \n For i=1,2,\\ldots,N-1, Takahashi's move in the i -th game is different from his move in the (i+1) -th game.",
          "constraints": "Constraints: 1\\leq N\\leq2\\times10 ^ 5 \n S is a string of length N consisting ofR,P, andS. \n N is an integer.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS\n\nOutput: \n\nPrint the maximum number of games Takahashi could have won.",
          "samples": [
            {
              "input": "6\nPRSSRS",
              "output": "5",
              "explanation": "In the six games of rock-paper-scissors, Aoki played Paper, Rock, Scissors, Scissors, Rock, and Scissors.\n\nTakahashi can play Scissors, Paper, Rock, Scissors, Paper, and Rock to win the 1st, 2nd, 3rd, 5th, and 6th games.\n\nThere is no sequence of moves for Takahashi that satisfies the conditions and wins all six games, so print 5."
            },
            {
              "input": "10\nSSSSSSSSSS",
              "output": "5",
              "explanation": null
            },
            {
              "input": "24\nSPRPSRRRRRPPRPRPSSRSPRSS",
              "output": "18",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc365_e",
          "problem_letter": "E",
          "url": "https://abc365.contest.atcoder.jp/tasks/abc365_e?lang=en",
          "statement": "Problem Statement: In the binary representation of A \\oplus B, the digit at the 2^k ( k \\geq 0) position is 1 if and only if exactly one of the digits at the 2^k position in the binary representations of A and B is 1 ; otherwise, it is 0.",
          "constraints": "Constraints: 2 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq A_i \\leq 10^8 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_{N}\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3\n1 3 2",
              "output": "3",
              "explanation": "A_1 \\oplus A_2 = 2, A_1 \\oplus A_2 \\oplus A_3 = 0, and A_2 \\oplus A_3 = 1, so the answer is 2 + 0 + 1 = 3."
            },
            {
              "input": "7\n2 5 6 5 2 1 7",
              "output": "83",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc365_f",
          "problem_letter": "F",
          "url": "https://abc365.contest.atcoder.jp/tasks/abc365_f?lang=en",
          "statement": "Problem Statement: If cell (x+1,y) is an empty cell, move to cell (x+1,y). \n If cell (x-1,y) is an empty cell, move to cell (x-1,y). \n If cell (x,y+1) is an empty cell, move to cell (x,y+1). \n If cell (x,y-1) is an empty cell, move to cell (x,y-1).",
          "constraints": "Constraints: 1\\leq N\\leq2\\times10 ^ 5 \n 1\\leq L _ i\\leq U _ i\\leq10 ^ 9\\ (1\\leq i\\leq N) \n \\lbrack L _ i,U _ i\\rbrack\\cap\\lbrack L _ {i+1},U _ {i+1}\\rbrack\\neq\\emptyset\\ (1\\leq i\\lt N) \n 1\\leq Q\\leq2\\times10 ^ 5 \n 1\\leq s _ {x,i}\\leq N and L _ {s _ {x,i}}\\leq s _ {y,i}\\leq U _ {s _ {x,i}}\\ (1\\leq i\\leq Q) \n 1\\leq t _ {x,i}\\leq N and L _ {t _ {x,i}}\\leq t _ {y,i}\\leq U _ {t _ {x,i}}\\ (1\\leq i\\leq Q) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nL _ 1\nU _ 1\nL _ 2\nU _ 2\n\\vdots\nL _ N\nU _ N\nQ\ns _ {x,1}\ns _ {y,1}\nt _ {x,1}\nt _ {y,1}\ns _ {x,2}\ns _ {y,2}\nt _ {x,2}\nt _ {y,2}\n\\vdots\ns _ {x,Q}\ns _ {y,Q}\nt _ {x,Q}\nt _ {y,Q}\n\nOutput: \n\nPrint Q lines.\nThe i -th line (1\\leq i\\leq Q) should contain the answer to the i -th query.",
          "samples": [
            {
              "input": "7\n1 5\n3 3\n1 3\n1 1\n1 4\n2 4\n3 5\n3\n1 4 6 3\n1 4 1 1\n7 5 1 5",
              "output": "10\n3\n14",
              "explanation": "The given cells are as follows.\n\n\n\nFor the first query, for example, Takahashi can move from cell (1,4) to cell (6,3) in ten actions as follows.\n\n\n\nIt is impossible to move from cell (1,4) to cell (6,3) in nine or fewer actions, so print 10."
            },
            {
              "input": "12\n1 1000000000\n1000000000 1000000000\n1 1000000000\n1 1\n1 1000000000\n1000000000 1000000000\n1 1000000000\n1 1\n1 1000000000\n1000000000 1000000000\n1 1000000000\n1 1\n1\n1 1 12 1",
              "output": "6000000005",
              "explanation": "Note that the output value may not fit in a 32 -bit integer."
            },
            {
              "input": "10\n1694 7483\n3396 5566\n2567 6970\n1255 3799\n2657 3195\n3158 8007\n3368 8266\n1447 6359\n5365 8614\n3141 7245\n15\n3 3911 6 4694\n7 5850 10 4641\n1 5586 6 4808\n2 3401 8 2676\n3 3023 6 6923\n8 4082 3 6531\n6 3216 7 6282\n8 5121 8 3459\n8 4388 1 6339\n6 6001 3 6771\n10 5873 8 5780\n1 6512 6 6832\n8 5345 7 4975\n10 4010 8 2355\n7 5837 9 6279",
              "output": "2218\n1212\n4009\n1077\n3903\n4228\n3067\n1662\n4344\n6385\n95\n6959\n371\n4367\n444",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc365_g",
          "problem_letter": "G",
          "url": "https://abc365.contest.atcoder.jp/tasks/abc365_g?lang=en",
          "statement": "Problem Statement: \n\nN people work at the AtCoder office.\n\nThe office keeps records of entries and exits, and there have been M entries and exits since the records began.\n\nThe i -th (1\\leq i\\leq M) record is represented by a pair of integers (T_i, P_i), indicating that at time T_i, the P_i -th person either entered the office if they were outside, or exited the office if they were inside.\n\nIt is known that all people were outside the office at the beginning of the records, and they are outside now.\n\nAnswer Q queries in the following format.\n\nFor the i -th (1\\leq i\\leq Q) query, you are given a pair of integers (A_i, B_i). Find the total length of the periods during which both the A_i -th and B_i -th persons were inside the office since the records began.",
          "constraints": "Constraints: 2\\leq N\\leq2\\times10^5 \n 2\\leq M\\leq2\\times10^5 \n 1\\leq T_1\\lt T_2\\lt\\dotsb\\lt T_M\\leq10^9 \n 1\\leq P_i\\leq N\\ (1\\leq i\\leq M) \n For every 1\\leq p\\leq N, the number of indices i such that P_i=p is even. \n 1\\leq Q\\leq2\\times10^5 \n 1\\leq A_i\\lt B_i\\leq N\\ (1\\leq i\\leq Q) \n All inputs are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nT_1\nP_1\nT_2\nP_2\n\\vdots\nT_M\nP_M\nQ\nA_1\nB_1\nA_2\nB_2\n\\vdots\nA_Q\nB_Q\n\nOutput: \n\nPrint Q lines.\nThe i -th line (1\\leq i\\leq Q) should contain the answer to the i -th query.",
          "samples": [
            {
              "input": "3 8\n10 1\n20 2\n30 1\n40 3\n60 3\n70 1\n80 2\n90 1\n3\n1 2\n1 3\n2 3",
              "output": "20\n0\n20",
              "explanation": "The following diagram shows the time each of the three people spent inside the office.\n\n\n\nThe answers to each query are as follows:\n\nThe 1st and 2nd persons were both inside the office from time 20 to time 30 and from time 70 to time 80. The lengths of these two periods are both 10, so print the total, which is 20. \n The 1st and 3rd persons were never inside the office at the same time, so print 0. \n The 2nd and 3rd persons were both inside the office from time 40 to time 60. The length of this period is 20, so print 20."
            },
            {
              "input": "10 20\n10257 9\n10490 4\n19335 1\n25893 5\n32538 9\n33433 3\n38522 9\n40629 9\n42896 5\n52106 1\n53024 3\n55610 5\n56721 9\n58286 9\n63128 3\n70513 3\n70977 4\n74936 5\n79883 9\n95116 9\n7\n1 3\n3 9\n1 9\n4 9\n1 5\n5 9\n3 5",
              "output": "18673\n2107\n15310\n25720\n17003\n10317\n16848",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc366",
      "url": "https://abc366.contest.atcoder.jp/?lang=en",
      "start_time": "2024-08-10T12:00:00",
      "problems": [
        {
          "id": "abc366_a",
          "problem_letter": "A",
          "url": "https://abc366.contest.atcoder.jp/tasks/abc366_a?lang=en",
          "statement": "Problem Statement: \n\nA mayoral election is being held in AtCoder City. The candidates are Takahashi and Aoki.\n\nThere are N valid votes cast for either of the two candidates, and the counting is currently underway. Here, N is an odd number.\n\nThe current vote count is T votes for Takahashi and A votes for Aoki.\n\nDetermine if the outcome of the election is already decided at this point.",
          "constraints": "Constraints: 1 \\leq N \\leq 99 \n N is an odd number. \n 0 \\leq T, A \\leq N \n T + A \\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from standard input in the following format:\n\nN\nT\nA\n\nOutput: \n\nPrintYes if the outcome of the election is already decided, andNo otherwise.",
          "samples": [
            {
              "input": "7 4 2",
              "output": "Yes",
              "explanation": "Even if the remaining one vote goes to Aoki, Takahashi will still win. That is, his victory is decided, so printYes."
            },
            {
              "input": "99 12 48",
              "output": "No",
              "explanation": "Although Aoki currently has more votes, Takahashi would win if he receives the remaining 39 votes. Therefore, printNo."
            },
            {
              "input": "1 0 0",
              "output": "No",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc366_b",
          "problem_letter": "B",
          "url": "https://abc366.contest.atcoder.jp/tasks/abc366_b?lang=en",
          "statement": "Problem Statement: Each T_i consists of lowercase English letters and*. \n Each T_i does not end with*. \n For each 1 \\leq i \\leq N, the following holds:For each1 \\leq j \\leq |S_i|, the(N-i+1)-th character ofT_jexists, and the concatenation of the(N-i+1)-th characters ofT_1, T_2, \\dots, T_{|S_i|}in this order equalsS_i.For each|S_i| + 1 \\leq j \\leq M, the(N-i+1)-th character ofT_jeither does not exist or is*. \n For each 1 \\leq j \\leq |S_i|, the (N-i+1) -th character of T_j exists, and the concatenation of the (N-i+1) -th characters of T_1, T_2, \\dots, T_{|S_i|} in this order equals S_i. \n For each |S_i| + 1 \\leq j \\leq M, the (N-i+1) -th character of T_j either does not exist or is*.",
          "constraints": "Constraints: N is an integer between 1 and 100, inclusive. \n Each S_i is a string of lowercase English letters with length between 1 and 100, inclusive.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS_1\nS_2\n\\vdots\nS_N\n\nOutput: \n\nPrint the answer in the following format:\n\nT_1\nT_2\n\\vdots\nT_M",
          "samples": [
            {
              "input": "3\nabc\nde\nfghi",
              "output": "fda\ngeb\nh*c\ni",
              "explanation": "Placing*as the 2nd character of T_3 puts thecin the correct position.\nOn the other hand, placing*as the 2nd and 3rd characters of T_4 would make T_4 end with*, which violates the condition."
            },
            {
              "input": "3\natcoder\nbeginner\ncontest",
              "output": "cba\noet\nngc\ntio\nend\nsne\nter\n*r",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc366_c",
          "problem_letter": "C",
          "url": "https://abc366.contest.atcoder.jp/tasks/abc366_c?lang=en",
          "statement": "Problem Statement: 1 x: Put one ball with the integer x written on it into the bag. \n 2 x: Remove one ball with the integer x written on it from the bag and discard it. It is guaranteed that the bag has a ball with the integer x written on it when this query is given. \n 3: Print the number of different integers written on the balls in the bag.",
          "constraints": "Constraints: 1 \\leq Q \\leq 2 \\times 10^{5} \n 1 \\leq x \\leq 10^{6} \n When a query of the second type is given, the bag has a ball with the integer x written on it. \n There is at least one query of the third type. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nQ\n\\text{query}_1\n\\text{query}_2\n\\vdots\n\\text{query}_Q\n\nThe i -th query \\text{query}_i is given in one of the following three formats:\n\n1\nx\n\n2\nx\n\n3\n\nOutput: \n\nIf there are K queries of the third type, print K lines.\nThe i -th line (1 \\leq i \\leq K) should contain the answer to the i -th query of the third type.",
          "samples": [
            {
              "input": "8\n1 3\n1 1\n1 4\n3\n2 1\n3\n1 5\n3",
              "output": "3\n2\n3",
              "explanation": "Initially, the bag is empty.\n\nFor the first query1 3, a ball with the integer 3 written on it enters the bag.\n\nFor the second query1 1, a ball with the integer 1 written on it enters the bag.\n\nFor the third query1 4, a ball with the integer 4 written on it enters the bag.\n\nFor the fourth query3, the bag has balls with the integers 1, 3, 4, so print 3.\n\nFor the fifth query2 1, a ball with the integer 1 written on it is removed from the bag.\n\nFor the sixth query3, the bag has balls with the integers 3, 4, so print 2.\n\nFor the seventh query1 5, a ball with the integer 5 written on it enters the bag.\n\nFor the eighth query3, the bag has balls with the integers 3, 4, 5, so print 3."
            },
            {
              "input": "8\n1 2\n1 2\n3\n2 2\n1 4\n1 4\n2 2\n3",
              "output": "1\n1",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc366_d",
          "problem_letter": "D",
          "url": "https://abc366.contest.atcoder.jp/tasks/abc366_d?lang=en",
          "statement": "Problem Statement: \n\nYou are given a positive integer N, and an integer A_{x,y,z} for each triple of integers (x, y, z) such that 1 \\leq x, y, z \\leq N.\n\nYou will be given Q queries in the following format, which must be processed in order.\n\nFor the i -th query (1 \\leq i \\leq Q), you are given a tuple of integers (Lx_i, Rx_i, Ly_i, Ry_i, Lz_i, Rz_i) such that 1 \\leq Lx_i \\leq Rx_i \\leq N, 1 \\leq Ly_i \\leq Ry_i \\leq N, and 1 \\leq Lz_i \\leq Rz_i \\leq N. Find:\n\n\\displaystyle{\\sum_{x=Lx_i}^{Rx_i} \\sum_{y=Ly_i}^{Ry_i} \\sum_{z=Lz_i}^{Rz_i} A_{x,y,z}}.",
          "constraints": "Constraints: 1 \\leq N \\leq 100 \n 1 \\leq Q \\leq 2 \\times 10^{5} \n 0 \\leq A_{x,y,z} \\leq 999 (1 \\leq x, y, z \\leq N) \n 1 \\leq Lx_i \\leq Rx_i \\leq N (1 \\leq i \\leq Q) \n 1 \\leq Ly_i \\leq Ry_i \\leq N (1 \\leq i \\leq Q) \n 1 \\leq Lz_i \\leq Rz_i \\leq N (1 \\leq i \\leq Q) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_{1,1,1}\nA_{1,1,2}\n...\nA_{1,1,N}\nA_{1,2,1}\nA_{1,2,2}\n...\nA_{1,2,N}\n\\vdots\nA_{1,N,1}\nA_{1,N,2}\n...\nA_{1,N,N}\nA_{2,1,1}\nA_{2,1,2}\n...\nA_{2,1,N}\nA_{2,2,1}\nA_{2,2,2}\n...\nA_{2,2,N}\n\\vdots\nA_{2,N,1}\nA_{2,N,2}\n...\nA_{2,N,N}\n\\vdots\nA_{N,1,1}\nA_{N,1,2}\n...\nA_{N,1,N}\nA_{N,2,1}\nA_{N,2,2}\n...\nA_{N,2,N}\n\\vdots\nA_{N,N,1}\nA_{N,N,2}\n...\nA_{N,N,N}\nQ\nLx_1\nRx_1\nLy_1\nRy_1\nLz_1\nRz_1\nLx_2\nRx_2\nLy_2\nRy_2\nLz_2\nRz_2\n\\vdots\nLx_Q\nRx_Q\nLy_Q\nRy_Q\nLz_Q\nRz_Q\n\nOutput: \n\nPrint Q lines.\nThe i -th line should contain the answer to the i -th query.",
          "samples": [
            {
              "input": "2\n1 2\n3 4\n5 6\n7 8\n2\n1 2 2 2 1 1\n2 2 1 2 1 2",
              "output": "10\n26",
              "explanation": "For the 1st query, the sought value is A_{1,2,1} + A_{2,2,1} = 3 + 7 = 10. Thus, print 10.\n\nFor the 2nd query, the sought value is A_{2,1,1} + A_{2,1,2} + A_{2,2,1} + A_{2,2,2} = 5 + 6 + 7 + 8 = 26. Thus, print 26."
            },
            {
              "input": "3\n733 857 714\n956 208 257\n123 719 648\n840 881 245\n245 112 746\n306 942 694\n58 870 849\n13 208 789\n687 906 783\n8\n3 3 3 3 1 1\n1 3 2 3 3 3\n2 2 2 3 1 1\n1 3 1 1 1 1\n2 3 2 3 2 3\n1 2 1 1 1 2\n3 3 2 2 1 3\n1 2 2 3 2 3",
              "output": "687\n3917\n551\n1631\n5180\n3311\n1010\n4326",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc366_e",
          "problem_letter": "E",
          "url": "https://abc366.contest.atcoder.jp/tasks/abc366_e?lang=en",
          "statement": "Problem Statement: \n\nYou are given N points (x_1, y_1), (x_2, y_2), ..., (x_N, y_N) on a two-dimensional plane, and a non-negative integer D.\n\nFind the number of integer pairs (x, y) such that \\displaystyle \\sum_{i=1}^N (|x-x_i|+|y-y_i|) \\leq D.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n 0 \\leq D \\leq 10^6 \n -10^6 \\leq x_i, y_i \\leq 10^6 \n (x_i, y_i) \\neq (x_j, y_j) for i \\neq j. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nD\nx_1\ny_1\nx_2\ny_2\n\\vdots\nx_N\ny_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "2 3\n0 0\n1 0",
              "output": "8",
              "explanation": "The following figure visualizes the input and the answer for Sample 1. The blue points represent the input. The blue and red points, eight in total, satisfy the condition in the statement.\n\n"
            },
            {
              "input": "2 0\n0 0\n2 0",
              "output": "0",
              "explanation": null
            },
            {
              "input": "6 100\n9 -6\n10 -1\n2 10\n-1 7\n-7 5\n-1 -4",
              "output": "419",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc366_f",
          "problem_letter": "F",
          "url": "https://abc366.contest.atcoder.jp/tasks/abc366_f?lang=en",
          "statement": "Problem Statement: \n\nYou are given N linear functions f_1, f_2, ..., f_N, where f_i(x) = A_i x + B_i.\n\nFind the maximum possible value of f_{p_1}(f_{p_2}(... f_{p_K}(1) ... )) for a sequence p = (p_1, p_2, ..., p_K) of Kdistinct integers between 1 and N, inclusive.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^{5} \n 1 \\leq K \\leq \\text{min}(N,10) \n 1 \\leq A_i, B_i \\leq 50 (1 \\leq i \\leq N) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nA_1\nB_1\nA_2\nB_2\n\\vdots\nA_N\nB_N\n\nOutput: \n\nPrint the answer as an integer.",
          "samples": [
            {
              "input": "3 2\n2 3\n1 5\n4 2",
              "output": "26",
              "explanation": "Here are all possible p and the corresponding values of f_{p_1}(f_{p_2}(1)) :\n\nTherefore, print 26.\n\np= ( 1,2 ) : f_1(f_2(1))=15 \n p= ( 1,3 ) : f_1(f_3(1))=15 \n p= ( 2,1 ) : f_2(f_1(1))=10 \n p= ( 2,3 ) : f_2(f_3(1))=11 \n p= ( 3,1 ) : f_3(f_1(1))=22 \n p= ( 3,2 ) : f_3(f_2(1))=26"
            },
            {
              "input": "10 3\n48 40\n34 22\n24 37\n45 40\n48 31\n49 44\n45 40\n44 6\n35 22\n39 28",
              "output": "216223",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc366_g",
          "problem_letter": "G",
          "url": "https://abc366.contest.atcoder.jp/tasks/abc366_g?lang=en",
          "statement": "Problem Statement: For every vertex v with a degree of at least 1, the total XOR of the numbers written on its adjacent vertices (excluding v itself) is 0. \n In the binary representation of A \\oplus B, the bit at position 2^k \\, (k \\geq 0) is 1 if and only if exactly one of the bits at position 2^k in the binary representations of A and B is 1. Otherwise, it is 0.",
          "constraints": "Constraints: 1 \\leq N \\leq 60 \n 0 \\leq M \\leq N(N-1)/2 \n 1 \\leq u_i < v_i \\leq N \n (u_i, v_i) \\neq (u_j, v_j) for i \\neq j. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nu_1\nv_1\nu_2\nv_2\n\\vdots\nu_M\nv_M\n\nOutput: \n\nIf there is no way to write integers satisfying the condition, printNo.\n\nOtherwise, let X_v be the integer written on vertex v, and print your solution in the following format. If multiple solutions exist, any of them will be accepted.\n\nYesX_1\nX_2\n...\nX_N",
          "samples": [
            {
              "input": "3 3\n1 2\n1 3\n2 3",
              "output": "Yes\n4 4 4",
              "explanation": "Other acceptable solutions include writing (2,2,2) or (3,3,3)."
            },
            {
              "input": "2 1\n1 2",
              "output": "No",
              "explanation": null
            },
            {
              "input": "1 0",
              "output": "Yes\n1",
              "explanation": "Any integer between 1 and 2^{60} - 1 can be written."
            },
            {
              "input": "4 5\n1 2\n1 3\n2 3\n2 4\n3 4",
              "output": "Yes\n12 4 4 8",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc367",
      "url": "https://abc367.contest.atcoder.jp/?lang=en",
      "start_time": "2024-08-17T12:00:00",
      "problems": [
        {
          "id": "abc367_a",
          "problem_letter": "A",
          "url": "https://abc367.contest.atcoder.jp/tasks/abc367_a?lang=en",
          "statement": "Problem Statement: \n\nIn the Kingdom of AtCoder, residents are required to shout their love for takoyaki at A o'clock every day.\n\nTakahashi, who lives in the Kingdom of AtCoder, goes to bed at B o'clock and wakes up at C o'clock every day (in the 24 -hour clock). He can shout his love for takoyaki when he is awake, but cannot when he is asleep. Determine whether he can shout his love for takoyaki every day. Here, a day has 24 hours, and his sleeping time is less than 24 hours.",
          "constraints": "Constraints: 0\\leq A,B,C\\lt 24 \n A, B, and C are pairwise different. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nA\nB\nC\n\nOutput: \n\nPrintYes if Takahashi can shout his love for takoyaki every day, andNo otherwise.",
          "samples": [
            {
              "input": "21 8 14",
              "output": "Yes",
              "explanation": "Takahashi goes to bed at 8 o'clock and wakes up at 14 o'clock every day. He is awake at 21 o'clock, so he can shout his love for takoyaki every day. Therefore, printYes."
            },
            {
              "input": "0 21 7",
              "output": "No",
              "explanation": "Takahashi goes to bed at 21 o'clock and wakes up at 7 o'clock every day. He is not awake at 0 o'clock, so he cannot shout his love for takoyaki every day. Therefore, printNo."
            },
            {
              "input": "10 7 17",
              "output": "No",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc367_b",
          "problem_letter": "B",
          "url": "https://abc367.contest.atcoder.jp/tasks/abc367_b?lang=en",
          "statement": "Problem Statement: The decimal part must not have trailing0s. \n There must not be an unnecessary trailing decimal point.",
          "constraints": "Constraints: 0 \\le X < 100 \n X is given to the third decimal place.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nX\n\nOutput: \n\nOutput the answer.",
          "samples": [
            {
              "input": "1.012",
              "output": "1.012",
              "explanation": "1.012can be printed as it is."
            },
            {
              "input": "12.340",
              "output": "12.34",
              "explanation": "Printing12.340without the trailing0results in12.34."
            },
            {
              "input": "99.900",
              "output": "99.9",
              "explanation": "Printing99.900without the trailing0s results in99.9."
            },
            {
              "input": "0.000",
              "output": "0",
              "explanation": "Printing0.000without trailing0s or an unnecessary decimal point results in0."
            }
          ]
        },
        {
          "id": "abc367_c",
          "problem_letter": "C",
          "url": "https://abc367.contest.atcoder.jp/tasks/abc367_c?lang=en",
          "statement": "Problem Statement: The i -th element is between 1 and R_i, inclusive. \n The sum of all elements is a multiple of K. \n |A|<|B| and (A_{1},\\ldots,A_{|A|}) = (B_1,\\ldots,B_{|A|}). \n There exists an integer 1\\leq i\\leq \\min\\{|A|,|B|\\} such that both of the following are true:(A_{1},\\ldots,A_{i-1}) = (B_1,\\ldots,B_{i-1})A_i < B_i \n (A_{1},\\ldots,A_{i-1}) = (B_1,\\ldots,B_{i-1}) \n A_i < B_i",
          "constraints": "Constraints: All input values are integers. \n 1 \\le N \\le 8 \n 2 \\le K \\le 10 \n 1 \\le R_i \\le 5",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nR_1\nR_2\n...\nR_N\n\nOutput: \n\nPrint the answer in the following format, where X is the number of sequences to print, the i -th of which is A_i=(A_{i,1},A_{i,2},...,A_{i,N}) :\n\nA_{1,1}\nA_{1,2}\n...\nA_{1,N}\nA_{2,1}\nA_{2,2}\n...\nA_{2,N}\n\\vdots\nA_{X,1}\nA_{X,2}\n...\nA_{X,N}",
          "samples": [
            {
              "input": "3 2\n2 1 3",
              "output": "1 1 2\n2 1 1\n2 1 3",
              "explanation": "There are three sequences to be printed, which are (1,1,2),(2,1,1),(2,1,3) in lexicographical order."
            },
            {
              "input": "1 2\n1",
              "output": "",
              "explanation": "There may be no sequences to print.In this case, the output can be empty."
            },
            {
              "input": "5 5\n2 3 2 3 2",
              "output": "1 1 1 1 1\n1 2 2 3 2\n1 3 1 3 2\n1 3 2 2 2\n1 3 2 3 1\n2 1 2 3 2\n2 2 1 3 2\n2 2 2 2 2\n2 2 2 3 1\n2 3 1 2 2\n2 3 1 3 1\n2 3 2 1 2\n2 3 2 2 1",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc367_d",
          "problem_letter": "D",
          "url": "https://abc367.contest.atcoder.jp/tasks/abc367_d?lang=en",
          "statement": "Problem Statement: \n\nThere are N rest areas around a lake. The rest areas are numbered 1, 2, ..., N in clockwise order. It takes A_i steps to walk clockwise from rest area i to rest area i+1 (where rest area N+1 refers to rest area 1). The minimum number of steps required to walk clockwise from rest area s to rest area t ( s \\neq t) is a multiple of M. Find the number of possible pairs (s,t).",
          "constraints": "Constraints: All input values are integers \n 2 \\le N \\le 2 \\times 10^5 \n 1 \\le A_i \\le 10^9 \n 1 \\le M \\le 10^6",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the answer as an integer.",
          "samples": [
            {
              "input": "4 3\n2 1 4 3",
              "output": "4",
              "explanation": "Therefore, there are four possible pairs (s,t).\n\nThe minimum number of steps to walk clockwise from rest area 1 to rest area 2 is 2, which is not a multiple of 3. \n The minimum number of steps to walk clockwise from rest area 1 to rest area 3 is 3, which is a multiple of 3. \n The minimum number of steps to walk clockwise from rest area 1 to rest area 4 is 7, which is not a multiple of 3. \n The minimum number of steps to walk clockwise from rest area 2 to rest area 3 is 1, which is not a multiple of 3. \n The minimum number of steps to walk clockwise from rest area 2 to rest area 4 is 5, which is not a multiple of 3. \n The minimum number of steps to walk clockwise from rest area 2 to rest area 1 is 8, which is not a multiple of 3. \n The minimum number of steps to walk clockwise from rest area 3 to rest area 4 is 4, which is not a multiple of 3. \n The minimum number of steps to walk clockwise from rest area 3 to rest area 1 is 7, which is not a multiple of 3. \n The minimum number of steps to walk clockwise from rest area 3 to rest area 2 is 9, which is a multiple of 3. \n The minimum number of steps to walk clockwise from rest area 4 to rest area 1 is 3, which is a multiple of 3. \n The minimum number of steps to walk clockwise from rest area 4 to rest area 2 is 5, which is not a multiple of 3. \n The minimum number of steps to walk clockwise from rest area 4 to rest area 3 is 6, which is a multiple of 3."
            },
            {
              "input": "2 1000000\n1 1",
              "output": "0",
              "explanation": null
            },
            {
              "input": "9 5\n9 9 8 2 4 4 3 5 3",
              "output": "11",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc367_e",
          "problem_letter": "E",
          "url": "https://abc367.contest.atcoder.jp/tasks/abc367_e?lang=en",
          "statement": "Problem Statement: Replace A with B such that B_i = A_{X_i}.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le N \\le 2 \\times 10^5 \n 0 \\le K \\le 10^{18} \n 1 \\le X_i \\le N \n 1 \\le A_i \\le 2 \\times 10^5",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nX_1\nX_2\n...\nX_N\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nLet A' be the sequence A after the operations. Print it in the following format:\n\nA'_1\nA'_2\n...\nA'_N",
          "samples": [
            {
              "input": "7 3\n5 2 6 3 1 4 6\n1 2 3 5 7 9 11",
              "output": "7 2 3 5 1 9 3",
              "explanation": "In this input, X=(5,2,6,3,1,4,6) and the initial sequence is A=(1,2,3,5,7,9,11).\n\nAfter one operation, the sequence is (7,2,9,3,1,5,9). \n After two operations, the sequence is (1,2,5,9,7,3,5). \n After three operations, the sequence is (7,2,3,5,1,9,3)."
            },
            {
              "input": "4 0\n3 4 1 2\n4 3 2 1",
              "output": "4 3 2 1",
              "explanation": "There may be cases where no operations are performed."
            },
            {
              "input": "9 1000000000000000000\n3 7 8 5 9 3 7 4 2\n9 9 8 2 4 4 3 5 3",
              "output": "3 3 3 3 3 3 3 3 3",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc367_f",
          "problem_letter": "F",
          "url": "https://abc367.contest.atcoder.jp/tasks/abc367_f?lang=en",
          "statement": "Problem Statement: You are given positive integers l_i,r_i,L_i,R_i. PrintYesif it is possible to rearrange the subsequence (A_{l_i},A_{l_i+1},\\ldots,A_{r_i}) to match the subsequence (B_{L_i},B_{L_i+1},\\ldots,B_{R_i}), andNootherwise.",
          "constraints": "Constraints: 1\\leq N,Q\\leq 2\\times 10^5 \n 1\\leq A_i,B_i\\leq N \n 1\\leq l_i \\leq r_i\\leq N \n 1\\leq L_i \\leq R_i\\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nQ\nA_1\nA_2\n...\nA_N\nB_1\nB_2\n...\nB_N\nl_1\nr_1\nL_1\nR_1\nl_2\nr_2\nL_2\nR_2\n\\vdots\nl_Q\nr_Q\nL_Q\nR_Q\n\nOutput: \n\nPrint Q lines. The i -th line should contain the answer to the i -th query.",
          "samples": [
            {
              "input": "5 4\n1 2 3 2 4\n2 3 1 4 2\n1 3 1 3\n1 2 3 5\n1 4 2 5\n1 5 1 5",
              "output": "Yes\nNo\nNo\nYes",
              "explanation": "For the 1st query, it is possible to rearrange (1,2,3) to match (2,3,1). Hence, we printYes. \n For the 2nd query, it is impossible to rearrange (1,2) in any way to match (1,4,2). Hence, we printNo. \n For the 3rd query, it is impossible to rearrange (1,2,3,2) in any way to match (3,1,4,2). Hence, we printNo. \n For the 4th query, it is possible to rearrange (1,2,3,2,4) to match (2,3,1,4,2). Hence, we printYes."
            },
            {
              "input": "4 4\n4 4 4 4\n4 4 4 4\n1 2 2 3\n3 3 1 1\n1 3 1 4\n1 4 2 3",
              "output": "Yes\nYes\nNo\nNo",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc367_g",
          "problem_letter": "G",
          "url": "https://abc367.contest.atcoder.jp/tasks/abc367_g?lang=en",
          "statement": "Problem Statement: If the length of B is a multiple of M : (B_1 \\oplus B_2 \\oplus \\dots \\oplus B_{|B|})^K \n Otherwise: 0 \n In the binary representation of A \\oplus B, the digit at position 2^k ( k \\geq 0) is 1 if exactly one of A and B has a 1 in that position in their binary representations, and 0 otherwise.",
          "constraints": "Constraints: 1 \\leq N,K \\leq 2 \\times 10^5 \n 1 \\leq M \\leq 100 \n 0 \\leq A_i < 2^{20} \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nK\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3 2 2\n1 2 3",
              "output": "14",
              "explanation": "Here are the scores of the 2^3-1=7 non-empty subsequences of A.\n\nTherefore, the sought sum is 0+0+0+9+4+1+0=14.\n\n(1) : 0 \n (2) : 0 \n (3) : 0 \n (1,2) : (1\\oplus2)^2=9 \n (1,3) : (1\\oplus3)^2=4 \n (2,3) : (2\\oplus3)^2=1 \n (1,2,3) : 0"
            },
            {
              "input": "10 5 3\n100 100 100 100 100 100 100 100 100 100",
              "output": "252000000",
              "explanation": null
            },
            {
              "input": "16 4 100\n7053 3876 3178 8422 7802 5998 2334 6757 6889 6637 7365 9495 7848 9026 7312 6558",
              "output": "432440016",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc368",
      "url": "https://abc368.contest.atcoder.jp/?lang=en",
      "start_time": "2024-08-24T12:00:00",
      "problems": [
        {
          "id": "abc368_a",
          "problem_letter": "A",
          "url": "https://abc368.contest.atcoder.jp/tasks/abc368_a?lang=en",
          "statement": "Problem Statement: \n\nThere is a stack of N cards, and the i -th card from the top has an integer A_i written on it.\n\nYou take K cards from the bottom of the stack and place them on top of the stack, maintaining their order.\n\nPrint the integers written on the cards from top to bottom after the operation.",
          "constraints": "Constraints: 1 \\leq K < N \\leq 100 \n 1 \\leq A_i \\leq 100 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nLet B_i be the integer written on the i -th card from the top of the stack after the operation. Print B_1,B_2,...,B_N in this order, separated by spaces.",
          "samples": [
            {
              "input": "5 3\n1 2 3 4 5",
              "output": "3 4 5 1 2",
              "explanation": "Initially, the integers written on the cards are 1,2,3,4,5 from top to bottom.\n\nAfter taking three cards from the bottom of the stack and placing them on top, the integers written on the cards become 3,4,5,1,2 from top to bottom."
            },
            {
              "input": "6 2\n1 2 1 2 1 2",
              "output": "1 2 1 2 1 2",
              "explanation": "The integers written on the cards are not necessarily distinct."
            }
          ]
        },
        {
          "id": "abc368_b",
          "problem_letter": "B",
          "url": "https://abc368.contest.atcoder.jp/tasks/abc368_b?lang=en",
          "statement": "Problem Statement: Sort A in descending order. Then, decrease both A_1 and A_2 by 1.",
          "constraints": "Constraints: 2 \\leq N \\leq 100 \n 1 \\leq A_i \\leq 100 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "4\n1 2 3 3",
              "output": "4",
              "explanation": "The process goes as follows:\n\nAfter the 1st operation, A is (2, 2, 2, 1). \n After the 2nd operation, A is (1, 1, 2, 1). \n After the 3rd operation, A is (1, 0, 1, 1). \n After the 4th operation, A is (0, 0, 1, 0). A no longer contains more than one positive elements, so the process ends here."
            },
            {
              "input": "3\n1 1 100",
              "output": "2",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc368_c",
          "problem_letter": "C",
          "url": "https://abc368.contest.atcoder.jp/tasks/abc368_c?lang=en",
          "statement": "Problem Statement: Increase T by 1. Then, attack the frontmost enemy with health 1 or more. If T is a multiple of 3, the enemy's health decreases by 3 ; otherwise, it decreases by 1.",
          "constraints": "Constraints: 1 \\leq N \\leq 2\\times 10^5 \n 1 \\leq H_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nH_1\nH_2\n...\nH_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3\n6 2 2",
              "output": "8",
              "explanation": "The actions are performed as follows:\n\nT becomes 1. Attack the 1st enemy, and its health becomes 6-1=5. \n T becomes 2. Attack the 1st enemy, and its health becomes 5-1=4. \n T becomes 3. Attack the 1st enemy, and its health becomes 4-3=1. \n T becomes 4. Attack the 1st enemy, and its health becomes 1-1=0. \n T becomes 5. Attack the 2nd enemy, and its health becomes 2-1=1. \n T becomes 6. Attack the 2nd enemy, and its health becomes 1-3=-2. \n T becomes 7. Attack the 3rd enemy, and its health becomes 2-1=1. \n T becomes 8. Attack the 3rd enemy, and its health becomes 1-1=0."
            },
            {
              "input": "9\n1 12 123 1234 12345 123456 1234567 12345678 123456789",
              "output": "82304529",
              "explanation": null
            },
            {
              "input": "5\n1000000000 1000000000 1000000000 1000000000 1000000000",
              "output": "3000000000",
              "explanation": "Beware of integer overflow."
            }
          ]
        },
        {
          "id": "abc368_d",
          "problem_letter": "D",
          "url": "https://abc368.contest.atcoder.jp/tasks/abc368_d?lang=en",
          "statement": "Problem Statement: \n\nYou are given a tree with N vertices numbered 1 to N. The i -th edge connects vertices A_i and B_i.\n\nConsider a tree that can be obtained by removing some (possibly zero) edges and vertices from this graph. Find the minimum number of vertices in such a tree that includes all of K specified vertices V_1,...,V_K.",
          "constraints": "Constraints: 1 \\leq K \\leq N \\leq 2\\times 10^5 \n 1 \\leq A_i,B_i \\leq N \n 1 \\leq V_1 < V_2 < \\ldots < V_K \\leq N \n The given graph is a tree. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nA_1\nB_1\n\\vdots\nA_{N-1}\nB_{N-1}\nV_1\n...\nV_K\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "7 3\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n1 3 5",
              "output": "4",
              "explanation": "The given tree is shown on the left in the figure below. The tree with the minimum number of vertices that includes all of vertices 1,3,5 is shown on the right.\n\n"
            },
            {
              "input": "4 4\n3 1\n1 4\n2 1\n1 2 3 4",
              "output": "4",
              "explanation": null
            },
            {
              "input": "5 1\n1 4\n2 3\n5 2\n1 2\n1",
              "output": "1",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc368_e",
          "problem_letter": "E",
          "url": "https://abc368.contest.atcoder.jp/tasks/abc368_e?lang=en",
          "statement": "Problem Statement: Condition: For all pairs (i,j) satisfying 1 \\leq i,j \\leq M, if B_i=A_j and T_i \\leq S_j, then T_i+X_i \\leq S_j+X_j.In other words, for any pair of trains that are originally possible to transfer between, it is still possible to transfer even after delaying the departure and arrival times of each trainibyX_i. \n In other words, for any pair of trains that are originally possible to transfer between, it is still possible to transfer even after delaying the departure and arrival times of each train i by X_i.",
          "constraints": "Constraints: 2 \\leq N \\leq 2\\times 10^5 \n 2 \\leq M \\leq 2\\times 10^5 \n 1 \\leq A_i,B_i \\leq N \n A_i \\neq B_i \n 0 \\leq S_i < T_i \\leq 10^9 \n 1 \\leq X_1 \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nX_1\nA_1\nB_1\nS_1\nT_1\n\\vdots\nA_M\nB_M\nS_M\nT_M\n\nOutput: \n\nPrint X_2,...,X_M that satisfy the condition with the minimum possible sum, in that order, separated by spaces.",
          "samples": [
            {
              "input": "3 6 15\n1 2 10 20\n1 2 20 30\n2 3 25 40\n2 3 35 50\n3 1 15 30\n3 1 45 60",
              "output": "0 10 0 0 5",
              "explanation": "The arrival of train 1 from city 1 to 2 is delayed by 15 and becomes time 35.To allow transfer from train 1 to 3 in city 2, the departure of train 3 is delayed by 10, making it depart at time 35 and arrive at time 50.Further, to allow transfer from train 3 to 6 in city 3, the departure of train 6 is delayed by 5, making it depart at time 50.Other trains can operate without delay while still allowing transfers between originally transferable trains, so (X_2,X_3,X_4,X_5,X_6)=(0,10,0,0,5) satisfies the condition.Moreover, there is no solution with a smaller sum that satisfies the condition, so this is the answer."
            },
            {
              "input": "10 9 100\n1 10 0 1\n10 2 1 100\n10 3 1 100\n10 4 1 100\n10 5 1 100\n10 6 1 100\n10 7 1 100\n10 8 1 100\n10 9 1 100",
              "output": "100 100 100 100 100 100 100 100",
              "explanation": null
            },
            {
              "input": "4 4 10\n1 2 0 1\n1 2 0 10\n2 3 100 200\n2 4 100 200",
              "output": "0 0 0",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc368_f",
          "problem_letter": "F",
          "url": "https://abc368.contest.atcoder.jp/tasks/abc368_f?lang=en",
          "statement": "Problem Statement: Choose an integer i \\ (1 \\leq i \\leq N) freely. Then, freely choose a positive divisor x of A_i that is not A_i itself, and replace A_i with x.",
          "constraints": "Constraints: 1 \\leq N \\leq 10^5 \n 2 \\leq A_i \\leq 10^5 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrintAnna if Anna wins the game, andBruno if Bruno wins.",
          "samples": [
            {
              "input": "3\n2 3 4",
              "output": "Anna",
              "explanation": "For example, the game might proceed as follows. Note that this example may not necessarily represent optimal play by both players:\n\nActually, for this sample, Anna always wins if she plays optimally.\n\nAnna changes A_3 to 2. \n Bruno changes A_1 to 1. \n Anna changes A_2 to 1. \n Bruno changes A_3 to 1. \n Anna cannot operate on her turn, so Bruno wins."
            },
            {
              "input": "4\n2 3 4 6",
              "output": "Bruno",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc368_g",
          "problem_letter": "G",
          "url": "https://abc368.contest.atcoder.jp/tasks/abc368_g?lang=en",
          "statement": "Problem Statement: Type 1 : Given in the form1 i x. Replace A_i with x. \n Type 2 : Given in the form2 i x. Replace B_i with x. \n Type 3 : Given in the form3 l r. Solve the following problem and print the answer.Initially, setv = 0. Fori = l, l+1, ..., rin this order, replacevwith eitherv + A_iorv \\times B_i. Find the maximum possible value ofvat the end. \n Initially, set v = 0. For i = l, l+1, ..., r in this order, replace v with either v + A_i or v \\times B_i. Find the maximum possible value of v at the end.",
          "constraints": "Constraints: 1 \\leq N \\leq 10^5 \n 1 \\leq A_i \\leq 10^9 \n 1 \\leq B_i \\leq 10^9 \n 1 \\leq Q \\leq 10^5 \n For type 1 and 2 queries, 1 \\leq i \\leq N. \n For type 1 and 2 queries, 1 \\leq x \\leq 10^9. \n For type 3 queries, 1 \\leq l \\leq r \\leq N. \n For type 3 queries, the value to be printed is at most 10^{18}.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\nB_1\nB_2\n...\nB_N\nQ\nquery_1\nquery_2\n\\vdots\nquery_Q\n\nHere, query_i is the i -th query, given in one of the following formats:\n\n1\ni\nx\n\n2\ni\nx\n\n3\nl\nr\n\nOutput: \n\nLet q be the number of type 3 queries. Print q lines. The i -th line should contain the answer to the i -th type 3 query.",
          "samples": [
            {
              "input": "3\n3 2 4\n1 2 2\n3\n3 1 3\n1 1 1\n3 1 3",
              "output": "12\n7",
              "explanation": "For the first query, the answer is ((0 + A_1) \\times B_2) \\times B_3 = 12.\nFor the third query, the answer is ((0 + A_1) + A_2) + A_3 = 7."
            },
            {
              "input": "6\n65 32 12 5 8 312\n4 1 3 15 16 2\n6\n3 2 6\n3 1 5\n1 5 6\n2 4 9\n3 2 6\n3 3 5",
              "output": "46080\n69840\n27648\n1728",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc369",
      "url": "https://abc369.contest.atcoder.jp/?lang=en",
      "start_time": "2024-08-31T12:00:00",
      "problems": [
        {
          "id": "abc369_a",
          "problem_letter": "A",
          "url": "https://abc369.contest.atcoder.jp/tasks/abc369_a?lang=en",
          "statement": "Problem Statement: Condition: It is possible to arrange the three integers A, B, and x in some order to form an arithmetic sequence.",
          "constraints": "Constraints: 1 \\leq A,B \\leq 100 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nA\nB\n\nOutput: \n\nPrint the number of integers x that satisfy the condition in the problem statement.\nIt can be proved that the answer is finite.",
          "samples": [
            {
              "input": "5 7",
              "output": "3",
              "explanation": "The integers x=3,6,9 all satisfy the condition as follows:\n\nConversely, there are no other values of x that satisfy the condition.\nTherefore, the answer is 3.\n\nWhen x=3, for example, arranging x,A,B forms the arithmetic sequence 3,5,7. \n When x=6, for example, arranging B,x,A forms the arithmetic sequence 7,6,5. \n When x=9, for example, arranging A,B,x forms the arithmetic sequence 5,7,9."
            },
            {
              "input": "6 1",
              "output": "2",
              "explanation": "Only x=-4 and 11 satisfy the condition."
            },
            {
              "input": "3 3",
              "output": "1",
              "explanation": "Only x=3 satisfies the condition."
            }
          ]
        },
        {
          "id": "abc369_b",
          "problem_letter": "B",
          "url": "https://abc369.contest.atcoder.jp/tasks/abc369_b?lang=en",
          "statement": "Problem Statement: \n\nTakahashi has a piano with 100 keys arranged in a row.\nThe i -th key from the left is called key i.\n\nHe will play music by pressing N keys one by one.\nFor the i -th press, he will press key A_i, using his left hand if S_i=L, and his right hand if S_i=R.\n\nBefore starting to play, he can place both of his hands on any keys he likes, and hisfatigue level at this point is 0.\nDuring the performance, if he moves one hand from key x to key y, the fatigue level increases by |y-x| (conversely, the fatigue level does not increase for any reason other than moving hands).\nTo press a certain key with a hand, that hand must be placed on that key.\n\nFind the minimum possible fatigue level at the end of the performance.",
          "constraints": "Constraints: 1 \\leq N \\leq 100 \n 1 \\leq A_i \\leq 100 \n N and A_i are integers. \n S_i isLorR.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nS_1\nA_2\nS_2\n\\vdots\nA_N\nS_N\n\nOutput: \n\nPrint the minimum fatigue level at the end of the performance.",
          "samples": [
            {
              "input": "4\n3 L\n6 R\n9 L\n1 R",
              "output": "11",
              "explanation": "For example, the performance can be done as follows:\n\nIn this case, the fatigue level at the end of the performance is 6+5 = 11, which is the minimum possible.\n\nInitially, place the left hand on key 3 and the right hand on key 6. \n Press key 3 with the left hand. \n Press key 6 with the right hand. \n Move the left hand from key 3 to key 9. The fatigue level increases by |9-3| = 6. \n Move the right hand from key 6 to key 1. The fatigue level increases by |1-6| = 5. \n Press key 9 with the left hand. \n Press key 1 with the right hand."
            },
            {
              "input": "3\n2 L\n2 L\n100 L",
              "output": "98",
              "explanation": null
            },
            {
              "input": "8\n22 L\n75 L\n26 R\n45 R\n72 R\n81 R\n47 L\n29 R",
              "output": "188",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc369_c",
          "problem_letter": "C",
          "url": "https://abc369.contest.atcoder.jp/tasks/abc369_c?lang=en",
          "statement": "Problem Statement: \n\nYou are given a sequence of N positive integers A=(A_1,A_2,...,A_N).\n\nFind the number of pairs of integers (l,r) satisfying 1\\leq l\\leq r\\leq N such that the subsequence (A_l,A_{l+1},...,A_r) forms an arithmetic progression.\n\nA sequence (x_1,x_2,...,x_{|x|}) is an arithmetic progression if and only if there exists a d such that x_{i+1}-x_i=d (1\\leq i < |x|).\nIn particular, a sequence of length 1 is always an arithmetic progression.",
          "constraints": "Constraints: 1\\leq N \\leq 2\\times 10^5 \n 1\\leq A_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "4\n3 6 9 3",
              "output": "8",
              "explanation": "There are eight pairs of integers (l,r) satisfying the condition: (1,1),(2,2),(3,3),(4,4),(1,2),(2,3),(3,4),(1,3).\n\nIndeed, when (l,r)=(1,3), (A_l,...,A_r)=(3,6,9) is an arithmetic progression, so it satisfies the condition.\nHowever, when (l,r)=(2,4), (A_l,...,A_r)=(6,9,3) is not an arithmetic progression, so it does not satisfy the condition."
            },
            {
              "input": "5\n1 1 1 1 1",
              "output": "15",
              "explanation": "All pairs of integers (l,r) (1\\leq l\\leq r\\leq 5) satisfy the condition."
            },
            {
              "input": "8\n87 42 64 86 72 58 44 30",
              "output": "22",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc369_d",
          "problem_letter": "D",
          "url": "https://abc369.contest.atcoder.jp/tasks/abc369_d?lang=en",
          "statement": "Problem Statement: If he lets a monster go, he gains 0 experience points. \n If he defeats a monster with strength X, he gains X experience points.If it is an even-numbered defeated monster (2nd, 4th, ...), he gains an additional X experience points.",
          "constraints": "Constraints: 1\\leq N\\leq 2\\times 10^5 \n 1\\leq A_i\\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the maximum total experience points he can gain from the N monsters as an integer.",
          "samples": [
            {
              "input": "5\n1 5 3 2 7",
              "output": "28",
              "explanation": "If Takahashi defeats the 1st, 2nd, 3rd, and 5th monsters, and lets the 4th monster go, he gains experience points as follows:\n\nTherefore, in this case, he gains 1+(5+5)+3+0+(7+7)=28 experience points.Note that even if he encounters a monster, if he lets it go, it does not count as defeated.\n\nHe can gain at most 28 experience points no matter how he acts, so print 28.As a side note, if he defeats all monsters in this case, he would gain 1+(5+5)+3+(2+2)+7=25 experience points.\n\nDefeats a monster with strength A_1=1. He gains 1 experience point. \n Defeats a monster with strength A_2=5. He gains 5 experience points. As it is the 2nd defeated monster, he gains an additional 5 points. \n Defeats a monster with strength A_3=3. He gains 3 experience points. \n Lets the 4th monster go. Takahashi gains no experience points. \n Defeats a monster with strength A_5=7. He gains 7 experience points. As it is the 4th defeated monster, he gains an additional 7 points."
            },
            {
              "input": "2\n1000000000 1000000000",
              "output": "3000000000",
              "explanation": "Beware that the answer may not fit in a 32 -bit integer."
            }
          ]
        },
        {
          "id": "abc369_e",
          "problem_letter": "E",
          "url": "https://abc369.contest.atcoder.jp/tasks/abc369_e?lang=en",
          "statement": "Problem Statement: \n\nThere are N islands and M bidirectional bridges connecting two islands. The islands and bridges are numbered 1, 2, ..., N and 1, 2, ..., M, respectively. Bridge i connects islands U_i and V_i, and the time it takes to cross it in either direction is T_i. No bridge connects an island to itself, but it is possible for two islands to be directly connected by more than one bridge. One can travel between any two islands using some bridges.\n\nYou are given Q queries, so answer each of them. The i -th query is as follows:\n\nYou are given K_i distinct bridges: bridges B_{i,1}, B_{i,2}, ..., B_{i,K_i}. Find the minimum time required to travel from island 1 to island N using each of these bridges at least once. Only consider the time spent crossing bridges. You can cross the given bridges in any order and in any direction.",
          "constraints": "Constraints: 2 \\leq N \\leq 400 \n N-1 \\leq M \\leq 2 \\times 10^5 \n 1 \\leq U_i < V_i \\leq N \n 1 \\leq T_i \\leq 10^9 \n 1 \\leq Q \\leq 3000 \n 1 \\leq K_i \\leq 5 \n 1 \\leq B_{i,1} < B_{i,2} < \\cdots < B_{i,K_i} \\leq M \n All input values are integers. \n It is possible to travel between any two islands using some bridges.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nU_1\nV_1\nT_1\nU_2\nV_2\nT_2\n\\vdots\nU_M\nV_M\nT_M\nQ\nK_1\nB_{1,1}\nB_{1,2}\n...\nB_{1,{K_1}}\nK_2\nB_{2,1}\nB_{2,2}\n...\nB_{2,{K_2}}\n\\vdots\nK_Q\nB_{Q,1}\nB_{Q,2}\n...\nB_{Q,{K_Q}}\n\nOutput: \n\nPrint Q lines. The i -th line ( 1 \\leq i \\leq Q) should contain the answer to the i -th query as an integer.",
          "samples": [
            {
              "input": "3 5\n1 2 10\n1 3 20\n1 3 30\n2 3 15\n2 3 25\n2\n1\n1\n2\n3 5",
              "output": "25\n70",
              "explanation": "For the first query, we need to find the minimum time to travel from island 1 to island 3 while using bridge 1.\nThe minimum time is achieved by using bridge 1 to move from island 1 to island 2, then using bridge 4 to move from island 2 to island 3. The time taken is 10 + 15 = 25.\nHence, print 25 on the first line.\n\nFor the second query, we need to find the minimum time to travel from island 1 to island 3 while using both bridges 3 and 5.\nThe minimum time is achieved by using bridge 3 to move from island 1 to island 3, then using bridge 5 to move to island 2, and finally using bridge 4 to return to island 3. The time taken is 30 + 25 + 15 = 70.\nHence, print 70 on the second line."
            },
            {
              "input": "6 6\n1 5 1\n2 5 1\n2 4 1\n3 4 1\n3 6 1\n1 6 1\n2\n5\n1 2 3 4 5\n1\n5",
              "output": "5\n3",
              "explanation": "For each query, you can cross the specified bridges in either direction."
            },
            {
              "input": "5 5\n1 2 1000000000\n2 3 1000000000\n3 4 1000000000\n4 5 1000000000\n1 5 1000000000\n1\n1\n3",
              "output": "4000000000",
              "explanation": "Beware that the answer may not fit in a 32 -bit integer."
            }
          ]
        },
        {
          "id": "abc369_f",
          "problem_letter": "F",
          "url": "https://abc369.contest.atcoder.jp/tasks/abc369_f?lang=en",
          "statement": "Problem Statement: \n\nThere is a grid with H rows and W columns.\nLet (i,j) denote the cell at the i -th row from the top and j -th column from the left.\n\nThere are N coins on this grid, and the i -th coin can be picked up by passing through the cell (R_i,C_i).\n\nYour goal is to start from cell (1,1), repeatedly move either down or right by one cell, and reach cell (H,W) while picking up as many coins as possible.\n\nFind the maximum number of coins you can pick up and one of the paths that achieves this maximum.",
          "constraints": "Constraints: 2\\leq H,W \\leq 2\\times 10^5 \n 1\\leq N \\leq \\min(HW-2, 2\\times 10^5) \n 1\\leq R_i \\leq H \n 1\\leq C_i \\leq W \n (R_i,C_i)\\neq (1,1) \n (R_i,C_i)\\neq (H,W) \n (R_i,C_i) are pairwise distinct. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nH\nW\nN\nR_1\nC_1\nR_2\nC_2\n\\vdots\nR_N\nC_N\n\nOutput: \n\nPrint two lines.\nThe first line should contain the maximum number of coins you can pick up.\nThe second line should contain one of the paths that achieves this maximum as a string of length H+W-2.\nThe i -th character of this string should beD if the i -th move is downward, andR if it is rightward.\n\nIf there are multiple paths that maximize the number of coins picked up, you may print any of them.",
          "samples": [
            {
              "input": "3 4 4\n3 3\n2 1\n2 3\n1 4",
              "output": "3\nDRRDR",
              "explanation": "\n\nAs shown in the figure above, by moving (1,1)\\rightarrow (2,1)\\rightarrow (2,2)\\rightarrow (2,3)\\rightarrow (3,3)\\rightarrow (3,4), you can pick up three coins at (2,1),(2,3),(3,3)."
            },
            {
              "input": "2 2 2\n2 1\n1 2",
              "output": "1\nDR",
              "explanation": "The pathRDis also acceptable."
            },
            {
              "input": "10 15 8\n2 7\n2 9\n7 9\n10 3\n7 11\n8 12\n9 6\n8 1",
              "output": "5\nDRRRRRRRRDDDDDRRDRDDRRR",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc369_g",
          "problem_letter": "G",
          "url": "https://abc369.contest.atcoder.jp/tasks/abc369_g?lang=en",
          "statement": "Problem Statement: First, Aoki specifies K distinct vertices on the tree. \n Then, Takahashi constructs a walk that starts and ends at vertex 1, and passes through all the vertices specified by Aoki.",
          "constraints": "Constraints: 2\\leq N\\leq 2\\times 10^5 \n 1\\leq U_i<V_i\\leq N \n 1\\leq L_i\\leq 10^9 \n All input values are integers. \n The given graph is a tree.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nU_1\nV_1\nL_1\nU_2\nV_2\nL_2\n\\vdots\nU_{N-1}\nV_{N-1}\nL_{N-1}\n\nOutput: \n\nPrint N lines.\nThe i -th line (1\\leq i\\leq N) should contain the answer to the problem for K=i.",
          "samples": [
            {
              "input": "5\n1 2 3\n2 3 5\n2 4 2\n1 5 3",
              "output": "16\n22\n26\n26\n26",
              "explanation": "For K=1, Aoki's optimal move is to specify vertex 3, and Takahashi's optimal move is to construct a path vertex 1 \\to vertex 2 \\to vertex 3 \\to vertex 2 \\to vertex 1, resulting in a score of 16.\n\nFor K=2, Aoki's optimal move is to specify vertices 3 and 5, and Takahashi's optimal move is to construct a path such as vertex 1 \\to vertex 5 \\to vertex 1 \\to vertex 2 \\to vertex 3 \\to vertex 2 \\to vertex 1, resulting in a score of 22.\n\nFor K\\geq 3, the score when both players play optimally is 26."
            },
            {
              "input": "3\n1 2 1000000000\n2 3 1000000000",
              "output": "4000000000\n4000000000\n4000000000",
              "explanation": "Beware that the answer may not fit in a 32 -bit integer."
            }
          ]
        }
      ]
    },
    {
      "id": "abc370",
      "url": "https://abc370.contest.atcoder.jp/?lang=en",
      "start_time": "2024-09-07T12:00:00",
      "problems": [
        {
          "id": "abc370_a",
          "problem_letter": "A",
          "url": "https://abc370.contest.atcoder.jp/tasks/abc370_a?lang=en",
          "statement": "Problem Statement: \n\nTakahashi decided to make takoyaki (octopus balls) and serve it to Snuke. Takahashi instructed Snuke to raise only his left hand if he wants to eat takoyaki, and only his right hand otherwise.\n\nYou are given the information about which hand Snuke is raising as two integers L and R.\nHe is raising his left hand if and only if L = 1, and raising his right hand if and only if R = 1. He might not follow the instructions and could raise both hands or not raise any hand at all.\n\nIf Snuke is raising only one hand, printYes if he wants to eat takoyaki, andNo if he does not. If he is raising both hands or not raising any hand, printInvalid.\n\nAssume that if Snuke is raising only one hand, he is always following the instructions.",
          "constraints": "Constraints: Each of L and R is 0 or 1.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nL\nR\n\nOutput: \n\nPrintYes,No, orInvalid according to the instructions in the problem statement.",
          "samples": [
            {
              "input": "1 0",
              "output": "Yes",
              "explanation": "Snuke wants to eat takoyaki, so he is raising only his left hand."
            },
            {
              "input": "1 1",
              "output": "Invalid",
              "explanation": "Snuke is raising both hands."
            }
          ]
        },
        {
          "id": "abc370_b",
          "problem_letter": "B",
          "url": "https://abc370.contest.atcoder.jp/tasks/abc370_b?lang=en",
          "statement": "Problem Statement: \n\nThere are N types of elements numbered 1, 2, ..., N.\n\nElements can be combined with each other. When elements i and j are combined, they transform into element A_{i, j} if i \\geq j, and into element A_{j, i} if i < j.\n\nStarting with element 1, combine it with elements 1, 2, ..., N in this order. Find the final element obtained.",
          "constraints": "Constraints: 1 \\leq N \\leq 100 \n 1 \\leq A_{i, j} \\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_{1, 1}\nA_{2, 1}\nA_{2, 2}\n\\vdots\nA_{N, 1}\nA_{N, 2}\n...\nA_{N, N}\n\nOutput: \n\nPrint the number representing the final element obtained.",
          "samples": [
            {
              "input": "4\n3\n2 4\n3 1 2\n2 1 2 4",
              "output": "2",
              "explanation": "Combining element 1 with element 1 results in element 3.\n\nCombining element 3 with element 2 results in element 1.\n\nCombining element 1 with element 3 results in element 3.\n\nCombining element 3 with element 4 results in element 2.\n\nTherefore, the value to be printed is 2.\n\nCombining element1with element1results in element3. \n Combining element3with element2results in element1. \n Combining element1with element3results in element3. \n Combining element3with element4results in element2."
            },
            {
              "input": "5\n5\n5 5\n5 5 5\n5 5 5 5\n5 5 5 5 5",
              "output": "5",
              "explanation": null
            },
            {
              "input": "6\n2\n1 5\n1 6 3\n2 6 1 4\n2 1 1 1 6\n5 6 1 2 2 5",
              "output": "5",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc370_c",
          "problem_letter": "C",
          "url": "https://abc370.contest.atcoder.jp/tasks/abc370_c?lang=en",
          "statement": "Problem Statement: Change one character in S, and append S to the end of X. \n  S_1 S_2 \\ldots S_{i-1} = T_1 T_2 \\ldots T_{i-1} \n  S_i comes earlier than T_i in alphabetical order. \n  (X_1,X_2,\\ldots,X_{j-1}) = (Y_1,Y_2,\\ldots,Y_{j-1}) \n  X_j is lexicographically smaller than Y_j.",
          "constraints": "Constraints: S and T are strings consisting of lowercase English letters with length between 1 and 100, inclusive. \n The lengths of S and T are equal.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS\nT\n\nOutput: \n\nLet M be the number of elements in the desired array. Print M + 1 lines.\n\nThe first line should contain the value of M.\n\nThe i + 1 -th line (1 \\leq i \\leq M) should contain the i -th element of the array.",
          "samples": [
            {
              "input": "adbe\nbcbc",
              "output": "3\nacbe\nacbc\nbcbc",
              "explanation": "Initially, S =adbe.\n\nWe can obtain X = (acbe ,acbc ,bcbc ) by performing the following operations:\n\nChange S toacbeand appendacbeto the end of X.\n\nChange S toacbcand appendacbcto the end of X.\n\nChange S tobcbcand appendbcbcto the end of X.\n\nChangeStoacbeand appendacbeto the end ofX. \n ChangeStoacbcand appendacbcto the end ofX. \n ChangeStobcbcand appendbcbcto the end ofX."
            },
            {
              "input": "abcde\nabcde",
              "output": "0",
              "explanation": null
            },
            {
              "input": "afwgebrw\noarbrenq",
              "output": "8\naawgebrw\naargebrw\naarbebrw\naarbebnw\naarbebnq\naarbeenq\naarbrenq\noarbrenq",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc370_d",
          "problem_letter": "D",
          "url": "https://abc370.contest.atcoder.jp/tasks/abc370_d?lang=en",
          "statement": "Problem Statement: If there is a wall at (R_q, C_q), destroy that wall and end the process. \n If there is no wall at (R_q, C_q), destroy the first walls that appear when looking up, down, left, and right from (R_q, C_q). More precisely, the following four processes occur simultaneously:If there exists ani \\lt R_qsuch that a wall exists at(i, C_q)and no wall exists at(k, C_q)for alli \\lt k \\lt R_q, destroy the wall at(i, C_q).If there exists ani \\gt R_qsuch that a wall exists at(i, C_q)and no wall exists at(k, C_q)for allR_q \\lt k \\lt i, destroy the wall at(i, C_q).If there exists aj \\lt C_qsuch that a wall exists at(R_q, j)and no wall exists at(R_q, k)for allj \\lt k \\lt C_q, destroy the wall at(R_q, j).If there exists aj \\gt C_qsuch that a wall exists at(R_q, j)and no wall exists at(R_q, k)for allC_q \\lt k \\lt j, destroy the wall at(R_q, j). \n If there exists an i \\lt R_q such that a wall exists at (i, C_q) and no wall exists at (k, C_q) for all i \\lt k \\lt R_q, destroy the wall at (i, C_q). \n If there exists an i \\gt R_q such that a wall exists at (i, C_q) and no wall exists at (k, C_q) for all R_q \\lt k \\lt i, destroy the wall at (i, C_q). \n If there exists a j \\lt C_q such that a wall exists at (R_q, j) and no wall exists at (R_q, k) for all j \\lt k \\lt C_q, destroy the wall at (R_q, j). \n If there exists a j \\gt C_q such that a wall exists at (R_q, j) and no wall exists at (R_q, k) for all C_q \\lt k \\lt j, destroy the wall at (R_q, j).",
          "constraints": "Constraints: 1 \\leq H, W \n H \\times W \\leq 4 \\times 10^5 \n 1 \\leq Q \\leq 2 \\times 10^5 \n 1 \\leq R_q \\leq H \n 1 \\leq C_q \\leq W \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nH\nW\nQ\nR_1\nC_1\nR_2\nC_2\n\\vdots\nR_Q\nC_Q\n\nOutput: \n\nPrint the number of remaining walls after processing all queries.",
          "samples": [
            {
              "input": "2 4 3\n1 2\n1 2\n1 3",
              "output": "2",
              "explanation": "The process of handling the queries can be explained as follows:\n\nAfter processing all queries, there are two remaining walls, at (2, 1) and (2, 4).\n\nIn the 1st query, (R_1, C_1) = (1, 2). There is a wall at (1, 2), so the wall at (1, 2) is destroyed. \n In the 2nd query, (R_2, C_2) = (1, 2). There is no wall at (1, 2), so the walls at (2,2),(1,1),(1,3), which are the first walls that appear when looking up, down, left, and right from (1, 2), are destroyed. \n In the 3rd query, (R_3, C_3) = (1, 3). There is no wall at (1, 3), so the walls at (2,3),(1,4), which are the first walls that appear when looking up, down, left, and right from (1, 3), are destroyed."
            },
            {
              "input": "5 5 5\n3 3\n3 3\n3 2\n2 2\n1 2",
              "output": "10",
              "explanation": null
            },
            {
              "input": "4 3 10\n2 2\n4 1\n1 1\n4 2\n2 1\n3 1\n1 3\n1 2\n4 3\n4 2",
              "output": "2",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc370_e",
          "problem_letter": "E",
          "url": "https://abc370.contest.atcoder.jp/tasks/abc370_e?lang=en",
          "statement": "Problem Statement: Freely choose the number k (1 \\leq k \\leq N) of subsequences and an integer sequence (i_1, i_2, \\dots, i_k, i_{k+1}) satisfying 1 = i_1 \\lt i_2 \\lt \\dots \\lt i_k \\lt i_{k+1} = N+1. \n For each 1 \\leq n \\leq k, the n -th subsequence is formed by taking the i_n -th through (i_{n+1} - 1) -th elements of A, maintaining their order. \n (1, 2, 3), (4), (5) \n (1, 2), (3, 4, 5) \n (1, 2, 3, 4, 5)",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n -10^{15} \\leq K \\leq 10^{15} \n -10^9 \\leq A_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the count modulo 998244353.",
          "samples": [
            {
              "input": "3 3\n1 2 3",
              "output": "2",
              "explanation": "There are two divisions that satisfy the condition in the problem statement:\n\n(1), (2, 3) \n (1, 2, 3)"
            },
            {
              "input": "5 0\n0 0 0 0 0",
              "output": "0",
              "explanation": null
            },
            {
              "input": "10 5\n-5 -1 -7 6 -6 -2 -5 10 2 -10",
              "output": "428",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc370_f",
          "problem_letter": "F",
          "url": "https://abc370.contest.atcoder.jp/tasks/abc370_f?lang=en",
          "statement": "Problem Statement: Each person receives one or moreconsecutivepieces. \n There are no pieces that no one receives. \n Under the above two conditions, \\min(w_1, w_2, \\ldots, w_K) is maximized.",
          "constraints": "Constraints: 2 \\leq K \\leq N \\leq 2 \\times 10^5 \n 1 \\leq A_i \\leq 10^4 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nLet x be the value of \\min(w_1, w_2, ..., w_K) in a division that satisfies the conditions, and y be the number of cut lines that are never cut. Print x and y in this order, separated by a space.",
          "samples": [
            {
              "input": "5 2\n3 6 8 6 4",
              "output": "13 1",
              "explanation": "The following divisions satisfy the conditions:\n\nThe value of \\min(w_1, w_2) in divisions satisfying the conditions is 13, and there is one cut line that is not cut in either division: cut line 5.\n\nGive pieces 2, 3 to one person and pieces 4, 5, 1 to the other. Pieces 2, 3 have a total mass of 14, and pieces 4, 5, 1 have a total mass of 13. \n Give pieces 3, 4 to one person and pieces 5, 1, 2 to the other. Pieces 3, 4 have a total mass of 14, and pieces 5, 1, 2 have a total mass of 13."
            },
            {
              "input": "6 3\n4 7 11 3 9 2",
              "output": "11 1",
              "explanation": null
            },
            {
              "input": "10 3\n2 9 8 1 7 9 1 3 5 8",
              "output": "17 4",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc370_g",
          "problem_letter": "G",
          "url": "https://abc370.contest.atcoder.jp/tasks/abc370_g?lang=en",
          "statement": "Problem Statement: \n\nWe call a positive integer n a good integer if and only if the sum of its positive divisors is divisible by 3. You are given two positive integers N and M. Find the number, modulo 998244353, of length- M sequences A of positive integers such that the product of the elements in A is a good integer not exceeding N.",
          "constraints": "Constraints: 1 \\leq N \\leq 10^{10} \n 1 \\leq M \\leq 10^5 \n N and M are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "10 1",
              "output": "5",
              "explanation": "There are five sequences that satisfy the conditions:\n\n(2) \n (5) \n (6) \n (8) \n (10)"
            },
            {
              "input": "4 2",
              "output": "2",
              "explanation": "There are two sequences that satisfy the conditions:\n\n(1, 2) \n (2, 1)"
            },
            {
              "input": "370 907",
              "output": "221764640",
              "explanation": null
            },
            {
              "input": "10000000000 100000",
              "output": "447456146",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc371",
      "url": "https://abc371.contest.atcoder.jp/?lang=en",
      "start_time": "2024-09-14T12:00:00",
      "problems": [
        {
          "id": "abc371_a",
          "problem_letter": "A",
          "url": "https://abc371.contest.atcoder.jp/tasks/abc371_a?lang=en",
          "statement": "Problem Statement: If S_{\\mathrm{AB}} is<, then A is younger than B ; if it is>, then A is older than B. \n If S_{\\mathrm{AC}} is<, then A is younger than C ; if it is>, then A is older than C. \n If S_{\\mathrm{BC}} is<, then B is younger than C ; if it is>, then B is older than C.",
          "constraints": "Constraints: Each of S_{\\mathrm{AB}}, S_{\\mathrm{AC}}, S_{\\mathrm{BC}} is<or>. \n The input contains no contradictions; that is, there always exists an age relationship that satisfies all given inequalities.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS_{\\mathrm{AB}}\nS_{\\mathrm{AC}}\nS_{\\mathrm{BC}}\n\nOutput: \n\nPrint the name of the middle brother, that is, the second oldest among the three.",
          "samples": [
            {
              "input": "< < <",
              "output": "B",
              "explanation": "Since A is younger than B, and B is younger than C, we can determine that C is the oldest, B is the middle, and A is the youngest. Hence, the answer isB."
            },
            {
              "input": "< < >",
              "output": "C",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc371_b",
          "problem_letter": "B",
          "url": "https://abc371.contest.atcoder.jp/tasks/abc371_b?lang=en",
          "statement": "Problem Statement: \n\nIn the Kingdom of AtCoder, the eldest son is always given the name Taro. No one else is given the name Taro.\nThe eldest son is the earliest born male child in each family.\n\nThere are N families in the Kingdom, and M babies were born.  Before the M babies were born, none of the N families had had any babies.\n\nInformation about the babies is given in chronological order of their birth.\n\nThe i -th baby born was born in family A_i, and the baby is male if B_i isM, and female if it isF.\n\nDetermine for each of the M babies whether the name given is Taro.",
          "constraints": "Constraints: 1\\leq N,M\\leq 100 \n 1\\leq A_i\\leq N \n B_i isMorF. \n All numbers in the input are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nA_1\nB_1\n\\vdots\nA_M\nB_M\n\nOutput: \n\nPrint M lines.\n\nThe i -th line (1\\leq i \\leq M) should containYes if the name given to the i -th baby is Taro, andNo otherwise.",
          "samples": [
            {
              "input": "2 4\n1 M\n1 M\n2 F\n2 M",
              "output": "Yes\nNo\nNo\nYes",
              "explanation": "The first baby is the earliest born boy in family 1, so he is named Taro.\n\nThe second baby is not the earliest born boy in family 1, so he is not named Taro.\n\nThe third baby is a girl, so she is not named Taro.\n\nThe fourth baby is the earliest bornboyin family 2, so he is named Taro. Note that the third baby is also born in family 2, but it is the earliest born boy who is named Taro."
            },
            {
              "input": "4 7\n2 M\n3 M\n1 F\n4 F\n4 F\n1 F\n2 M",
              "output": "Yes\nYes\nNo\nNo\nNo\nNo\nNo",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc371_c",
          "problem_letter": "C",
          "url": "https://abc371.contest.atcoder.jp/tasks/abc371_c?lang=en",
          "statement": "Problem Statement: Choose a pair of integers (i,j) satisfying 1\\leq i<j\\leq N. Pay A_{i,j} yen, and if there is no edge between vertices i and j in H, add one; if there is, remove it. \n an edge exists between vertices i and j in G if and only if an edge exists between vertices P_i and P_j in H.",
          "constraints": "Constraints: 1\\leq N\\leq8 \n 0\\leq M _ G\\leq\\dfrac{N(N-1)}2 \n 0\\leq M _ H\\leq\\dfrac{N(N-1)}2 \n 1\\leq u _ i\\lt v _ i\\leq N\\ (1\\leq i\\leq M _ G) \n (u _ i,v _ i)\\neq(u _ j,v _ j)\\ (1\\leq i\\lt j\\leq M _ G) \n 1\\leq a _ i\\lt b _ i\\leq N\\ (1\\leq i\\leq M _ H) \n (a _ i,b _ i)\\neq(a _ j,b _ j)\\ (1\\leq i\\lt j\\leq M _ H) \n 1\\leq A _ {i,j}\\leq 10 ^ 6\\ (1\\leq i\\lt j\\leq N) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM _ G\nu _ 1\nv _ 1\nu _ 2\nv _ 2\n\\vdots\nu _ {M _ G}\nv _ {M _ G}\nM _ H\na _ 1\nb _ 1\na _ 2\nb _ 2\n\\vdots\na _ {M _ H}\nb _ {M _ H}\nA _ {1,2}\nA _ {1,3}\n...\nA _ {1,N}\nA _ {2,3}\n...\nA _ {2,N}\n\\vdots\nA _ {N-1,N}\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "5\n4\n1 2\n2 3\n3 4\n4 5\n4\n1 2\n1 3\n1 4\n1 5\n3 1 4 1\n5 9 2\n6 5\n3",
              "output": "9",
              "explanation": "The given graphs are as follows:\n\n\n\nFor example, you can perform the following four operations on H to make it isomorphic to G at a cost of 9 yen.\n\nAfter these operations, H becomes:\n\n\n\nYou cannot make G and H isomorphic at a cost less than 9 yen, so print9.\n\nChoose (i,j)=(1,3). There is an edge between vertices 1 and 3 in H, so pay 1 yen to remove it. \n Choose (i,j)=(2,5). There is no edge between vertices 2 and 5 in H, so pay 2 yen to add it. \n Choose (i,j)=(1,5). There is an edge between vertices 1 and 5 in H, so pay 1 yen to remove it. \n Choose (i,j)=(3,5). There is no edge between vertices 3 and 5 in H, so pay 5 yen to add it."
            },
            {
              "input": "5\n3\n1 2\n2 3\n3 4\n4\n1 2\n2 3\n3 4\n4 5\n9 1 1 1\n1 1 1\n1 1\n9",
              "output": "3",
              "explanation": "For example, performing the operations (i,j)=(2,3),(2,4),(3,4) on H will make it isomorphic to G."
            },
            {
              "input": "5\n3\n1 2\n2 3\n3 4\n4\n1 2\n2 3\n3 4\n4 5\n5 4 4 4\n4 4 4\n4 4\n5",
              "output": "5",
              "explanation": "For example, performing the operation (i,j)=(4,5) once will make G and H isomorphic."
            },
            {
              "input": "2\n0\n0\n371",
              "output": "0",
              "explanation": "Note that G and H may have no edges.\n\nAlso, it is possible that no operations are needed."
            },
            {
              "input": "8\n13\n1 8\n5 7\n4 6\n1 5\n7 8\n1 6\n1 2\n5 8\n2 6\n5 6\n6 7\n3 7\n4 8\n15\n3 5\n1 7\n4 6\n3 8\n7 8\n1 2\n5 6\n1 6\n1 5\n1 4\n2 8\n2 6\n2 4\n4 7\n1 3\n7483 1694 5868 3296 9723 5299 4326\n5195 4088 5871 1384 2491 6562\n1149 6326 2996 9845 7557\n4041 7720 1554 5060\n8329 8541 3530\n4652 3874\n3748",
              "output": "21214",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc371_d",
          "problem_letter": "D",
          "url": "https://abc371.contest.atcoder.jp/tasks/abc371_d?lang=en",
          "statement": "Problem Statement: Given integers L_i and R_i, find the total number of villagers living in villages located between coordinates L_i and R_i, inclusive.",
          "constraints": "Constraints: 1\\leq N,Q\\leq 2\\times 10^5 \n -10^9\\leq X_1 < X_2 < \\ldots < X_N \\leq 10^9 \n 1\\leq P_i\\leq 10^9 \n -10^9\\leq L_i \\leq R_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nX_1\n...\nX_N\nP_1\n...\nP_N\nQ\nL_1\nR_1\n\\vdots\nL_Q\nR_Q\n\nOutput: \n\nPrint Q lines.\n\nThe i -th line (1\\leq i \\leq Q) should contain the answer to the i -th query.",
          "samples": [
            {
              "input": "4\n1 3 5 7\n1 2 3 4\n4\n1 1\n2 6\n0 10\n2 2",
              "output": "1\n5\n10\n0",
              "explanation": "Consider the first query. The villages between coordinates 1 and 1 are the village at coordinate 1, with 1 villager. Hence, the answer is 1.\n\nConsider the second query. The villages between coordinates 2 and 6 are the villages at coordinates 3 and 5, with 2 and 3 villagers, respectively. Hence, the answer is 2+3=5."
            },
            {
              "input": "7\n-10 -5 -3 -1 0 1 4\n2 5 6 5 2 1 7\n8\n-7 7\n-1 5\n-10 -4\n-8 10\n-5 0\n-10 5\n-8 7\n-8 -3",
              "output": "26\n15\n7\n26\n18\n28\n26\n11",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc371_e",
          "problem_letter": "E",
          "url": "https://abc371.contest.atcoder.jp/tasks/abc371_e?lang=en",
          "statement": "Problem Statement: the number of distinct values in the subsequence (A_l, A_{l+1}, \\ldots, A_r).",
          "constraints": "Constraints: 1\\leq N\\leq 2\\times 10^5 \n 1\\leq A_i\\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\n...\nA_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3\n1 2 2",
              "output": "8",
              "explanation": "Consider f(1,2). The subsequence (A_1, A_2) = (1,2) contains 2 distinct values, so f(1,2)=2.\n\nConsider f(2,3). The subsequence (A_2, A_3) = (2,2) contains 1 distinct value, so f(2,3)=1.\n\nThe sum of f is 8."
            },
            {
              "input": "9\n5 4 2 2 3 2 4 4 1",
              "output": "111",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc371_f",
          "problem_letter": "F",
          "url": "https://abc371.contest.atcoder.jp/tasks/abc371_f?lang=en",
          "statement": "Problem Statement: Choose one person.If there is no other person at the destination, move the chosen person 1 meter east or west. \n The T_i -th person arrives at coordinate G_i.",
          "constraints": "Constraints: 1\\leq N\\leq2\\times10^5 \n 0\\leq X_1 < X_2 < \\dotsb < X_N \\leq10^8 \n 1\\leq Q\\leq2\\times10^5 \n 1\\leq T_i\\leq N\\ (1\\leq i\\leq Q) \n 0\\leq G_i\\leq10^8\\ (1\\leq i\\leq Q) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nX_1\nX_2\n...\nX_N\nQ\nT_1\nG_1\nT_2\nG_2\n\\vdots\nT_Q\nG_Q\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "5\n10 20 30 40 50\n4\n3 45\n4 20\n1 35\n2 60",
              "output": "239",
              "explanation": "An optimal sequence of movements for the persons is as follows (the positions of the persons are not necessarily drawn to scale):\n\n\n\nFor each task, the persons move as follows.\n\nThe total number of movements is 21+54+79+85=239.\n\nYou cannot complete all tasks with a total movement count of 238 or less, so print239.\n\nThe 4th person moves 6 steps east, and the 3rd person moves 15 steps east. \n The 2nd person moves 2 steps west, the 3rd person moves 26 steps west, and the 4th person moves 26 steps west. \n The 4th person moves 18 steps east, the 3rd person moves 18 steps east, the 2nd person moves 18 steps east, and the 1st person moves 25 steps east. \n The 5th person moves 13 steps east, the 4th person moves 24 steps east, the 3rd person moves 24 steps east, and the 2nd person moves 24 steps east."
            },
            {
              "input": "8\n0 1 2 3 4 5 6 100000000\n6\n1 100000000\n8 0\n1 100000000\n8 4\n1 100000000\n5 21006578",
              "output": "4294967297",
              "explanation": "Note that some persons may need to move to the west of the origin or more than 10^8 meters to the east of it.\n\nAlso, note that the answer may exceed 2^{32}."
            },
            {
              "input": "12\n1558 3536 3755 3881 4042 4657 5062 7558 7721 8330 8542 9845\n8\n9 1694\n7 3296\n12 5299\n5 5195\n5 5871\n1 2491\n8 1149\n8 2996",
              "output": "89644",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc371_g",
          "problem_letter": "G",
          "url": "https://abc371.contest.atcoder.jp/tasks/abc371_g?lang=en",
          "statement": "Problem Statement: replace A_i with A_{P_i}simultaneouslyfor all i=1,2,\\ldots,N. \n there exists an integer i\\ (1\\leq i\\leq N) such that A_i < B_i, and A_j = B_j for all 1\\leq j < i.",
          "constraints": "Constraints: 1\\leq N\\leq2\\times10^5 \n 1\\leq P_i\\leq N\\ (1\\leq i\\leq N) \n P_i\\neq P_j\\ (1\\leq i<j\\leq N) \n 1\\leq A_i\\leq N\\ (1\\leq i\\leq N) \n A_i\\neq A_j\\ (1\\leq i<j\\leq N) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nP_1\nP_2\n...\nP_N\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nLet (A_1, A_2, ..., A_N) be the lexicographically smallest A that can be obtained. Print A_1, A_2, ..., A_N in this order, separated by spaces, in one line.",
          "samples": [
            {
              "input": "6\n3 1 5 6 2 4\n4 3 1 6 2 5",
              "output": "1 4 2 5 3 6",
              "explanation": "Initially, A = (4, 3, 1, 6, 2, 5).\n\nRepeating the operation yields the following.\n\nAfter this, A will revert to the original state every four operations.\n\nTherefore, print the lexicographically smallest among these, which is1 4 2 5 3 6.\n\nA = (1, 4, 2, 5, 3, 6) \n A = (2, 1, 3, 6, 4, 5) \n A = (3, 2, 4, 5, 1, 6) \n A = (4, 3, 1, 6, 2, 5)"
            },
            {
              "input": "8\n3 5 8 7 2 6 1 4\n1 2 3 4 5 6 7 8",
              "output": "1 2 3 4 5 6 7 8",
              "explanation": "You may choose to perform no operations."
            },
            {
              "input": "26\n24 14 4 20 15 19 16 11 23 22 12 18 21 3 6 8 26 2 25 7 13 1 5 9 17 10\n15 3 10 1 13 19 22 24 20 4 14 23 7 26 25 18 11 6 9 12 2 21 5 16 8 17",
              "output": "4 1 22 18 20 13 14 6 15 11 3 26 2 12 5 23 9 10 25 24 7 17 16 21 19 8",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc372",
      "url": "https://abc372.contest.atcoder.jp/?lang=en",
      "start_time": "2024-09-21T12:00:00",
      "problems": [
        {
          "id": "abc372_a",
          "problem_letter": "A",
          "url": "https://abc372.contest.atcoder.jp/tasks/abc372_a?lang=en",
          "statement": "Problem Statement: \n\nYou are given a string S consisting of lowercase English letters and..\nFind the string obtained by removing all. from S.",
          "constraints": "Constraints: S is a string of length between 1 and 100, inclusive, consisting of lowercase English letters and..",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS\n\nOutput: \n\nPrint the string obtained by removing all. from S.",
          "samples": [
            {
              "input": ".v.",
              "output": "v",
              "explanation": "Removing all.from.v.yieldsv, so printv."
            },
            {
              "input": "chokudai",
              "output": "chokudai",
              "explanation": "There are cases where S does not contain.."
            },
            {
              "input": "...",
              "output": "",
              "explanation": "There are also cases where all characters in S are.."
            }
          ]
        },
        {
          "id": "abc372_b",
          "problem_letter": "B",
          "url": "https://abc372.contest.atcoder.jp/tasks/abc372_b?lang=en",
          "statement": "Problem Statement: 1 \\le N \\le 20 \n 0 \\le A_i \\le 10 (1 \\le i \\le N) \n \\displaystyle \\sum_{i=1}^N 3^{A_i} = M",
          "constraints": "Constraints: 1 \\le M \\le 10^5",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nM\n\nOutput: \n\nPrint N and A satisfying the conditions in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nIf there are multiple valid pairs of N and A, any of them is acceptable.",
          "samples": [
            {
              "input": "6",
              "output": "2\n1 1",
              "explanation": "For example, with N=2 and A=(1,1), we have \\displaystyle \\sum_{i=1}^N 3^{A_i} = 3+3=6, satisfying all conditions.\n\nAnother example is N=4 and A=(0,0,1,0), which also satisfies the conditions."
            },
            {
              "input": "100",
              "output": "4\n2 0 2 4",
              "explanation": null
            },
            {
              "input": "59048",
              "output": "20\n0 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9",
              "explanation": "Note the condition 1 \\le N \\le 20."
            }
          ]
        },
        {
          "id": "abc372_c",
          "problem_letter": "C",
          "url": "https://abc372.contest.atcoder.jp/tasks/abc372_c?lang=en",
          "statement": "Problem Statement: Given an integer X_i and a character C_i, replace the X_i -th character of S with C_i. Then, print the number of times the stringABCappears as a substring in S.",
          "constraints": "Constraints: 3 \\le N \\le 2 \\times 10^5 \n 1 \\le Q \\le 2 \\times 10^5 \n S is a string of length N consisting of uppercase English letters. \n 1 \\le X_i \\le N \n C_i is an uppercase English letter.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nQ\nS\nX_1\nC_1\nX_2\nC_2\n\\vdots\nX_Q\nC_Q\n\nOutput: \n\nPrint Q lines.\nThe i -th line (1 \\le i \\le Q) should contain the answer to the i -th query.",
          "samples": [
            {
              "input": "7 4\nABCDABC\n4 B\n3 A\n5 C\n4 G",
              "output": "2\n1\n1\n0",
              "explanation": "After processing each query, S becomes as follows.\n\nAfter the first query: S=ABCBABC. In this string,ABCappears twice as a substring. \n After the second query: S=ABABABC. In this string,ABCappears once as a substring. \n After the third query: S=ABABCBC. In this string,ABCappears once as a substring. \n After the fourth query: S=ABAGCBC. In this string,ABCappears zero times as a substring."
            },
            {
              "input": "3 3\nABC\n1 A\n2 B\n3 C",
              "output": "1\n1\n1",
              "explanation": "There are cases where S does not change through processing a query."
            },
            {
              "input": "15 10\nBBCCBCACCBACACA\n9 C\n11 B\n5 B\n11 B\n4 A\n8 C\n8 B\n5 B\n7 B\n14 B",
              "output": "0\n0\n0\n0\n1\n1\n2\n2\n1\n1",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc372_d",
          "problem_letter": "D",
          "url": "https://abc372.contest.atcoder.jp/tasks/abc372_d?lang=en",
          "statement": "Problem Statement: There is no building taller than Building j between Buildings i and j.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq H_i \\leq N \n H_i\\neq H_j\\ (i\\neq j) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nH_1\nH_2\n...\nH_N\n\nOutput: \n\nFor each i = 1, 2, ..., N, let c_i be the number of j satisfying the condition. Print c_1, c_2, ..., c_N in order, separated by spaces.",
          "samples": [
            {
              "input": "5\n2 1 4 3 5",
              "output": "3 2 2 1 0",
              "explanation": "For i=1, the integers j satisfying the condition are 2, 3, and 5 : there are three. (Between Buildings 1 and 4, there is a building taller than Building 4, which is Building 3, so j=4 does not satisfy the condition.) Therefore, the first number in the output is 3."
            },
            {
              "input": "4\n1 2 3 4",
              "output": "3 2 1 0",
              "explanation": null
            },
            {
              "input": "10\n1 9 6 5 2 7 10 4 8 3",
              "output": "2 3 3 3 2 1 2 1 1 0",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc372_e",
          "problem_letter": "E",
          "url": "https://abc372.contest.atcoder.jp/tasks/abc372_e?lang=en",
          "statement": "Problem Statement: Type 1 : Given in the format1 u v. Add an edge between vertices u and v. \n Type 2 : Given in the format2 v k. Print the k -th largest vertex number among the vertices connected to vertex v. If there are fewer than k vertices connected to v, print-1.",
          "constraints": "Constraints: 1 \\leq N, Q \\leq 2 \\times 10^5 \n In a Type 1 query, 1 \\leq u < v \\leq N. \n In a Type 2 query, 1 \\leq v \\leq N, 1 \\leq k \\leq 10. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nQ\n\\mathrm{query}_1\n\\mathrm{query}_2\n\\vdots\n\\mathrm{query}_Q\n\nHere, \\mathrm{query}_i is the i -th query and is given in one of the following formats:\n\n1\nu\nv\n\n2\nv\nk\n\nOutput: \n\nLet q be the number of Type 2 queries. Print q lines.\nThe i -th line should contain the answer to the i -th Type 2 query.",
          "samples": [
            {
              "input": "4 10\n1 1 2\n2 1 1\n2 1 2\n2 1 3\n1 1 3\n1 2 3\n1 3 4\n2 1 1\n2 1 3\n2 1 5",
              "output": "2\n1\n-1\n4\n2\n-1",
              "explanation": "In the first query, an edge is added between vertices 1 and 2. \n In the second query, two vertices are connected to vertex 1 : 1 and 2. Among them, the 1 -st largest vertex number is 2, which should be printed. \n In the third query, two vertices are connected to vertex 1 : 1 and 2. Among them, the 2 -nd largest vertex number is 1, which should be printed. \n In the fourth query, two vertices are connected to vertex 1 : 1 and 2, which is fewer than 3, so print-1. \n In the fifth query, an edge is added between vertices 1 and 3. \n In the sixth query, an edge is added between vertices 2 and 3. \n In the seventh query, an edge is added between vertices 3 and 4. \n In the eighth query, four vertices are connected to vertex 1 : 1,2,3,4. Among them, the 1 -st largest vertex number is 4, which should be printed. \n In the ninth query, four vertices are connected to vertex 1 : 1,2,3,4. Among them, the 3 -rd largest vertex number is 2, which should be printed. \n In the tenth query, four vertices are connected to vertex 1 : 1,2,3,4, which is fewer than 5, so print-1."
            },
            {
              "input": "6 20\n1 3 4\n1 3 5\n2 1 1\n2 3 1\n1 1 5\n2 6 9\n2 1 3\n2 6 1\n1 4 6\n2 2 1\n2 6 2\n2 4 7\n1 1 4\n2 6 2\n2 3 4\n1 2 5\n2 4 1\n1 1 6\n2 3 3\n2 1 3",
              "output": "1\n5\n-1\n3\n6\n2\n5\n-1\n5\n3\n6\n4\n4",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc372_f",
          "problem_letter": "F",
          "url": "https://abc372.contest.atcoder.jp/tasks/abc372_f?lang=en",
          "statement": "Problem Statement: 1 \\leq v_i \\leq N for i = 0, 1, \\dots, K. \n v_0 = 1. \n There is a directed edge from vertex v_{i-1} to vertex v_i for i = 1, 2, \\ldots, K.",
          "constraints": "Constraints: 2 \\leq N \\leq 2 \\times 10^5 \n 0 \\leq M \\leq 50 \n 1 \\leq K \\leq 2 \\times 10^5 \n 1 \\leq X_i, Y_i \\leq N, X_i \\neq Y_i \n All of the N+M directed edges are distinct. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nK\nX_1\nY_1\nX_2\nY_2\n\\vdots\nX_M\nY_M\n\nOutput: \n\nPrint the count modulo 998244353.",
          "samples": [
            {
              "input": "6 2 5\n1 4\n2 5",
              "output": "5",
              "explanation": "\n\nThe above figure represents the graph G. There are five ways for Takahashi to move:\n\nVertex 1 \\to Vertex 2 \\to Vertex 3 \\to Vertex 4 \\to Vertex 5 \\to Vertex 6 \n Vertex 1 \\to Vertex 2 \\to Vertex 5 \\to Vertex 6 \\to Vertex 1 \\to Vertex 2 \n Vertex 1 \\to Vertex 2 \\to Vertex 5 \\to Vertex 6 \\to Vertex 1 \\to Vertex 4 \n Vertex 1 \\to Vertex 4 \\to Vertex 5 \\to Vertex 6 \\to Vertex 1 \\to Vertex 2 \n Vertex 1 \\to Vertex 4 \\to Vertex 5 \\to Vertex 6 \\to Vertex 1 \\to Vertex 4"
            },
            {
              "input": "10 0 200000",
              "output": "1",
              "explanation": null
            },
            {
              "input": "199 10 1326\n122 39\n142 49\n164 119\n197 127\n188 145\n69 80\n6 120\n24 160\n18 154\n185 27",
              "output": "451022766",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc372_g",
          "problem_letter": "G",
          "url": "https://abc372.contest.atcoder.jp/tasks/abc372_g?lang=en",
          "statement": "Problem Statement: A_i \\times x + B_i \\times y < C_i for all 1 \\leq i \\leq N.",
          "constraints": "Constraints: 1 \\leq T \\leq 2 \\times 10^5 \n 1 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq A_i, B_i, C_i \\leq 10^9 \n The sum of N over all test cases is at most 2 \\times 10^5. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format. Here, \\mathrm{case}_i refers to the i -th test case.\n\nT\n\\mathrm{case}_1\n\\mathrm{case}_2\n\\vdots\n\\mathrm{case}_T\n\nEach test case is given in the following format:\n\nN\nA_1\nB_1\nC_1\nA_2\nB_2\nC_2\n\\vdots\nA_N\nB_N\nC_N\n\nOutput: \n\nPrint T lines. The i -th line (1 \\leq i \\leq T) should contain the answer for \\mathrm{case}_i.",
          "samples": [
            {
              "input": "2\n2\n1 1 4\n1 2 5\n1\n1 1 2",
              "output": "2\n0",
              "explanation": "In the first test case, there are two valid pairs of integers: (x, y) = (1, 1), (2,1). Thus, the first line should contain 2.\n\nIn the second test case, there are no valid pairs of integers. Thus, the second line should contain 0."
            },
            {
              "input": "3\n7\n138 16011 918976\n5478 7748 499926\n5234 17727 748589\n1157 10511 643136\n31200 3005 721285\n28839 14469 798851\n1933 5378 864127\n9\n17775 1665 386430\n37001 863 922418\n9756 4182 746671\n12379 9106 807578\n3984 4049 640539\n25333 9869 780810\n20372 7000 688738\n16107 11974 827227\n10779 10531 770510\n5\n4916 14132 460944\n11856 45422 610561\n56014 18216 825793\n10363 6220 945356\n37418 33866 851593",
              "output": "660\n995\n140",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc373",
      "url": "https://abc373.contest.atcoder.jp/?lang=en",
      "start_time": "2024-09-28T12:00:00",
      "problems": [
        {
          "id": "abc373_a",
          "problem_letter": "A",
          "url": "https://abc373.contest.atcoder.jp/tasks/abc373_a?lang=en",
          "statement": "Problem Statement: \n\nThere are 12 strings S_1, S_2, ..., S_{12} consisting of lowercase English letters.\n\nFind how many integers i (1 \\leq i \\leq 12) satisfy that the length of S_i is i.",
          "constraints": "Constraints: Each S_i is a string of length between 1 and 100, inclusive, consisting of lowercase English letters. (1 \\leq i \\leq 12)",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS_1\nS_2\n\\vdots\nS_{12}\n\nOutput: \n\nPrint the number of integers i (1 \\leq i \\leq 12) such that the length of S_i is i.",
          "samples": [
            {
              "input": "january\nfebruary\nmarch\napril\nmay\njune\njuly\naugust\nseptember\noctober\nnovember\ndecember",
              "output": "1",
              "explanation": "There is only one integer i such that the length of S_i is i : 9. Thus, print1."
            },
            {
              "input": "ve\ninrtfa\nnpccxva\ndjiq\nlmbkktngaovl\nmlfiv\nfmbvcmuxuwggfq\nqgmtwxmb\njii\nts\nbfxrvs\neqvy",
              "output": "2",
              "explanation": "There are two integers i such that the length of S_i is i : 4 and 8. Thus, print2."
            }
          ]
        },
        {
          "id": "abc373_b",
          "problem_letter": "B",
          "url": "https://abc373.contest.atcoder.jp/tasks/abc373_b?lang=en",
          "statement": "Problem Statement: \n\nThere is a keyboard with 26 keys arranged on a number line.\n\nThe arrangement of this keyboard is represented by a string S, which is a permutation ofABCDEFGHIJKLMNOPQRSTUVWXYZ.\nThe key corresponding to the character S_x is located at coordinate x (1 \\leq x \\leq 26). Here, S_x denotes the x -th character of S.\n\nYou will use this keyboard to inputABCDEFGHIJKLMNOPQRSTUVWXYZ in this order, typing each letter exactly once with your right index finger.\nTo input a character, you need to move your finger to the coordinate of the key corresponding to that character and press the key.\n\nInitially, your finger is at the coordinate of the key corresponding toA. Find the minimal possible total traveled distance of your finger from pressing the key forA to pressing the key forZ. Here, pressing a key does not contribute to the distance.",
          "constraints": "Constraints: S is a permutation ofABCDEFGHIJKLMNOPQRSTUVWXYZ.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
              "output": "25",
              "explanation": "From pressing the key forAto pressing the key forZ, you need to move your finger 1 unit at a time in the positive direction, resulting in a total traveled distance of 25. It is impossible to press all keys with a total traveled distance less than 25, so print25."
            },
            {
              "input": "MGJYIZDKSBHPVENFLQURTCWOAX",
              "output": "223",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc373_c",
          "problem_letter": "C",
          "url": "https://abc373.contest.atcoder.jp/tasks/abc373_c?lang=en",
          "statement": "Problem Statement: \n\nYou are given two integer sequences A and B, each of length N. Choose integers i, j (1 \\leq i, j \\leq N) to maximize the value of A_i + B_j.",
          "constraints": "Constraints: 1 \\leq N \\leq 5 \\times 10^5 \n |A_i| \\leq 10^9 (i=1,2,\\dots,N) \n |B_j| \\leq 10^9 (j=1,2,\\dots,N) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\nB_1\nB_2\n...\nB_N\n\nOutput: \n\nPrint the maximum possible value of A_i + B_j.",
          "samples": [
            {
              "input": "2\n-1 5\n3 -7",
              "output": "8",
              "explanation": "For (i,j) = (1,1), (1,2), (2,1), (2,2), the values of A_i + B_j are 2, -8, 8, -2 respectively, and (i,j) = (2,1) achieves the maximum value 8."
            },
            {
              "input": "6\n15 12 3 -13 -1 -19\n7 17 -13 -10 18 4",
              "output": "33",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc373_d",
          "problem_letter": "D",
          "url": "https://abc373.contest.atcoder.jp/tasks/abc373_d?lang=en",
          "statement": "Problem Statement: Let x_i be the value written on vertex i. For all edges j=1,2,\\dots,M, it holds that x_{v_j} - x_{u_j} = w_j.",
          "constraints": "Constraints: 2 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq M \\leq \\min\\{2 \\times 10^5,N(N-1)/2\\} \n 1 \\leq u_j, v_j \\leq N \n u_j \\neq v_j \n If i \\neq j, then (u_i, v_i) \\neq (u_j, v_j) and (u_i, v_i) \\neq (v_j, u_j) \n |w_j| \\leq 10^9 \n All input values are integers. \n There exists at least one assignment satisfying the conditions.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nu_1\nv_1\nw_1\nu_2\nv_2\nw_2\n\\vdots\nu_M\nv_M\nw_M\n\nOutput: \n\nLet x_i be the integer written on vertex i. Print x_1, x_2, ..., x_N in this order, separated by spaces, on a single line. If there are multiple solutions, you may print any of them.",
          "samples": [
            {
              "input": "3 3\n1 2 2\n3 2 3\n1 3 -1",
              "output": "3 5 2",
              "explanation": "By setting x = (3, 5, 2), we have x_2 - x_1 = w_1 = 2, x_2 - x_3 = w_2 = 3, x_3 - x_1 = w_3 = -1, satisfying the conditions.\n\nFor example, x = (-1, 1, -2) is also a valid answer."
            },
            {
              "input": "4 2\n2 1 5\n3 4 -3",
              "output": "5 0 6 3",
              "explanation": "For example, x = (0, -5, 4, 1) and x = (5, 0, 4, 1) are also valid answers."
            },
            {
              "input": "5 7\n2 1 18169343\n3 1 307110901\n4 1 130955934\n2 3 -288941558\n2 5 96267410\n5 3 -385208968\n4 3 -176154967",
              "output": "200401298 182231955 -106709603 69445364 278499365",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc373_e",
          "problem_letter": "E",
          "url": "https://abc373.contest.atcoder.jp/tasks/abc373_e?lang=en",
          "statement": "Problem Statement: If candidate i receives X additional votes, then candidate i will always be elected.",
          "constraints": "Constraints: 1 \\leq M \\leq N \\leq 2 \\times 10^5 \n 1 \\leq K \\leq 10^{12} \n 0 \\leq A_i \\leq 10^{12} \n \\displaystyle{\\sum_{i=1}^{N} A_i} \\leq K \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nK\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nLet C_i be the minimum number of additional votes candidate i needs from the remaining ballots to guarantee their victory regardless of how other candidates receive votes. Print C_1, C_2, ..., C_N separated by spaces.\n\nIf candidate i has already secured their victory, then let C_i = 0. If candidate i cannot secure their victory under any circumstances, then let C_i = -1.",
          "samples": [
            {
              "input": "5 2 16\n3 1 4 1 5",
              "output": "2 -1 1 -1 0",
              "explanation": "14 votes have been counted so far, and 2 votes are left.The C to output is (2, -1, 1, -1, 0).  For example:\n\nCandidate 1 can secure their victory by obtaining 2 more votes, while not by obtaining 1 more vote.  Thus, C_1 = 2. \n Candidate 2 can never (even if they obtain 2 more votes) secure their victory, so C_2 = -1."
            },
            {
              "input": "12 1 570\n81 62 17 5 5 86 15 7 79 26 6 28",
              "output": "79 89 111 117 117 74 112 116 80 107 117 106",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc373_f",
          "problem_letter": "F",
          "url": "https://abc373.contest.atcoder.jp/tasks/abc373_f?lang=en",
          "statement": "Problem Statement: \n\nThere are N types of items. The i -th type of item has a weight of w_i and a value of v_i. Each type has 10^{10} items available.\n\nTakahashi is going to choose some items and put them into a bag with capacity W. He wants to maximize the value of the selected items while avoiding choosing too many items of the same type. Hence, he defines thehappiness of choosing k_i items of type i as k_i v_i - k_i^2. He wants to choose items to maximize the total happiness over all types while keeping the total weight at most W. Calculate the maximum total happiness he can achieve.",
          "constraints": "Constraints: 1 \\leq N \\leq 3000 \n 1 \\leq W \\leq 3000 \n 1 \\leq w_i \\leq W \n 1 \\leq v_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nW\nw_1\nv_1\nw_2\nv_2\n\\vdots\nw_N\nv_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "2 10\n3 4\n3 2",
              "output": "5",
              "explanation": "By choosing 2 items of type 1 and 1 item of type 2, the total happiness can be 5, which is optimal.\n\nHere, the happiness for type 1 is 2 \\times 4 - 2^2 = 4, and the happiness for type 2 is 1 \\times 2 - 1^2 = 1.\n\nThe total weight is 9, which is within the capacity 10."
            },
            {
              "input": "3 6\n1 4\n2 3\n2 7",
              "output": "14",
              "explanation": null
            },
            {
              "input": "1 10\n1 7",
              "output": "12",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc373_g",
          "problem_letter": "G",
          "url": "https://abc373.contest.atcoder.jp/tasks/abc373_g?lang=en",
          "statement": "Problem Statement: For each integer i from 1 through N, let segment i be the line segment connecting P_i and Q_{R_i}.  Then, segment i and segment j (1 \\leq  i < j \\leq N) never intersect.",
          "constraints": "Constraints: 1 \\leq N \\leq 300 \n 0 \\leq A_i, B_i, C_i, D_i \\leq 5000 (1 \\leq i \\leq N) \n (A_i, B_i) \\neq (A_j, B_j) (1 \\leq i < j \\leq N) \n (C_i, D_i) \\neq (C_j, D_j) (1 \\leq i < j \\leq N) \n (A_i, B_i) \\neq (C_j, D_j) (1 \\leq i, j \\leq N) \n No three different points lie on the same straight line. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nB_1\nA_2\nB_2\n\\vdots\nA_N\nB_N\nC_1\nD_1\nC_2\nD_2\n\\vdots\nC_N\nD_N\n\nOutput: \n\nIf there is no R satisfying the condition, print-1.\n\nIf such an R exists, print R_1, R_2, ..., R_N separated by spaces. If there are multiple solutions, you may print any of them.",
          "samples": [
            {
              "input": "3\n0 0\n2 4\n4 2\n0 2\n2 0\n4 4",
              "output": "2 1 3",
              "explanation": "The points are arranged as shown in the following figure.\n\n\n\nBy setting R = (2, 1, 3), the three line segments do not cross each other. Also, any of R = (1, 2, 3), (1, 3, 2), (2, 3, 1), and (3, 1, 2) is a valid answer."
            },
            {
              "input": "8\n59 85\n60 57\n72 12\n3 27\n16 58\n41 94\n77 64\n97 20\n32 37\n7 2\n57 94\n35 70\n38 60\n97 100\n5 76\n38 8",
              "output": "3 5 8 2 7 4 6 1",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc374",
      "url": "https://abc374.contest.atcoder.jp/?lang=en",
      "start_time": "2024-10-05T12:00:00",
      "problems": [
        {
          "id": "abc374_a",
          "problem_letter": "A",
          "url": "https://abc374.contest.atcoder.jp/tasks/abc374_a?lang=en",
          "statement": "Problem Statement: \n\nKEYENCE has a culture of addressing everyone with the suffix \"-san,\" regardless of roles, age, or positions.\n\nYou are given a string S consisting of lowercase English letters. If S ends withsan, printYes ; otherwise, printNo.",
          "constraints": "Constraints: S is a string of length between 4 and 30, inclusive, consisting of lowercase English letters.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS\n\nOutput: \n\nIf S ends withsan, printYes ; otherwise, printNo.",
          "samples": [
            {
              "input": "takahashisan",
              "output": "Yes",
              "explanation": "The string S=takahashisanends withsan, so printYes."
            },
            {
              "input": "aokikun",
              "output": "No",
              "explanation": "The string S=aokikundoes not end withsan, so printNo."
            }
          ]
        },
        {
          "id": "abc374_b",
          "problem_letter": "B",
          "url": "https://abc374.contest.atcoder.jp/tasks/abc374_b?lang=en",
          "statement": "Problem Statement: 1\\leq i\\leq |S|, 1\\leq i\\leq |T|, and S_i\\neq T_i. \n |S| < i \\leq |T|. \n |T| < i \\leq |S|.",
          "constraints": "Constraints: S and T are strings of length between 1 and 100, inclusive, consisting of lowercase English letters.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS\nT\n\nOutput: \n\nIf S and T are equal, print 0 ; otherwise, print the position of the first character where they differ.",
          "samples": [
            {
              "input": "abcde\nabedc",
              "output": "3",
              "explanation": "We have S=abcdeand T=abedc. S and T have the same first and second characters, but differ at the third character, so print 3."
            },
            {
              "input": "abcde\nabcdefg",
              "output": "6",
              "explanation": "We have S=abcdeand T=abcdefg. S and T are equal up to the fifth character, but only T has a sixth character, so print 6."
            },
            {
              "input": "keyence\nkeyence",
              "output": "0",
              "explanation": "S and T are equal, so print 0."
            }
          ]
        },
        {
          "id": "abc374_c",
          "problem_letter": "C",
          "url": "https://abc374.contest.atcoder.jp/tasks/abc374_c?lang=en",
          "statement": "Problem Statement: \n\nAs KEYENCE headquarters have more and more workers, they decided to divide the departments in the headquarters into two groups and stagger their lunch breaks.\n\nKEYENCE headquarters have N departments, and the number of people in the i -th department (1\\leq i\\leq N) is K_i.\n\nWhen assigning each department to Group A or Group B, having each group take lunch breaks at the same time, and ensuring that the lunch break times of Group A and Group B do not overlap, find the minimum possible value of the maximum number of people taking a lunch break at the same time. In other words, find the minimum possible value of the larger of the following: the total number of people in departments assigned to Group A, and the total number of people in departments assigned to Group B.",
          "constraints": "Constraints: 2 \\leq N \\leq 20 \n 1 \\leq K_i \\leq 10^8 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK_1\nK_2\n...\nK_N\n\nOutput: \n\nPrint the minimum possible value of the maximum number of people taking a lunch break at the same time.",
          "samples": [
            {
              "input": "5\n2 3 5 10 12",
              "output": "17",
              "explanation": "When assigning departments 1, 2, and 5 to Group A, and departments 3 and 4 to Group B, Group A has a total of 2+3+12=17 people, and Group B has a total of 5+10=15 people. Thus, the maximum number of people taking a lunch break at the same time is 17.\n\nIt is impossible to assign the departments so that both groups have 16 or fewer people, so print 17."
            },
            {
              "input": "2\n1 1",
              "output": "1",
              "explanation": "Multiple departments may have the same number of people."
            },
            {
              "input": "6\n22 25 26 45 22 31",
              "output": "89",
              "explanation": "For example, when assigning departments 1, 4, and 5 to Group A, and departments 2, 3, and 6 to Group B, the maximum number of people taking a lunch break at the same time is 89."
            }
          ]
        },
        {
          "id": "abc374_d",
          "problem_letter": "D",
          "url": "https://abc374.contest.atcoder.jp/tasks/abc374_d?lang=en",
          "statement": "Problem Statement: At the start of printing, the laser position is at coordinate (0, 0). \n When printing a line segment, the procedure below is followed.First, move the laser position to one of the endpoints of the line segment.One may start drawing from either endpoint.Then, move the laser position in a straight line from the current endpoint to the other endpoint while emitting the laser.It is not allowed to stop printing in the middle of a line segment. \n First, move the laser position to one of the endpoints of the line segment.One may start drawing from either endpoint. \n One may start drawing from either endpoint. \n Then, move the laser position in a straight line from the current endpoint to the other endpoint while emitting the laser.It is not allowed to stop printing in the middle of a line segment. \n It is not allowed to stop printing in the middle of a line segment. \n When not emitting the laser, the laser position can move in any direction at a speed ofSunits per second. \n When emitting the laser, the laser position can move along the line segment being printed at a speed of T units per second. \n The time required for operations other than moving the laser position can be ignored.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le N \\le 6 \n 1 \\le T \\le S \\le 1000 \n -1000 \\le A_i,B_i,C_i,D_i \\le 1000 \n (A_i,B_i) \\neq (C_i,D_i) ( 1 \\le i \\le N)",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS\nT\nA_1\nB_1\nC_1\nD_1\n\\vdots\nA_N\nB_N\nC_N\nD_N\n\nOutput: \n\nPrint the answer.\n\nYour output will be considered correct if the absolute or relative error from the true value does not exceed 10^{-6}.",
          "samples": [
            {
              "input": "3 2 1\n1 3 2 1\n0 2 0 0\n3 0 2 0",
              "output": "6.44317475868633722080",
              "explanation": "Emit the laser while moving the laser position from (0,0) to (0,2), printing the second line segment.This takes2seconds. \n This takes 2 seconds. \n Move the laser position from (0,2) to (1,3) without emitting the laser.This takes\\sqrt{2}/2seconds. \n This takes \\sqrt{2}/2 seconds. \n Emit the laser while moving the laser position from (1,3) to (2,1), printing the first line segment.This takes\\sqrt{5}seconds. \n This takes \\sqrt{5} seconds. \n Move the laser position from (2,1) to (2,0) without emitting the laser.This takes1/2second. \n This takes 1/2 second. \n Emit the laser while moving the laser position from (2,0) to (3,0), printing the third line segment.This takes1second. \n This takes 1 second. \n The total time taken is 2 + (\\sqrt{2}/2) + \\sqrt{5} + (1/2) + 1 \\approx 6.443175 seconds.\n\nThis takes 2 seconds.\n\nThis takes \\sqrt{2}/2 seconds.\n\nThis takes \\sqrt{5} seconds.\n\nThis takes 1/2 second.\n\nThis takes 1 second."
            },
            {
              "input": "2 1 1\n0 0 10 10\n0 2 2 0",
              "output": "20.97056274847714058517",
              "explanation": null
            },
            {
              "input": "6 3 2\n-1000 -1000 1000 1000\n1000 -1000 -1000 1000\n-1000 -1000 1000 1000\n1000 -1000 -1000 1000\n1000 1000 -1000 -1000\n-1000 1000 1000 -1000",
              "output": "9623.35256169626864153344",
              "explanation": "Multiple line segments overlap here, and you need to print the overlapping parts for each line segment separately."
            },
            {
              "input": "6 10 8\n1000 1000 -1000 -1000\n1000 -1000 -1000 -1000\n-1000 1000 1000 1000\n-1000 1000 -1000 -1000\n1000 1000 1000 -1000\n1000 -1000 -1000 1000",
              "output": "2048.52813742385702910909",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc374_e",
          "problem_letter": "E",
          "url": "https://abc374.contest.atcoder.jp/tasks/abc374_e?lang=en",
          "statement": "Problem Statement: Machine S_i : Can process A_i products per day per unit, and costs P_i yen per unit. \n Machine T_i : Can process B_i products per day per unit, and costs Q_i yen per unit.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le N \\le 100 \n 1 \\le A_i,B_i \\le 100 \n 1 \\le P_i,Q_i,X \\le 10^7",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nX\nA_1\nP_1\nB_1\nQ_1\nA_2\nP_2\nB_2\nQ_2\n\\vdots\nA_N\nP_N\nB_N\nQ_N\n\nOutput: \n\nPrint the answer as an integer.",
          "samples": [
            {
              "input": "3 22\n2 5 3 6\n1 1 3 3\n1 3 2 4",
              "output": "4",
              "explanation": "For example, by introducing machines as follows, we can achieve a production capacity of 4, which is the maximum possible.\n\nFor process 1, introduce 2 units of machine S_1.This allows processing4products per day and costs a total of10yen. \n This allows processing 4 products per day and costs a total of 10 yen. \n For process 2, introduce 1 unit of machine S_2.This allows processing1product per day and costs a total of1yen. \n This allows processing 1 product per day and costs a total of 1 yen. \n For process 2, introduce 1 unit of machine T_2.This allows processing3products per day and costs a total of3yen. \n This allows processing 3 products per day and costs a total of 3 yen. \n For process 3, introduce 2 units of machine T_3.This allows processing4products per day and costs a total of8yen. \n This allows processing 4 products per day and costs a total of 8 yen.\n\nThis allows processing 4 products per day and costs a total of 10 yen.\n\nThis allows processing 1 product per day and costs a total of 1 yen.\n\nThis allows processing 3 products per day and costs a total of 3 yen.\n\nThis allows processing 4 products per day and costs a total of 8 yen."
            },
            {
              "input": "1 10000000\n100 1 100 1",
              "output": "1000000000",
              "explanation": null
            },
            {
              "input": "1 1\n1 10000000 1 10000000",
              "output": "0",
              "explanation": "There may be cases where a positive production capacity cannot be achieved."
            },
            {
              "input": "10 7654321\n8 6 9 1\n5 6 4 3\n2 4 7 9\n7 8 9 1\n7 9 1 6\n4 8 9 1\n2 2 8 9\n1 6 2 6\n4 2 3 4\n6 6 5 2",
              "output": "894742",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc374_f",
          "problem_letter": "F",
          "url": "https://abc374.contest.atcoder.jp/tasks/abc374_f?lang=en",
          "statement": "Problem Statement: At most K orders can be shipped together. \n Order i can only be shipped on Day T_i or later. \n Once a shipment is made, the next shipment cannot be made until X days later.That is, if a shipment is made on Daya, the next shipment can be made on Daya+X. \n That is, if a shipment is made on Day a, the next shipment can be made on Day a+X.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le K \\le N \\le 100 \n 1 \\le X \\le 10^9 \n 1 \\le T_1 \\le T_2 \\le \\dots \\le T_N \\le 10^{12}",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nX\nT_1\nT_2\n...\nT_N\n\nOutput: \n\nPrint the answer as an integer.",
          "samples": [
            {
              "input": "5 2 3\n1 5 6 10 12",
              "output": "2",
              "explanation": "For example, by scheduling shipments as follows, we can achieve a total dissatisfaction of 2, which is the minimum possible.\n\nShip order 1 on Day 1.This results in dissatisfaction of(1-1) = 0, and the next shipment can be made on Day4. \n This results in dissatisfaction of (1-1) = 0, and the next shipment can be made on Day 4. \n Ship orders 2 and 3 on Day 6.This results in dissatisfaction of(6-5) + (6-6) = 1, and the next shipment can be made on Day9. \n This results in dissatisfaction of (6-5) + (6-6) = 1, and the next shipment can be made on Day 9. \n Ship order 4 on Day 10.This results in dissatisfaction of(10-10) = 0, and the next shipment can be made on Day13. \n This results in dissatisfaction of (10-10) = 0, and the next shipment can be made on Day 13. \n Ship order 5 on Day 13.This results in dissatisfaction of(13-12) = 1, and the next shipment can be made on Day16. \n This results in dissatisfaction of (13-12) = 1, and the next shipment can be made on Day 16.\n\nThis results in dissatisfaction of (1-1) = 0, and the next shipment can be made on Day 4.\n\nThis results in dissatisfaction of (6-5) + (6-6) = 1, and the next shipment can be made on Day 9.\n\nThis results in dissatisfaction of (10-10) = 0, and the next shipment can be made on Day 13.\n\nThis results in dissatisfaction of (13-12) = 1, and the next shipment can be made on Day 16."
            },
            {
              "input": "1 1 1000000000\n1000000000000",
              "output": "0",
              "explanation": null
            },
            {
              "input": "15 4 5\n1 3 3 6 6 6 10 10 10 10 15 15 15 15 15",
              "output": "35",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc374_g",
          "problem_letter": "G",
          "url": "https://abc374.contest.atcoder.jp/tasks/abc374_g?lang=en",
          "statement": "Problem Statement: It consists of one or more strings, each consisting of uppercase English letters. \n For each already used product name, there exists at least one string in the list that contains the name as a (contiguous) substring. \n None of the strings in the list contain any length- 2 (contiguous) substring that is not an already used product name.",
          "constraints": "Constraints: 1\\leq N\\leq 26^2 \n N is an integer. \n Each S_i is a string of length 2 consisting of uppercase English letters. \n All S_1,S_2,\\ldots,S_N are distinct.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS_1\nS_2\n\\vdots\nS_N\n\nOutput: \n\nPrint the minimum possible number of strings in the NG list.",
          "samples": [
            {
              "input": "7\nAB\nBC\nCA\nCD\nDE\nDF\nXX",
              "output": "3",
              "explanation": "One NG list satisfying the conditions is the one consisting of the following three strings:\n\nThis has three strings, and there is no NG list satisfying the conditions with 2 or fewer strings, so print 3.\n\nCABCDE \n DF \n XX"
            },
            {
              "input": "5\nAC\nBC\nCD\nDE\nDF",
              "output": "2",
              "explanation": "One NG list satisfying the conditions is the one consisting of the following two strings:\n\nNote that each used product name may appear in multiple strings in the NG list or multiple times within the same string.\n\nACDE \n BCDF"
            },
            {
              "input": "6\nAB\nAC\nCB\nAD\nDB\nBA",
              "output": "1",
              "explanation": "For example, an NG list consisting only ofABACBADBsatisfies the conditions."
            }
          ]
        }
      ]
    },
    {
      "id": "abc375",
      "url": "https://abc375.contest.atcoder.jp/?lang=en",
      "start_time": "2024-10-12T12:00:00",
      "problems": [
        {
          "id": "abc375_a",
          "problem_letter": "A",
          "url": "https://abc375.contest.atcoder.jp/tasks/abc375_a?lang=en",
          "statement": "Problem Statement: Seats i and i + 2 are occupied, and seat i + 1 is unoccupied.",
          "constraints": "Constraints: N is an integer satisfying 1 \\leq N \\leq 2 \\times 10^5. \n S is a string of length N consisting of#and..",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "6\n#.##.#",
              "output": "2",
              "explanation": "i = 1 and 4 satisfy the condition, so the answer is 2."
            },
            {
              "input": "1\n#",
              "output": "0",
              "explanation": null
            },
            {
              "input": "9\n##.#.#.##",
              "output": "3",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc375_b",
          "problem_letter": "B",
          "url": "https://abc375.contest.atcoder.jp/tasks/abc375_b?lang=en",
          "statement": "Problem Statement: \n\nTakahashi is at the origin on a two-dimensional coordinate plane.\n\nThe cost for him to move from point (a, b) to point (c, d) is \\sqrt{(a - c)^2 + (b - d)^2}.\n\nFind the total cost when he starts at the origin, visits N points (X_1, Y_1), ..., (X_N, Y_N) in this order, and then returns to the origin.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n -10^9 \\leq X_i, Y_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nX_1\nY_1\n\\vdots\nX_N\nY_N\n\nOutput: \n\nPrint the answer. Your output will be considered correct if its absolute or relative error from the true value is at most 10^{-6}.",
          "samples": [
            {
              "input": "2\n1 2\n-1 0",
              "output": "6.06449510224597979401",
              "explanation": "The journey consists of the following three steps:\n\nThe total cost is 6.064495102....\n\nMove from (0, 0) to (1, 2). The cost is \\sqrt{(0 - 1)^2 + (0 - 2)^2} = \\sqrt{5} = 2.236067977.... \n Move from (1, 2) to (-1, 0). The cost is \\sqrt{(1 - (-1))^2 + (2 - 0)^2} = \\sqrt{8} = 2.828427124.... \n Move from (-1, 0) to (0, 0). The cost is \\sqrt{(-1 - 0)^2 + (0 - 0)^2} = \\sqrt{1} = 1."
            },
            {
              "input": "7\n-14142 13562\n-17320 50807\n-22360 67977\n24494 89742\n-26457 51311\n28284 27124\n31622 77660",
              "output": "384694.57587932075868509383",
              "explanation": null
            },
            {
              "input": "5\n-100000 100000\n100000 -100000\n-100000 100000\n100000 -100000\n-100000 100000",
              "output": "1414213.56237309504880168872",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc375_c",
          "problem_letter": "C",
          "url": "https://abc375.contest.atcoder.jp/tasks/abc375_c?lang=en",
          "statement": "Problem Statement: For all pairs of integers x, y between i and N + 1 - i, inclusive, replace the color of cell (y, N + 1 - x) with the color of cell (x, y). Perform these replacementssimultaneously for all such pairsx, y.",
          "constraints": "Constraints: N is an even number between 2 and 3000, inclusive. \n Each A_{i, j} is#or..",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_{1,1}A_{1,2}... A_{1,N}\nA_{2,1}A_{2,2}... A_{2,N}\n\\vdots\nA_{N,1}A_{N,2}... A_{N,N}\n\nOutput: \n\nAfter all operations, let B_{i, j} =# if cell (i, j) is black, and B_{i, j} =. if it is white. Print the grid in the following format:\n\nB_{1,1}B_{1,2}... B_{1,N}\nB_{2,1}B_{2,2}... B_{2,N}\n\\vdots\nB_{N,1}B_{N,2}... B_{N,N}",
          "samples": [
            {
              "input": "8\n.......#\n.......#\n.####..#\n.####..#\n.##....#\n.##....#\n.#######\n.#######",
              "output": "........\n#######.\n#.....#.\n#.###.#.\n#.#...#.\n#.#####.\n#.......\n########",
              "explanation": "The operations change the colors of the grid cells as follows:"
            },
            {
              "input": "6\n.#.#.#\n##.#..\n...###\n###...\n..#.##\n#.#.#.",
              "output": "#.#.#.\n.#.#.#\n#.#.#.\n.#.#.#\n#.#.#.\n.#.#.#",
              "explanation": null
            },
            {
              "input": "12\n.......#.###\n#...#...#..#\n###.#..#####\n..#.#.#.#...\n.#.....#.###\n.......#.#..\n#...#..#....\n#####.......\n...#...#.#.#\n..###..#..##\n#..#.#.#.#.#\n.####.......",
              "output": ".#..##...##.\n#.#.#.#.#...\n###.##..#...\n#.#.#.#.#...\n#.#.##...##.\n............\n............\n.###.###.###\n...#...#.#..\n.###...#.###\n...#...#...#\n.###...#.###",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc375_d",
          "problem_letter": "D",
          "url": "https://abc375.contest.atcoder.jp/tasks/abc375_d?lang=en",
          "statement": "Problem Statement: 1 \\leq i < j < k \\leq |S| \n The length- 3 string formed by concatenating S_i, S_j, and S_k in this order is a palindrome.",
          "constraints": "Constraints: S is a string of length between 1 and 2 \\times 10^5, inclusive, consisting of uppercase English letters.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "ABCACC",
              "output": "5",
              "explanation": "The triples satisfying the conditions are (i, j, k) = (1, 2, 4), (1, 3, 4), (3, 4, 5), (3, 4, 6), (3, 5, 6)."
            },
            {
              "input": "OOOOOOOO",
              "output": "56",
              "explanation": null
            },
            {
              "input": "XYYXYYXYXXX",
              "output": "75",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc375_e",
          "problem_letter": "E",
          "url": "https://abc375.contest.atcoder.jp/tasks/abc375_e?lang=en",
          "statement": "Problem Statement: \n\nThere are N people divided into three teams.\n\nThe people are numbered 1, 2, ..., N, and the teams are numbered 1, 2, 3. Currently, person i belongs to team A_i.\n\nEach person has a value calledstrength ; person i has a strength of B_i. Thestrength of a team is defined as the sum of the strengths of its members.\n\nDetermine whether it is possible for zero or more people to switch teams so that all teams have equal strength. If it is possible, find the minimum number of people who need to switch teams to achieve this.\n\nYou cannot create new teams other than teams 1, 2, 3.",
          "constraints": "Constraints: 3 \\leq N \\leq 100 \n A_i \\in \\lbrace 1, 2, 3 \\rbrace \n For each x \\in \\lbrace 1, 2, 3 \\rbrace, there exists some i with A_i = x. \n 1 \\leq B_i \n \\displaystyle\\sum_{i = 1}^{N} B_i \\leq 1500 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nB_1\nA_2\nB_2\n\\vdots\nA_N\nB_N\n\nOutput: \n\nIf it is possible to make all teams have equal strength, print the minimum number of people who need to switch teams. Otherwise, print-1.",
          "samples": [
            {
              "input": "6\n1 2\n2 5\n1 5\n3 3\n1 3\n3 6",
              "output": "2",
              "explanation": "If person 1 switches to team 3 and person 4 switches to team 2, all teams will have a strength of 8."
            },
            {
              "input": "4\n1 1\n1 2\n2 3\n3 4",
              "output": "-1",
              "explanation": null
            },
            {
              "input": "3\n1 1\n2 1\n3 1",
              "output": "0",
              "explanation": null
            },
            {
              "input": "12\n2 5\n1 4\n3 3\n2 3\n3 9\n1 2\n2 2\n3 9\n2 6\n1 9\n1 1\n3 1",
              "output": "3",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc375_f",
          "problem_letter": "F",
          "url": "https://abc375.contest.atcoder.jp/tasks/abc375_f?lang=en",
          "statement": "Problem Statement: 1 i: Road i becomes closed. \n 2 x y: Print the shortest distance from city x to city y, using only roads that are not closed. If city y cannot be reached from city x, print-1instead.",
          "constraints": "Constraints: 2 \\leq N \\leq 300 \n 0 \\leq M \\leq \\frac{N(N-1)}{2} \n 1 \\leq A_i < B_i \\leq N \n All pairs (A_i, B_i) are distinct. \n 1 \\leq C_i \\leq 10^9 \n 1 \\leq Q \\leq 2 \\times 10^5 \n In the queries of the first type, 1 \\leq i \\leq M. \n The road given in a query of the first type is not already closed at that time. \n The number of queries of the first type is at most 300. \n In the queries of the second type, 1 \\leq x < y \\leq N. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nQ\nA_1\nB_1\nC_1\n\\vdots\nA_M\nB_M\nC_M\n\\mathrm{query}_1\n\\vdots\n\\mathrm{query}_Q\n\nEach query is in one of the following two formats:\n\n1i\n\n2x\ny\n\nOutput: \n\nProcess the queries in order.",
          "samples": [
            {
              "input": "3 3 5\n1 2 5\n1 3 10\n2 3 6\n2 1 3\n1 2\n2 1 3\n1 1\n2 1 3",
              "output": "10\n11\n-1",
              "explanation": "In the first query, print the shortest distance from city 1 to city 3, which is 10. \n In the second query, road 2 becomes closed. \n In the third query, print the shortest distance from city 1 to city 3, which is 11. \n In the fourth query, road 1 becomes closed. \n In the fifth query, city 3 cannot be reached from city 1, so print-1."
            },
            {
              "input": "4 6 6\n2 3 1\n2 4 1\n3 4 1\n1 2 1\n1 3 1\n1 4 1\n1 4\n1 5\n1 6\n2 1 2\n2 1 3\n2 1 4",
              "output": "-1\n-1\n-1",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc375_g",
          "problem_letter": "G",
          "url": "https://abc375.contest.atcoder.jp/tasks/abc375_g?lang=en",
          "statement": "Problem Statement: The shortest distance from city 1 to city N when all roads are passable \n The shortest distance from city 1 to city N when the M - 1 roads other than road i are passable",
          "constraints": "Constraints: 2 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq M \\leq 2 \\times 10^5 \n 1 \\leq A_i < B_i \\leq N \n All pairs (A_i, B_i) are distinct. \n 1 \\leq C_i \\leq 10^9 \n City N can be reached from city 1 when all roads are passable. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nA_1\nB_1\nC_1\n\\vdots\nA_M\nB_M\nC_M\n\nOutput: \n\nPrint M lines. The i -th line should containYes if the shortest distance from city 1 to city N when all roads are passable is different from the shortest distance when the M - 1 roads other than road i are passable, andNo otherwise.\n\nIf city N can be reached from city 1 in one of these cases but not the other, the two values are considered different.",
          "samples": [
            {
              "input": "3 3\n1 2 5\n1 3 10\n2 3 6",
              "output": "No\nYes\nNo",
              "explanation": "When all roads are passable, the shortest distance from city 1 to city 3 is 10.\n\nWhen the two roads other than road 1 are passable, the shortest distance is 10. \n When the two roads other than road 2 are passable, the shortest distance is 11. \n When the two roads other than road 3 are passable, the shortest distance is 10."
            },
            {
              "input": "4 6\n2 3 1\n2 4 1\n3 4 1\n1 2 1\n1 3 1\n1 4 1",
              "output": "No\nNo\nNo\nNo\nNo\nYes",
              "explanation": "When all roads are passable, the shortest distance from city 1 to city 4 is 1.\n\nWhen the five roads other than road 6 are passable, the shortest distance is 2."
            },
            {
              "input": "2 1\n1 2 1",
              "output": "Yes",
              "explanation": "When the zero roads other than road 1 are passable, city 2 cannot be reached from city 1."
            }
          ]
        }
      ]
    },
    {
      "id": "abc376",
      "url": "https://abc376.contest.atcoder.jp/?lang=en",
      "start_time": "2024-10-19T12:00:00",
      "problems": [
        {
          "id": "abc376_a",
          "problem_letter": "A",
          "url": "https://abc376.contest.atcoder.jp/tasks/abc376_a?lang=en",
          "statement": "Problem Statement: \n\nThere is a mysterious button.\nWhen you press this button, you receive one candy, unless less than C seconds have elapsed since you last received a candy.\n\nTakahashi decided to press this button N times.\nHe will press the button for the i -th time T_i seconds from now.\n\nHow many candies will he receive?",
          "constraints": "Constraints: 1 \\leq N \\leq 100 \n 1 \\leq C \\leq 1000 \n 0 \\leq T_1 < T_2 < \\dots < T_N \\leq 1000 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nC\nT_1\nT_2\n...\nT_N\n\nOutput: \n\nPrint the number of candies that Takahashi will receive.",
          "samples": [
            {
              "input": "6 5\n1 3 7 8 10 12",
              "output": "3",
              "explanation": "Takahashi will press the button six times.\n\nTherefore, he receives three candies.\n\n1st press ( 1 second from now): You always receive a candy when pressing the button for the first time. \n 2nd press ( 3 seconds from now): 3 - 1 = 2 < C seconds have elapsed since he last received a candy, so he does not receive a candy. \n 3rd press ( 7 seconds from now): 7 - 1 = 6 \\geq C seconds have elapsed since he last received a candy, so he receives a candy. \n 4th press ( 8 seconds from now): 8 - 7 = 1 < C second has elapsed since he last received a candy, so he does not receive a candy. \n 5th press ( 10 seconds from now): 10 - 7 = 3 < C seconds have elapsed since he last received a candy, so he does not receive a candy. \n 6th press ( 12 seconds from now): 12 - 7 = 5 \\geq C seconds have elapsed since he last received a candy, so he receives a candy."
            },
            {
              "input": "3 2\n0 2 4",
              "output": "3",
              "explanation": null
            },
            {
              "input": "10 3\n0 3 4 6 9 12 15 17 19 20",
              "output": "7",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc376_b",
          "problem_letter": "B",
          "url": "https://abc376.contest.atcoder.jp/tasks/abc376_b?lang=en",
          "statement": "Problem Statement: Move one of your hands to an adjacent part of the part it is currently holding. However, you can do this only if the other hand is not on the destination part. \n Perform some number of operations (possibly zero) so that your left hand (if H_i isL) or your right hand (if H_i isR) is holding part T_i.\n  Here, youmust notmove the other hand not specified by H_i.",
          "constraints": "Constraints: 3 \\leq N \\leq 100 \n 1 \\leq Q \\leq 100 \n H_i isLorR. \n 1 \\leq T_i \\leq N \n N, Q, and T_i are integers. \n Only achievable instructions are given (see the problem statement for details).",
          "io_format": "Input: \n\nThe Input is given from Standard Input in the following format:\n\nN\nQ\nH_1\nT_1\nH_2\nT_2\n\\vdots\nH_Q\nT_Q\n\nOutput: \n\nPrint the minimum total number of operations required to follow all the instructions.",
          "samples": [
            {
              "input": "6 3\nR 4\nL 5\nR 6",
              "output": "8",
              "explanation": "\n\nBy performing the following operations, you can follow all Q instructions in order.\n\nIn this case, the total number of operations is 2+2+4=8, which is the minimum.\n(Note that when following the third instruction, you cannot move your right hand as part 4 \\rightarrow 5 \\rightarrow 6.)"
            },
            {
              "input": "100 2\nL 1\nR 2",
              "output": "0",
              "explanation": "There are cases where you can follow the instructions without performing any operations."
            },
            {
              "input": "30 8\nR 23\nR 26\nR 29\nL 20\nR 29\nR 19\nL 7\nL 16",
              "output": "92",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc376_c",
          "problem_letter": "C",
          "url": "https://abc376.contest.atcoder.jp/tasks/abc376_c?lang=en",
          "statement": "Problem Statement: Choose an arbitrary positive integer x and purchase one box of size x. \n Place each of the N toys into one of the N boxes (the N-1 existing boxes plus the newly purchased box).\r\nHere, each toy can only be placed in a box whose size is not less than the toy's size, and no box can contain two or more toys.",
          "constraints": "Constraints: 2 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq A_i, B_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\nB_1\nB_2\n...\nB_{N-1}\n\nOutput: \n\nIf there exists a value of x such that Takahashi can execute step 2, print the minimum such x. Otherwise, print-1.",
          "samples": [
            {
              "input": "4\n5 2 3 7\n6 2 8",
              "output": "3",
              "explanation": "Consider the case where x=3 (that is, he purchases a box of size 3 in step 1).\n\nIf the newly purchased box is called box 4, toys 1,...,4 have sizes of 5, 2, 3, and 7, respectively, and boxes 1,...,4 have sizes of 6, 2, 8, and 3, respectively.\nThus, toy 1 can be placed in box 1, toy 2 in box 2, toy 3 in box 4, and toy 4 in box 3.\n\nOn the other hand, if x \\leq 2, it is impossible to place all N toys into separate boxes.\nTherefore, the answer is 3."
            },
            {
              "input": "4\n3 7 2 5\n8 1 6",
              "output": "-1",
              "explanation": "No matter what size of box is purchased in step 1, no toy can be placed in box 2, so it is impossible to execute step 2."
            },
            {
              "input": "8\n2 28 17 39 57 56 37 32\n34 27 73 28 76 61 27",
              "output": "37",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc376_d",
          "problem_letter": "D",
          "url": "https://abc376.contest.atcoder.jp/tasks/abc376_d?lang=en",
          "statement": "Problem Statement: \n\nThere is a simple directed graph with N vertices numbered from 1 to N and M edges. The i -th edge (1 \\leq i \\leq M) is a directed edge from vertex a_i to vertex b_i. Determine whether there exists a cycle that contains vertex 1, and if it exists, find the minimum number of edges among such cycles.",
          "constraints": "Constraints: 2 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq M \\leq \\min \\left( \\frac{N(N-1)}{2},\\ 2 \\times 10^5 \\right) \n 1 \\leq a_i \\leq N \n 1 \\leq b_i \\leq N \n a_i \\neq b_i \n (a_i, b_i) \\neq (a_j, b_j) and (a_i, b_i) \\neq (b_j, a_j), if i \\neq j. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\na_1\nb_1\na_2\nb_2\n\\vdots\na_M\nb_M\n\nOutput: \n\nIf there exists a cycle that contains vertex 1, print the minimum number of edges among such cycles. Otherwise, print-1.",
          "samples": [
            {
              "input": "3 3\n1 2\n2 3\n3 1",
              "output": "3",
              "explanation": "Vertex 1 \\to vertex 2 \\to vertex 3 \\to vertex 1 is a cycle with three edges, and this is the only cycle that contains vertex 1."
            },
            {
              "input": "3 2\n1 2\n2 3",
              "output": "-1",
              "explanation": null
            },
            {
              "input": "6 9\n6 1\n1 5\n2 6\n2 1\n3 6\n4 2\n6 4\n3 5\n5 4",
              "output": "4",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc376_e",
          "problem_letter": "E",
          "url": "https://abc376.contest.atcoder.jp/tasks/abc376_e?lang=en",
          "statement": "Problem Statement: \n\nYou are given sequences of length N : A = (A_1, A_2, ..., A_N) and B = (B_1, B_2, ..., B_N). Let S be a subset of \\lbrace1, 2, ..., N\\rbrace of size K.\nHere, find the minimum possible value of the following expression:\n\nYou are given T test cases; solve each of them.",
          "constraints": "Constraints: 1 \\leq T \\leq 2 \\times 10^5 \n 1 \\leq K \\leq N \\leq 2 \\times 10^5 \n 1 \\leq A_i, B_i \\leq 10^6 \n The sum of N over all test cases is at most 2 \\times 10^5. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format. Here, \\mathrm{case}_i denotes the i -th test case.\n\nT\n\\mathrm{case}_1\n\\mathrm{case}_2\n\\vdots\n\\mathrm{case}_T\n\nEach test case is given in the following format:\n\nN\nK\nA_1\nA_2\n...\nA_N\nB_1\nB_2\n...\nB_N\n\nOutput: \n\nPrint T lines. The i -th line should contain the answer for the i -th test case.",
          "samples": [
            {
              "input": "3\n3 2\n3 7 6\n9 2 4\n5 3\n6 4 1 5 9\n8 6 5 1 7\n10 6\n61 95 61 57 69 49 46 47 14 43\n39 79 48 92 90 76 30 16 30 94",
              "output": "42\n60\n14579",
              "explanation": "In the first test case, for S = \\{2, 3\\}, the value of the expression is 7 \\times (2 + 4) = 42, which is the minimum."
            }
          ]
        },
        {
          "id": "abc376_f",
          "problem_letter": "F",
          "url": "https://abc376.contest.atcoder.jp/tasks/abc376_f?lang=en",
          "statement": "Problem Statement: Move one of your hands to an adjacent part of the part it is currently holding. However, you can do this only if the other hand is not on the destination part. \n Perform some number of operations (possibly zero) so that your left hand (if H_i isL) or your right hand (if H_i isR) is holding part T_i.\n  Here, youmaymove the other hand not specified by H_i.",
          "constraints": "Constraints: 3\\leq N \\leq 3000 \n 1\\leq Q \\leq 3000 \n H_i isLorR. \n 1 \\leq T_i \\leq N \n N, Q, and T_i are integers.",
          "io_format": "Input: \n\nThe Input is given from Standard Input in the following format:\n\nN\nQ\nH_1\nT_1\nH_2\nT_2\n\\vdots\nH_Q\nT_Q\n\nOutput: \n\nPrint the minimum total number of operations required to follow all the instructions.",
          "samples": [
            {
              "input": "6 3\nR 4\nL 5\nR 5",
              "output": "6",
              "explanation": "\n\nBy performing the following operations, you can follow all Q instructions in order.\n\nIn this case, the total number of operations is 2+2+1+1=6, which is the minimum."
            },
            {
              "input": "100 2\nL 1\nR 2",
              "output": "0",
              "explanation": "There are cases where you can follow the instructions without performing any operations."
            },
            {
              "input": "30 8\nR 23\nR 26\nR 29\nL 20\nR 29\nR 19\nL 7\nL 16",
              "output": "58",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc376_g",
          "problem_letter": "G",
          "url": "https://abc376.contest.atcoder.jp/tasks/abc376_g?lang=en",
          "statement": "Problem Statement: Choose an unsearched vertex whose parent is searched, and mark it as searched.",
          "constraints": "Constraints: 1 \\leq T \\leq 2 \\times 10^5 \n 1 \\leq N \\leq 2 \\times 10^5 \n 0 \\leq p_i < i \n 1 \\leq a_i \n \\sum_{i=1}^N a_i \\leq 10^8 \n The sum of N over all test cases is at most 2 \\times 10^5. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format. Here, \\mathrm{case}_i denotes the i -th test case.\n\nT\n\\mathrm{case}_1\n\\mathrm{case}_2\n\\vdots\n\\mathrm{case}_T\n\nEach test case is given in the following format:\n\nN\np_1\np_2\n...\np_N\na_1\na_2\n...\na_N\n\nOutput: \n\nPrint T lines. The i -th line should contain the answer for the i -th test case.",
          "samples": [
            {
              "input": "3\n3\n0 0 1\n1 2 3\n5\n0 1 0 0 0\n8 6 5 1 7\n10\n0 1 1 3 3 1 4 7 5 4\n43 39 79 48 92 90 76 30 16 30",
              "output": "166374061\n295776107\n680203339",
              "explanation": "In the first test case, the expected number of operations is \\frac{13}{6}."
            }
          ]
        }
      ]
    },
    {
      "id": "abc377",
      "url": "https://abc377.contest.atcoder.jp/?lang=en",
      "start_time": "2024-10-26T12:00:00",
      "problems": [
        {
          "id": "abc377_a",
          "problem_letter": "A",
          "url": "https://abc377.contest.atcoder.jp/tasks/abc377_a?lang=en",
          "statement": "Problem Statement: \n\nYou are given a string S of length 3 consisting of uppercase English letters.\n\nDetermine whether it is possible to rearrange the characters in S to make it match the stringABC.",
          "constraints": "Constraints: S is a string of length 3 consisting of uppercase English letters.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS\n\nOutput: \n\nPrintYes if it is possible to rearrange the characters in S to make it match the stringABC, andNo otherwise.",
          "samples": [
            {
              "input": "BAC",
              "output": "Yes",
              "explanation": "You can make S matchABCby swapping the first and second characters of S."
            },
            {
              "input": "AAC",
              "output": "No",
              "explanation": "You cannot make S matchABCno matter how you rearrange the characters."
            },
            {
              "input": "ABC",
              "output": "Yes",
              "explanation": null
            },
            {
              "input": "ARC",
              "output": "No",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc377_b",
          "problem_letter": "B",
          "url": "https://abc377.contest.atcoder.jp/tasks/abc377_b?lang=en",
          "statement": "Problem Statement: Placed on a square in row i \n Placed on a square in column j",
          "constraints": "Constraints: Each S_i is a string of length 8 consisting of.and# (1\\leq i\\leq 8).",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS_1\nS_2\nS_3\nS_4\nS_5\nS_6\nS_7\nS_8\n\nOutput: \n\nPrint the number of empty squares where you can place your piece without it being captured by any existing pieces.",
          "samples": [
            {
              "input": "...#....\n#.......\n.......#\n....#...\n.#......\n........\n........\n..#.....",
              "output": "4",
              "explanation": "The existing pieces can capture pieces placed on the squares shown in blue in the following figure:\n\n\n\nTherefore, you can place your piece without it being captured on 4 squares: square (6,6), square (6,7), square (7,6), and square (7,7)."
            },
            {
              "input": "........\n........\n........\n........\n........\n........\n........\n........",
              "output": "64",
              "explanation": "There may be no pieces on the grid."
            },
            {
              "input": ".#......\n..#..#..\n....#...\n........\n..#....#\n........\n...#....\n....#...",
              "output": "4",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc377_c",
          "problem_letter": "C",
          "url": "https://abc377.contest.atcoder.jp/tasks/abc377_c?lang=en",
          "statement": "Problem Statement: Placed on square (i+2,j+1) \n Placed on square (i+1,j+2) \n Placed on square (i-1,j+2) \n Placed on square (i-2,j+1) \n Placed on square (i-2,j-1) \n Placed on square (i-1,j-2) \n Placed on square (i+1,j-2) \n Placed on square (i+2,j-1)",
          "constraints": "Constraints: 1\\leq N\\leq10^9 \n 1\\leq M\\leq2\\times10^5 \n 1\\leq a_k\\leq N,1\\leq b_k\\leq N\\ (1\\leq k\\leq M) \n (a_k,b_k)\\neq(a_l,b_l)\\ (1\\leq k\\lt l\\leq M) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\na_1\nb_1\na_2\nb_2\n\\vdots\na_M\nb_M\n\nOutput: \n\nPrint the number of empty squares where you can place your piece without it being captured by any existing pieces.",
          "samples": [
            {
              "input": "8 6\n1 4\n2 1\n3 8\n4 5\n5 2\n8 3",
              "output": "38",
              "explanation": "The existing pieces can capture pieces placed on the squares shown in blue in the following figure:\n\n\n\nTherefore, you can place your piece on the remaining 38 squares."
            },
            {
              "input": "1000000000 1\n1 1",
              "output": "999999999999999997",
              "explanation": "Out of 10^{18} squares, only 3 squares cannot be used: squares (1,1), (2,3), and (3,2).\n\nNote that the answer may be 2^{32} or greater."
            },
            {
              "input": "20 10\n1 4\n7 11\n7 15\n8 10\n11 6\n12 5\n13 1\n15 2\n20 10\n20 15",
              "output": "338",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc377_d",
          "problem_letter": "D",
          "url": "https://abc377.contest.atcoder.jp/tasks/abc377_d?lang=en",
          "statement": "Problem Statement: 1\\le l \\le r \\le M \n For every 1\\le i\\le N, the interval [l,r] does not completely contain the interval [L_i,R_i].",
          "constraints": "Constraints: 1\\le N,M\\le 2\\times 10^5 \n 1\\le L_i\\le R_i\\le M \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nL_1\nR_1\nL_2\nR_2\n\\vdots\nL_N\nR_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "2 4\n1 2\n3 4",
              "output": "5",
              "explanation": "The five pairs (l,r)=(1,1),(2,2),(2,3),(3,3),(4,4) satisfy the conditions.\n\nFor example, (l,r)=(1,3) does not satisfy the conditions because the interval [1,3] completely contains the interval [1,2]."
            },
            {
              "input": "6 5\n1 1\n2 2\n3 3\n4 4\n5 5\n1 5",
              "output": "0",
              "explanation": "There may be cases where no pairs of integers satisfy the conditions."
            },
            {
              "input": "6 20\n8 12\n14 20\n11 13\n5 19\n4 11\n1 6",
              "output": "102",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc377_e",
          "problem_letter": "E",
          "url": "https://abc377.contest.atcoder.jp/tasks/abc377_e?lang=en",
          "statement": "Problem Statement: For i=1,2,\\ldots,N,simultaneouslyupdate P_i to P_{P_i}.",
          "constraints": "Constraints: 1\\leq N\\leq2\\times10^5 \n 1\\leq K\\leq10^{18} \n 1\\leq P_i\\leq N\\ (1\\leq i\\leq N) \n P_i\\neq P_j\\ (1\\leq i\\lt j\\leq N) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nP_1\nP_2\n...\nP_N\n\nOutput: \n\nFor the P after all operations, print P_1,P_2,...,P_N in this order, separated by spaces.",
          "samples": [
            {
              "input": "6 3\n5 6 3 1 2 4",
              "output": "6 1 3 2 4 5",
              "explanation": "With each operation, P changes as follows:\n\nThus, print6 1 3 2 4 5.\n\nAfter the first operation, P is (2,4,3,5,6,1). \n After the second operation, P is (4,5,3,6,1,2). \n After the third operation, P is (6,1,3,2,4,5)."
            },
            {
              "input": "5 1000000000000000000\n1 2 3 4 5",
              "output": "1 2 3 4 5",
              "explanation": "Since P_i=i, P does not change no matter how many operations are performed."
            },
            {
              "input": "29 51912426\n7 24 8 23 6 1 4 19 11 18 20 9 17 28 22 27 15 2 12 26 10 13 14 25 5 29 3 21 16",
              "output": "18 23 16 24 21 10 2 27 19 7 12 8 13 5 15 26 17 4 3 9 1 22 25 14 28 11 29 6 20",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc377_f",
          "problem_letter": "F",
          "url": "https://abc377.contest.atcoder.jp/tasks/abc377_f?lang=en",
          "statement": "Problem Statement: Placed in row i \n Placed in column j \n Placed on any square (a,b)\\ (1\\leq a\\leq N,1\\leq b\\leq N) where i+j=a+b \n Placed on any square (a,b)\\ (1\\leq a\\leq N,1\\leq b\\leq N) where i-j=a-b",
          "constraints": "Constraints: 1\\leq N\\leq10^9 \n 1\\leq M\\leq10^3 \n 1\\leq a_k\\leq N,1\\leq b_k\\leq N\\ (1\\leq k\\leq M) \n (a_k,b_k)\\neq(a_l,b_l)\\ (1\\leq k\\lt l\\leq M) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\na_1\nb_1\na_2\nb_2\n\\vdots\na_M\nb_M\n\nOutput: \n\nPrint the number of empty squares where you can place your piece without it being captured by any existing pieces.",
          "samples": [
            {
              "input": "8 6\n1 4\n2 1\n3 8\n4 5\n5 2\n8 3",
              "output": "2",
              "explanation": "The existing pieces can capture pieces placed on the squares shown in blue in the following figure:\n\n\n\nTherefore, you can place your piece on only two squares: squares (6,6) and (7,7)."
            },
            {
              "input": "1000000000 1\n1 1",
              "output": "999999997000000002",
              "explanation": "Out of 10^{18} squares, the squares that cannot be used are: squares in row 1, squares in column 1, and squares (1,1), (2,2), ..., (10^9,10^9), totaling 3\\times10^9-2 squares.\n\nNote that the answer may be 2^{32} or greater."
            },
            {
              "input": "20 10\n1 4\n7 11\n7 15\n8 10\n11 6\n12 5\n13 1\n15 2\n20 10\n20 15",
              "output": "77",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc377_g",
          "problem_letter": "G",
          "url": "https://abc377.contest.atcoder.jp/tasks/abc377_g?lang=en",
          "statement": "Problem Statement: Pay a cost of 1 to delete the last character of T. This operation is possible when T is not empty. \n Pay a cost of 1 to add any lowercase English letter to the end of T.",
          "constraints": "Constraints: 1\\le N\\le 2\\times 10^5 \n Each S_i is a string of length at least 1 consisting of lowercase English letters. \n \\displaystyle \\sum_{i=1}^N |S_i|\\le 2\\times 10^5",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS_1\nS_2\n\\vdots\nS_N\n\nOutput: \n\nPrint N lines.\nThe i -th line (1\\le i\\le N) should contain the answer for k=i.",
          "samples": [
            {
              "input": "3\nsnuke\nsnuki\nsnuuk",
              "output": "5\n2\n4",
              "explanation": "For k=1, you can make T empty by performing the delete operation five times.\n\nFor k=2, you can make T match S_1 by deleting the last character and then addingeto the end.\n\nFor k=3, you can make T match S_2 by deleting the last character twice, then addingkto the end, and finally addingito the end."
            },
            {
              "input": "3\nabc\narc\nagc",
              "output": "3\n3\n3",
              "explanation": null
            },
            {
              "input": "8\nat\natatat\nattat\naatatatt\nattattat\nttatta\ntta\ntt",
              "output": "2\n4\n3\n8\n3\n6\n3\n1",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc378",
      "url": "https://abc378.contest.atcoder.jp/?lang=en",
      "start_time": "2024-11-02T12:00:00",
      "problems": [
        {
          "id": "abc378_a",
          "problem_letter": "A",
          "url": "https://abc378.contest.atcoder.jp/tasks/abc378_a?lang=en",
          "statement": "Problem Statement: \n\nThere are four balls, and the color of the i -th ball is A_i.\n\nFind the maximum number of times you can perform this operation: choose two balls of the same color and discard both.",
          "constraints": "Constraints: Each of A_1, A_2, A_3, A_4 is an integer between 1 and 4, inclusive.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nA_1\nA_2\nA_3\nA_4\n\nOutput: \n\nPrint the maximum number of times the operation can be performed as an integer.",
          "samples": [
            {
              "input": "2 1 2 1",
              "output": "2",
              "explanation": "The first and third balls both have color 2, so you can perform the operation to discard the first and third balls together.\n\nNext, the second and fourth balls both have color 1, so you can perform the operation to discard the second and fourth balls together.\n\nHence, you can perform a total of two operations."
            },
            {
              "input": "4 4 4 1",
              "output": "1",
              "explanation": null
            },
            {
              "input": "1 2 3 4",
              "output": "0",
              "explanation": "There are cases where you cannot perform the operation even once."
            }
          ]
        },
        {
          "id": "abc378_b",
          "problem_letter": "B",
          "url": "https://abc378.contest.atcoder.jp/tasks/abc378_b?lang=en",
          "statement": "Problem Statement: \n\nIn AtCoder City, N types of garbage are collected regularly. The i -th type of garbage (i=1,2,...,N) is collected on days when the date modulo q_i equals r_i.\n\nAnswer Q queries. In the j -th query (j=1,2,...,Q), given that the t_j -th type of garbage is put out on day d_j, answer the next day on which it will be collected.\n\nHere, if the i -th type of garbage is put out on a day when that type of garbage is collected, then the garbage will be collected on the same day.",
          "constraints": "Constraints: 1 \\leq N \\leq 100 \n 0 \\leq r_i < q_i \\leq 10^9 \n 1 \\leq Q \\leq 100 \n 1 \\leq t_j \\leq N \n 1 \\leq d_j \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nq_1\nr_1\nq_2\nr_2\n\\vdots\nq_N\nr_N\nQ\nt_1\nd_1\nt_2\nd_2\n\\vdots\nt_Q\nd_Q\n\nOutput: \n\nPrint Q lines. The j -th line (1\\leq j \\leq Q) should contain the answer to the j -th query.",
          "samples": [
            {
              "input": "2\n7 3\n4 2\n5\n1 1\n1 3\n1 4\n1 15\n2 7",
              "output": "3\n3\n10\n17\n10",
              "explanation": "1st query: The 1st type of garbage is collected on day 3 for the first time after day 1. \n 2nd query: The 1st type of garbage is collected on day 3 for the first time after day 3. \n 3rd query: The 1st type of garbage is collected on day 10 for the first time after day 4."
            }
          ]
        },
        {
          "id": "abc378_c",
          "problem_letter": "C",
          "url": "https://abc378.contest.atcoder.jp/tasks/abc378_c?lang=en",
          "statement": "Problem Statement: For i = 1, 2, \\dots, N, define B_i as follows:LetB_ibe the most recent position beforeiwhere an element equal toA_iappeared. If such a position does not exist, letB_i = -1.More precisely, if there exists a positive integerjsuch thatA_i = A_jandj < i, letB_ibe the largest suchj. If no suchjexists, letB_i = -1. \n Let B_i be the most recent position before i where an element equal to A_i appeared. If such a position does not exist, let B_i = -1.More precisely, if there exists a positive integer j such that A_i = A_j and j < i, let B_i be the largest such j. If no such j exists, let B_i = -1.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq A_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the elements of B in one line, separated by spaces.",
          "samples": [
            {
              "input": "5\n1 2 1 1 3",
              "output": "-1 -1 1 3 -1",
              "explanation": "i = 1 : There is no 1 before A_1 = 1, so B_1 = -1. \n i = 2 : There is no 2 before A_2 = 2, so B_2 = -1. \n i = 3 : The most recent occurrence of 1 before A_3 = 1 is A_1, so B_3 = 1. \n i = 4 : The most recent occurrence of 1 before A_4 = 1 is A_3, so B_4 = 3. \n i = 5 : There is no 3 before A_5 = 3, so B_5 = -1."
            },
            {
              "input": "4\n1 1000000000 1000000000 1",
              "output": "-1 -1 2 1",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc378_d",
          "problem_letter": "D",
          "url": "https://abc378.contest.atcoder.jp/tasks/abc378_d?lang=en",
          "statement": "Problem Statement: 1 \\leq i_k \\leq H, 1 \\leq j_k \\leq W, and S_{i_k, j_k} is., for each 0 \\leq k \\leq K. \n |i_{k+1} - i_k| + |j_{k+1} - j_k| = 1 for each 0 \\leq k \\leq K-1. \n (i_k, j_k) \\neq (i_l, j_l) for each 0 \\leq k < l \\leq K.",
          "constraints": "Constraints: 1 \\leq H, W \\leq 10 \n 1 \\leq K \\leq 11 \n H, W, and K are integers. \n Each S_{i,j} is.or#. \n There is at least one empty cell.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nH\nW\nK\nS_{1,1}S_{1,2}... S_{1,W}\nS_{2,1}S_{2,2}... S_{2,W}\n\\vdots\nS_{H,1}S_{H,2}... S_{H,W}\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "2 2 2\n.#\n..",
              "output": "2",
              "explanation": "Here are the two possible paths:\n\n(1,1) \\rightarrow (2,1) \\rightarrow (2,2) \n (2,2) \\rightarrow (2,1) \\rightarrow (1,1)"
            },
            {
              "input": "2 3 1\n.#.\n#.#",
              "output": "0",
              "explanation": null
            },
            {
              "input": "10 10 11\n....#..#..\n.#.....##.\n..#...##..\n...#......\n......##..\n..#......#\n#........#\n..##......\n.###....#.\n...#.....#",
              "output": "218070",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc378_e",
          "problem_letter": "E",
          "url": "https://abc378.contest.atcoder.jp/tasks/abc378_e?lang=en",
          "statement": "Problem Statement: \n\nYou are given a sequence A = (A_1, A_2, ..., A_N) of N non-negative integers, and a positive integer M.\n\nFind the following value:\n\n\\[\n\\sum_{1 \\leq l \\leq r \\leq N} \\left( \\left(\\sum_{l \\leq i \\leq r} A_i\\right) \\mathbin{\\mathrm{mod}} M \\right).\n\\]\n\nHere, X \\mathbin{\\mathrm{mod}} M denotes the remainder when the non-negative integer X is divided by M.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq M \\leq 2 \\times 10^5 \n 0 \\leq A_i \\leq 10^9",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3 4\n2 5 0",
              "output": "10",
              "explanation": "The answer is the sum of these values, 10. Note that the outer sum is not taken modulo M.\n\nA_1 \\mathbin{\\mathrm{mod}} M = 2 \n (A_1+A_2) \\mathbin{\\mathrm{mod}} M = 3 \n (A_1+A_2+A_3) \\mathbin{\\mathrm{mod}} M = 3 \n A_2 \\mathbin{\\mathrm{mod}} M = 1 \n (A_2+A_3) \\mathbin{\\mathrm{mod}} M = 1 \n A_3 \\mathbin{\\mathrm{mod}} M = 0"
            },
            {
              "input": "10 100\n320 578 244 604 145 839 156 857 556 400",
              "output": "2736",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc378_f",
          "problem_letter": "F",
          "url": "https://abc378.contest.atcoder.jp/tasks/abc378_f?lang=en",
          "statement": "Problem Statement: The graph is simple. \n All vertices in the cycle have degree 3.",
          "constraints": "Constraints: 3 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq u_i, v_i \\leq N \n The given graph is a tree. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nu_1\nv_1\nu_2\nv_2\n\\vdots\nu_{N-1}\nv_{N-1}\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "6\n1 2\n2 3\n3 4\n4 5\n3 6",
              "output": "1",
              "explanation": "Adding an edge connecting vertices 2 and 4 yields a simple graph where all vertices in the cycle have degree 3, so it satisfies the conditions."
            },
            {
              "input": "7\n1 2\n2 7\n3 5\n7 3\n6 2\n4 7",
              "output": "0",
              "explanation": "There are cases where no graphs satisfy the conditions."
            },
            {
              "input": "15\n1 15\n11 14\n2 10\n1 7\n9 8\n6 9\n4 12\n14 5\n4 9\n8 11\n7 4\n1 13\n3 6\n11 10",
              "output": "6",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc378_g",
          "problem_letter": "G",
          "url": "https://abc378.contest.atcoder.jp/tasks/abc378_g?lang=en",
          "statement": "Problem Statement: The length of a longest increasing subsequence of P is A. \n The length of a longest decreasing subsequence of P is B. \n There exists an integer n such that appending n + 0.5 to the end of P does not change either of the lengths of a longest increasing subsequence and a longest decreasing subsequence.",
          "constraints": "Constraints: All input values are integers. \n 2 \\leq A, B \n AB \\leq 120 \n 10^8 \\leq M \\leq 10^9 \n M is a prime.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nA\nB\nM\n\nOutput: \n\nPrint the number of permutations satisfying the conditions, modulo M.",
          "samples": [
            {
              "input": "3 2 998244353",
              "output": "10",
              "explanation": "For example, P = (2, 4, 5, 1, 3) satisfies the conditions. This can be confirmed as follows:\n\nThere are 10 permutations of (1, 2, 3, 4, 5) that satisfy the conditions.\n\nThe length of a longest increasing subsequence of P is 3. \n The length of a longest decreasing subsequence of P is 2. \n For n = 4, the lengths of longest increasing and decreasing subsequences of (2, 4, 5, 1, 3, 4.5) are 3 and 2, respectively."
            },
            {
              "input": "10 12 924844033",
              "output": "623378361",
              "explanation": "Print the count modulo M."
            }
          ]
        }
      ]
    },
    {
      "id": "abc379",
      "url": "https://abc379.contest.atcoder.jp/?lang=en",
      "start_time": "2024-11-09T12:00:00",
      "problems": [
        {
          "id": "abc379_a",
          "problem_letter": "A",
          "url": "https://abc379.contest.atcoder.jp/tasks/abc379_a?lang=en",
          "statement": "Problem Statement: \n\nYou are given a three-digit integer N where each digit is an integer between 1 and 9, inclusive.\n\nLet a, b, c be the hundreds, tens, ones digits of N, respectively. Print an integer formed by arranging b, c, a in this order, and an integer formed by arranging c, a, b in this order.",
          "constraints": "Constraints: N is a three-digit integer where each digit is an integer between 1 and 9, inclusive.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\n\nOutput: \n\nPrint two integers separated by a space in the following order: an integer formed by arranging b, c, a in this order, and an integer formed by arranging c, a, b in this order.",
          "samples": [
            {
              "input": "379",
              "output": "793 937",
              "explanation": "The hundreds, tens, ones digits of 379 are 3, 7, 9, respectively, so print 793 and 937."
            },
            {
              "input": "919",
              "output": "199 991",
              "explanation": "The hundreds, tens, ones digits of 919 are 9, 1, 9, respectively, so print 199 and 991."
            }
          ]
        },
        {
          "id": "abc379_b",
          "problem_letter": "B",
          "url": "https://abc379.contest.atcoder.jp/tasks/abc379_b?lang=en",
          "statement": "Problem Statement: \n\nTakahashi has N teeth arranged in a single row from left to right. The current condition of his teeth is represented by a string S.\n\nIf the i -th character of S isO, it means that the i -th tooth from the left is healthy. If it isX, it means that the i -th tooth has a cavity. Healthy teeth do not have cavities.\n\nWhen he has K consecutive healthy teeth, he can eat one strawberry using those K teeth. After eating a strawberry, those K teeth develop cavities and become unhealthy.\n\nFind the maximum number of strawberries he can eat.",
          "constraints": "Constraints: 1 \\leq K \\leq N \\leq 100 \n N and K are integers. \n S is a string of length N consisting ofOandX.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nS\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "7 3\nOOXOOOO",
              "output": "1",
              "explanation": "He can eat one strawberry by using the three consecutive healthy teeth from the 4th to 6th tooth from the left. After this, he cannot eat any more strawberries. Besides, there is no way for him to eat more than one strawberry. Therefore, print 1."
            },
            {
              "input": "12 2\nOXXOOOXOOOOX",
              "output": "3",
              "explanation": null
            },
            {
              "input": "22 5\nXXOOOOOOOOXXOOOOOXXXXX",
              "output": "2",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc379_c",
          "problem_letter": "C",
          "url": "https://abc379.contest.atcoder.jp/tasks/abc379_c?lang=en",
          "statement": "Problem Statement: If cell i ( 1 \\leq i \\leq N-1) contains a stone, move one stone from cell i to cell i+1.",
          "constraints": "Constraints: 2 \\leq N \\leq 2 \\times 10^{9} \n 1 \\leq M \\leq 2 \\times 10^{5} \n M \\leq N \n 1 \\leq X_i \\leq N (1 \\leq i \\leq M) \n X_i \\neq X_j (1 \\leq i < j \\leq M) \n 1 \\leq A_i \\leq 2 \\times 10^{9} (1 \\leq i \\leq M) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nX_1\nX_2\n...\nX_M\nA_1\nA_2\n...\nA_M\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "5 2\n1 4\n3 2",
              "output": "4",
              "explanation": "You can reach a state where each of the five cells contains exactly one stone with four operations as follows:\n\nIt is impossible to achieve the goal in three or fewer operations. Therefore, print 4.\n\nMove one stone from cell 1 to cell 2. \n Move one stone from cell 2 to cell 3. \n Move one stone from cell 4 to cell 5. \n Move one stone from cell 1 to cell 2."
            },
            {
              "input": "10 3\n1 4 8\n4 2 4",
              "output": "-1",
              "explanation": "No matter how you perform the operations, you cannot reach a state where all ten cells contain exactly one stone. Therefore, print -1."
            }
          ]
        },
        {
          "id": "abc379_d",
          "problem_letter": "D",
          "url": "https://abc379.contest.atcoder.jp/tasks/abc379_d?lang=en",
          "statement": "Problem Statement: 1: Prepare one empty flower pot and put a plant in it. Here, the plant's height is 0. \n 2 T: Wait for T days. During this time, the height of every existing plants increases by T. \n 3 H: Harvest all plants with a height of at least H, and output the number of plants harvested. The harvested plants are removed from their flower pots.",
          "constraints": "Constraints: 1 \\leq Q \\leq 2 \\times 10^{5} \n 1 \\leq T,H \\leq 10^{9} \n There is at least one query of the third type. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nQ\n\\text{query}_1\n\\text{query}_2\n\\vdots\n\\text{query}_Q\n\nEach query is given in one of the following formats:\n\n1\n\n2\nT\n\n3\nH\n\nOutput: \n\nLet there be K queries of the third type, and print K lines.\nThe i -th line ( 1 \\leq i \\leq K) should contain the answer to the i -th query of type 3.",
          "samples": [
            {
              "input": "6\n1\n2 15\n1\n3 10\n2 20\n3 20",
              "output": "1\n1",
              "explanation": "Queries are processed in the following order:\n\nIn the first query, a plant of height 0 is planted. \n In the second query, the height of the plant increases to 15. \n In the third query, another plant of height 0 is planted. Now there is one plant of height 15 and one plant of height 0. \n In the fourth query, all plants with height at least 10 are harvested. Here, one plant of height 15 gets harvested, and one plant of height 0 remains. Since one plant was harvested, print 1 on the first line. \n In the fifth query, the height of the remaining plant increases to 20. \n In the sixth query, all plants with height at least 20 are harvested. Here, one plant of height 20 gets harvested. Thus, print 1 on the second line."
            },
            {
              "input": "15\n1\n1\n2 226069413\n3 1\n1\n1\n2 214168203\n1\n3 214168203\n1\n1\n1\n2 314506461\n2 245642315\n3 1",
              "output": "2\n2\n4",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc379_e",
          "problem_letter": "E",
          "url": "https://abc379.contest.atcoder.jp/tasks/abc379_e?lang=en",
          "statement": "Problem Statement: \n\nYou are given a string S of length N consisting of digits from1 through9.\n\nFor each pair of integers (i,j) (1\\leq i\\leq j\\leq N), define f(i, j) as the value obtained by interpreting the substring of S from the i -th through the j -th character as a decimal integer. Find \\displaystyle \\sum_{i=1}^N \\sum_{j=i}^N f(i, j).",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n N is an integer. \n S is a string of length N consisting of digits from1through9.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3\n379",
              "output": "514",
              "explanation": "The answer is f(1,1) + f(1,2) + f(1,3) + f(2,2) + f(2,3) + f(3,3) = 3 + 37 + 379 + 7 + 79 + 9 = 514."
            },
            {
              "input": "30\n314159265358979323846264338327",
              "output": "369673254065355789035427227741",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc379_f",
          "problem_letter": "F",
          "url": "https://abc379.contest.atcoder.jp/tasks/abc379_f?lang=en",
          "statement": "Problem Statement: There is no building taller than building j between buildings i and j. In other words, there is no integer k\\ (i\\lt k\\lt j) such that H_k > H_j.",
          "constraints": "Constraints: 2 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq Q \\leq 2 \\times 10^5 \n 1 \\leq H_i \\leq N \n H_i\\neq H_j\\ (i\\neq j) \n 1 \\leq l_i < r_i \\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nQ\nH_1\nH_2\n...\nH_N\nl_1\nr_1\nl_2\nr_2\n\\vdots\nl_Q\nr_Q\n\nOutput: \n\nPrint Q lines. The i -th line ( 1 \\leq i \\leq Q) should contain the answer to the i -th query.",
          "samples": [
            {
              "input": "5 3\n2 1 4 3 5\n1 2\n3 5\n1 4",
              "output": "2\n0\n1",
              "explanation": "For the first query, among the buildings to the east of building 2, buildings 3 and 5 can be seen from both buildings 1 and 2, so the answer is 2. \n For the second query, there are no buildings to the east of building 5. \n For the third query, among the buildings to the east of building 4, building 5 can be seen from both buildings 1 and 4, so the answer is 1."
            },
            {
              "input": "10 10\n2 1 5 3 4 6 9 8 7 10\n3 9\n2 5\n4 8\n5 6\n3 8\n2 10\n7 8\n6 7\n8 10\n4 10",
              "output": "1\n3\n1\n2\n1\n0\n1\n1\n0\n0",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc379_g",
          "problem_letter": "G",
          "url": "https://abc379.contest.atcoder.jp/tasks/abc379_g?lang=en",
          "statement": "Problem Statement: Any two adjacent (edge-sharing) cells contain different digits.",
          "constraints": "Constraints: 1 \\leq H, W \n H \\times W \\leq 200 \n H and W are integers. \n S is a grid with H rows and W columns consisting of1,2,3, and?.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nH\nW\nS_{1,1}S_{1,2}... S_{1,W}\nS_{2,1}S_{2,2}... S_{2,W}\n\\vdots\nS_{H,1}S_{H,2}... S_{H,W}\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "2 2\n1?\n??",
              "output": "6",
              "explanation": "Among the grids obtained by replacing each?in S with1,2, or3, the following six grids satisfy the condition."
            },
            {
              "input": "2 3\n123\n3?1",
              "output": "0",
              "explanation": "None of the grids obtained by replacing?satisfies the condition."
            },
            {
              "input": "8 8\n3?1?????\n???1????\n??????2?\n????????\n????????\n????13??\n??13?1??\n????????",
              "output": "779135038",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc380",
      "url": "https://abc380.contest.atcoder.jp/?lang=en",
      "start_time": "2024-11-16T12:00:00",
      "problems": [
        {
          "id": "abc380_a",
          "problem_letter": "A",
          "url": "https://abc380.contest.atcoder.jp/tasks/abc380_a?lang=en",
          "statement": "Problem Statement: Among the digits of N, the digit 1 appears exactly once. \n Among the digits of N, the digit 2 appears exactly twice. \n Among the digits of N, the digit 3 appears exactly three times.",
          "constraints": "Constraints: N is an integer satisfying 100000 \\le N \\le 999999.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\n\nOutput: \n\nPrintYes if N satisfies all the conditions described in the problem statement, andNo otherwise, in one line.",
          "samples": [
            {
              "input": "123233",
              "output": "Yes",
              "explanation": "123233 satisfies the conditions in the problem statement, so printYes."
            },
            {
              "input": "123234",
              "output": "No",
              "explanation": "123234 does not satisfy the conditions in the problem statement, so printNo."
            },
            {
              "input": "323132",
              "output": "Yes",
              "explanation": null
            },
            {
              "input": "500000",
              "output": "No",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc380_b",
          "problem_letter": "B",
          "url": "https://abc380.contest.atcoder.jp/tasks/abc380_b?lang=en",
          "statement": "Problem Statement: Start with S =|. \n For i = 1, 2, \\dots, N, perform the following operations in order:AppendA_icopies of-to the end ofS.Then, append one|to the end ofS. \n Append A_i copies of-to the end of S. \n Then, append one|to the end of S.",
          "constraints": "Constraints: S is a string of length between 3 and 100, inclusive, generated by the method in the problem statement. \n A is a sequence of positive integers of length at least 1.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS\n\nOutput: \n\nPrint the answer in the following format, with elements separated by spaces in a single line:\n\nA_1\nA_2\n...\nA_N",
          "samples": [
            {
              "input": "|---|-|----|-|-----|",
              "output": "3 1 4 1 5",
              "explanation": "S =|---|-|----|-|-----|is generated by A = (3, 1, 4, 1, 5)."
            },
            {
              "input": "|----------|",
              "output": "10",
              "explanation": null
            },
            {
              "input": "|-|-|-|------|",
              "output": "1 1 1 6",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc380_c",
          "problem_letter": "C",
          "url": "https://abc380.contest.atcoder.jp/tasks/abc380_c?lang=en",
          "statement": "Problem Statement: Let S_{l\\ldots r} denote the substring of S from the l -th character through the r -th character. \n We define a substring S_{l\\ldots r} of S to be a1-block if it satisfies all of the following conditions:S_l = S_{l+1} = \\cdots = S_r =1l = 1orS_{l-1} =0r = NorS_{r+1} =0 \n S_l = S_{l+1} = \\cdots = S_r =1 \n l = 1 or S_{l-1} =0 \n r = N or S_{r+1} =0 \n Suppose that all1-blocks inSareS_{l_1\\ldots r_1}, \\ldots, S_{l_m\\ldots r_m}, wherel_1 < l_2 < \\cdots < l_m.Then, we define the lengthNstringT, obtained by moving theK-th1-block to immediately after the(K-1)-th1-block, as follows:T_i = S_ifor1 \\leq i \\leq r_{K-1}T_i =1forr_{K-1} + 1 \\leq i \\leq r_{K-1} + (r_K - l_K) + 1T_i =0forr_{K-1} + (r_K - l_K) + 2 \\leq i \\leq r_KT_i = S_iforr_K + 1 \\leq i \\leq N \n T_i = S_i for 1 \\leq i \\leq r_{K-1} \n T_i =1for r_{K-1} + 1 \\leq i \\leq r_{K-1} + (r_K - l_K) + 1 \n T_i =0for r_{K-1} + (r_K - l_K) + 2 \\leq i \\leq r_K \n T_i = S_i for r_K + 1 \\leq i \\leq N",
          "constraints": "Constraints: 1 \\leq N \\leq 5 \\times 10^5 \n S is a string of length N consisting of0and1. \n 2 \\leq K \n S contains at least K1-blocks.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nS\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "15 3\n010011100011001",
              "output": "010011111000001",
              "explanation": "S has four1-blocks: from the 2nd to the 2nd character, from the 5th to the 7th character, from the 11th to the 12th character, and from the 15th to the 15th character."
            },
            {
              "input": "10 2\n1011111111",
              "output": "1111111110",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc380_d",
          "problem_letter": "D",
          "url": "https://abc380.contest.atcoder.jp/tasks/abc380_d?lang=en",
          "statement": "Problem Statement: First, create a string T by changing uppercase letters in S to lowercase, and lowercase letters to uppercase. \n Then, concatenate S and T in this order to form a new S. \n Find the K_i -th character from the beginning of S after all operations are completed.",
          "constraints": "Constraints: S is a string consisting of uppercase and lowercase English letters, with length between 1 and 2 \\times 10^5, inclusive. \n Q and K_i are integers. \n 1 \\le Q \\le 2 \\times 10^5 \n 1 \\le K_i \\le 10^{18}",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS\nQ\nK_1\nK_2\n...\nK_Q\n\nOutput: \n\nLet C_i be the answer to the i -th query. Print them in a single line, separated by spaces, in the following format:\n\nC_1\nC_2\n...\nC_Q",
          "samples": [
            {
              "input": "aB\n16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16",
              "output": "a B A b A b a B A b a B a B A b",
              "explanation": "Before the operations, S =aB.\n\nAfter performing the operation 10^{100} times, S =aBAbAbaBAbaBaBAb...\n\nAfter performing the operation once onaB, it becomesaBAb. \n After performing the operation twice onaB, it becomesaBAbAbaB. \n \\dots"
            },
            {
              "input": "qWeRtYuIoP\n8\n1 1 2 3 5 8 13 21",
              "output": "q q W e t I E Q",
              "explanation": null
            },
            {
              "input": "AnUoHrjhgfLMcDIpzxXmEWPwBZvbKqQuiJTtFSlkNGVReOYCdsay\n5\n1000000000000000000 123456789 1 987654321 999999999999999999",
              "output": "K a A Z L",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc380_e",
          "problem_letter": "E",
          "url": "https://abc380.contest.atcoder.jp/tasks/abc380_e?lang=en",
          "statement": "Problem Statement: 1 x c: Repaint the following to color c : all reachable cells reachable from cell x by repeatedly moving to an adjacent cell painted in the same color as the current cell. \n 2 c: Print the number of cells painted with color c.",
          "constraints": "Constraints: 1 \\leq N \\leq 5 \\times 10^5 \n 1 \\leq Q \\leq 2 \\times 10^5 \n In queries of the first type, 1 \\leq x \\leq N. \n In queries of the first and second types, 1 \\leq c \\leq N. \n There is at least one query of the second type. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nQ\n\\mathrm{query}_1\n\\vdots\n\\mathrm{query}_Q\n\nEach query is given in one of the following two formats:\n\n1\nx\nc\n\n2\nc\n\nOutput: \n\nLet q be the number of queries of the second type. Print q lines.\n\nThe i -th line should contain the answer to the i -th such query.",
          "samples": [
            {
              "input": "5 6\n1 5 4\n1 4 2\n2 2\n1 3 2\n1 2 3\n2 3",
              "output": "3\n4",
              "explanation": "The queries recolor the cells as shown in the figure.\n\n"
            }
          ]
        },
        {
          "id": "abc380_f",
          "problem_letter": "F",
          "url": "https://abc380.contest.atcoder.jp/tasks/abc380_f?lang=en",
          "statement": "Problem Statement: Choose one card from his hand and put it on the table. Then, if there is a card on the table with a number less than the number on the card he just played, he may take one such card from the table into his hand.",
          "constraints": "Constraints: 1 \\leq N, M, L \n N + M + L \\leq 12 \n 1 \\leq A_i, B_i, C_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nL\nA_1\n...\nA_N\nB_1\n...\nB_M\nC_1\n...\nC_L\n\nOutput: \n\nPrintTakahashi if Takahashi wins, andAoki if Aoki wins.",
          "samples": [
            {
              "input": "1 1 2\n2\n4\n1 3",
              "output": "Aoki",
              "explanation": "The game may proceed as follows (not necessarily optimal moves):\n\nTakahashi plays 2 from his hand to the table, and takes 1 from the table into his hand. Now, Takahashi's hand is (1), Aoki's hand is (4), and the table cards are (2,3). \n Aoki plays 4 from his hand to the table, and takes 2 into his hand. Now, Takahashi's hand is (1), Aoki's hand is (2), and the table cards are (3,4). \n Takahashi plays 1 from his hand to the table. Now, Takahashi's hand is (), Aoki's hand is (2), and the table cards are (1,3,4). \n Aoki plays 2 from his hand to the table. Now, Takahashi's hand is (), Aoki's hand is (), and the table cards are (1,2,3,4). \n Takahashi cannot make a move and loses; Aoki wins."
            },
            {
              "input": "4 4 4\n98 98765 987654 987654321\n987 9876 9876543 98765432\n123 12345 1234567 123456789",
              "output": "Takahashi",
              "explanation": null
            },
            {
              "input": "1 1 8\n10\n10\n1 2 3 4 5 6 7 8",
              "output": "Aoki",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc380_g",
          "problem_letter": "G",
          "url": "https://abc380.contest.atcoder.jp/tasks/abc380_g?lang=en",
          "statement": "Problem Statement: First, choose an integer i uniformly at random between 1 and N - K + 1, inclusive. \n Then, shuffle P_i, P_{i+1}, \\dots, P_{i+K-1} uniformly at random.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le K \\le N \\le 2 \\times 10^5 \n P is a permutation of (1,2,\\dots,N).",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nP_1\nP_2\n...\nP_N\n\nOutput: \n\nPrint the answer in one line.",
          "samples": [
            {
              "input": "4 2\n1 4 2 3",
              "output": "166374061",
              "explanation": "The operation changes the permutation P into the following:\n\nThe expected value of the inversion number is \\displaystyle 2 \\times \\frac{1}{2} + 3 \\times \\frac{1}{6} + 1 \\times \\frac{1}{6} + 3 \\times \\frac{1}{6} = \\frac{13}{6}.\n\n\\displaystyle \\frac{13}{6} modulo 998244353 is 166374061, so print this number.\n\n(1,4,2,3)... probability 1/2 \n (4,1,2,3)... probability 1/6 \n (1,2,4,3)... probability 1/6 \n (1,4,3,2)... probability 1/6"
            },
            {
              "input": "1 1\n1",
              "output": "0",
              "explanation": null
            },
            {
              "input": "10 6\n7 4 10 5 6 1 8 2 3 9",
              "output": "499122200",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc381",
      "url": "https://abc381.contest.atcoder.jp/?lang=en",
      "start_time": "2024-11-22T12:00:00",
      "problems": [
        {
          "id": "abc381_a",
          "problem_letter": "A",
          "url": "https://abc381.contest.atcoder.jp/tasks/abc381_a?lang=en",
          "statement": "Problem Statement: |T| is odd. Here, |T| denotes the length of T. \n The 1 -st through (\\frac{|T|+1}{2} - 1) -th characters are all1. \n The (\\frac{|T|+1}{2}) -th character is/. \n The (\\frac{|T|+1}{2} + 1) -th through |T| -th characters are all2.",
          "constraints": "Constraints: 1 \\leq N \\leq 100 \n S is a string of length N consisting of1,2, and/.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS\n\nOutput: \n\nIf S is an 11/22 string, printYes ; otherwise, printNo.",
          "samples": [
            {
              "input": "5\n11/22",
              "output": "Yes",
              "explanation": "11/22satisfies the conditions for an 11/22 string in the problem statement."
            },
            {
              "input": "1\n/",
              "output": "Yes",
              "explanation": "/satisfies the conditions for an 11/22 string."
            },
            {
              "input": "4\n1/22",
              "output": "No",
              "explanation": "1/22does not satisfy the conditions for an 11/22 string."
            },
            {
              "input": "5\n22/11",
              "output": "No",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc381_b",
          "problem_letter": "B",
          "url": "https://abc381.contest.atcoder.jp/tasks/abc381_b?lang=en",
          "statement": "Problem Statement: \\lvert T \\rvert is even. Here, \\lvert T \\rvert denotes the length of T. \n For each integer i satisfying 1\\leq i\\leq \\frac{|T|}{2}, the (2i-1) -th and 2i -th characters of T are equal. \n Each character appears in T exactly zero or two times. That is, every character contained in T appears exactly twice in T.",
          "constraints": "Constraints: S is a string of length between 1 and 100, inclusive, consisting of lowercase English letters.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS\n\nOutput: \n\nIf S is a 1122 string, printYes ; otherwise, printNo.",
          "samples": [
            {
              "input": "aabbcc",
              "output": "Yes",
              "explanation": "S= aabbccsatisfies all the conditions for a 1122 string, so printYes."
            },
            {
              "input": "aab",
              "output": "No",
              "explanation": "S= aabhas an odd length and does not satisfy the first condition, so printNo."
            },
            {
              "input": "zzzzzz",
              "output": "No",
              "explanation": "S= zzzzzzcontains sixzs and does not satisfy the third condition, so printNo."
            }
          ]
        },
        {
          "id": "abc381_c",
          "problem_letter": "C",
          "url": "https://abc381.contest.atcoder.jp/tasks/abc381_c?lang=en",
          "statement": "Problem Statement: |T| is odd. Here, |T| denotes the length of T. \n The 1 -st through (\\frac{|T|+1}{2} - 1) -th characters are all1. \n The (\\frac{|T|+1}{2}) -th character is/. \n The (\\frac{|T|+1}{2} + 1) -th through |T| -th characters are all2.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n S is a string of length N consisting of1,2, and/. \n S contains at least one/.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS\n\nOutput: \n\nPrint the maximum length of a (contiguous) substring of S that is an 11/22 string.",
          "samples": [
            {
              "input": "8\n211/2212",
              "output": "5",
              "explanation": "The substring from the 2 -nd to 6 -th character of S is11/22, which is an 11/22 string. Among all substrings of S that are 11/22 strings, this is the longest. Therefore, the answer is 5."
            },
            {
              "input": "5\n22/11",
              "output": "1",
              "explanation": null
            },
            {
              "input": "22\n/1211/2///2111/2222/11",
              "output": "7",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc381_d",
          "problem_letter": "D",
          "url": "https://abc381.contest.atcoder.jp/tasks/abc381_d?lang=en",
          "statement": "Problem Statement: \\lvert X \\rvert is even. Here, \\lvert X \\rvert denotes the length of X. \n For each integer i satisfying 1\\leq i\\leq \\frac{|X|}{2}, X_{2i-1} and X_{2i} are equal. \n Each positive integer appears in X either not at all or exactly twice. That is, every positive integer contained in X appears exactly twice in X.",
          "constraints": "Constraints: 1\\leq N \\leq 2 \\times 10^5 \n 1\\leq A_i \\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the maximum length of a (contiguous) subarray of A that is a 1122 sequence.",
          "samples": [
            {
              "input": "8\n2 3 1 1 2 2 1 1",
              "output": "4",
              "explanation": "For example, taking the subarray from the 3 -rd to 6 -th elements of A, we get (1, 1, 2, 2), which is a 1122 sequence of length 4.There is no longer (contiguous) subarray that satisfies the conditions for a 1122 sequence, so the answer is 4."
            },
            {
              "input": "3\n1 2 2",
              "output": "2",
              "explanation": null
            },
            {
              "input": "1\n1",
              "output": "0",
              "explanation": "Note that a sequence of length 0 also satisfies the conditions for a 1122 sequence."
            }
          ]
        },
        {
          "id": "abc381_e",
          "problem_letter": "E",
          "url": "https://abc381.contest.atcoder.jp/tasks/abc381_e?lang=en",
          "statement": "Problem Statement: |T| is odd. Here, |T| denotes the length of T. \n The 1 -st through (\\frac{|T|+1}{2} - 1) -th characters are all1. \n The (\\frac{|T|+1}{2}) -th character is/. \n The (\\frac{|T|+1}{2} + 1) -th through |T| -th characters are all2.",
          "constraints": "Constraints: 1 \\leq N \\leq 10^5 \n 1 \\leq Q \\leq 10^5 \n S is a string of length N consisting of1,2, and/. \n 1 \\leq L \\leq R \\leq N \n N, Q, L, and R are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format. Here, \\mathrm{query}_i denotes the i -th query.\n\nN\nQ\nS\n\\mathrm{query}_1\n\\mathrm{query}_2\n\\vdots\n\\mathrm{query}_Q\n\nEach query is given in the following format:\n\nL\nR\n\nOutput: \n\nPrint Q lines. The i -th line should contain the answer to the i -th query.",
          "samples": [
            {
              "input": "12 5\n111/212/1122\n1 7\n9 12\n3 6\n4 10\n1 12",
              "output": "5\n0\n3\n1\n7",
              "explanation": "For the first query, the substring from the 1 -st to 7 -th character of S is111/212. This string contains11/22as a subsequence, which is the longest subsequence that is an 11/22 string. Therefore, the answer is 5.For the second query, the substring from the 9 -th to 12 -th character of S is1122. This string does not contain any subsequence that is an 11/22 string, so the answer is 0."
            }
          ]
        },
        {
          "id": "abc381_f",
          "problem_letter": "F",
          "url": "https://abc381.contest.atcoder.jp/tasks/abc381_f?lang=en",
          "statement": "Problem Statement: \\lvert X \\rvert is even. Here, \\lvert X \\rvert denotes the length of X. \n For each integer i satisfying 1\\leq i\\leq \\frac{|X|}{2}, X_{2i-1} and X_{2i} are equal. \n Each positive integer appears in X either not at all or exactly twice. That is, every positive integer contained in X appears exactly twice in X.",
          "constraints": "Constraints: 1\\leq N \\leq 2 \\times 10^5 \n 1\\leq A_i \\leq 20 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the maximum length of a (not necessarily contiguous) subsequence of A that is a 1122 sequence.",
          "samples": [
            {
              "input": "7\n1 3 3 1 2 2 1",
              "output": "4",
              "explanation": "For example, choosing the 1 -st, 4 -th, 5 -th, and 6 -th elements of A, we get (1, 1, 2, 2), which is a 1122 sequence of length 4.There is no longer subsequence that satisfies the conditions for a 1122 sequence, so the answer is 4."
            },
            {
              "input": "1\n20",
              "output": "0",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc381_g",
          "problem_letter": "G",
          "url": "https://abc381.contest.atcoder.jp/tasks/abc381_g?lang=en",
          "statement": "Problem Statement: \n\nDefine a sequence a_1, a_2, a_3, ... as follows:\n\nFind \\left( \\displaystyle \\prod_{i=1}^N a_i \\right) \\bmod{998244353}.\n\nYou are given T test cases to solve.",
          "constraints": "Constraints: 1 \\leq T \\leq 5 \n 1 \\leq N \\leq 10^{18} \n 0 \\leq x \\leq 998244352 \n 0 \\leq y \\leq 998244352 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format. Here, \\mathrm{case}_i denotes the i -th test case.\n\nT\n\\mathrm{case}_1\n\\mathrm{case}_2\n\\vdots\n\\mathrm{case}_T\n\nEach test case is given in the following format:\n\nN\nx\ny\n\nOutput: \n\nPrint T lines. The i -th line should contain the answer to the i -th test case.",
          "samples": [
            {
              "input": "3\n5 1 1\n2024 11 22\n1000000000000000000 12345 6789",
              "output": "30\n577322229\n726998219",
              "explanation": "For the first test case, the elements of the sequence are 1, 1, 2, 3, 5, 8, .... Thus, the answer is (1 \\times 1 \\times 2 \\times 3 \\times 5) \\bmod{998244353} = 30."
            }
          ]
        }
      ]
    },
    {
      "id": "abc382",
      "url": "https://abc382.contest.atcoder.jp/?lang=en",
      "start_time": "2024-11-30T12:00:00",
      "problems": [
        {
          "id": "abc382_a",
          "problem_letter": "A",
          "url": "https://abc382.contest.atcoder.jp/tasks/abc382_a?lang=en",
          "statement": "Problem Statement: \n\nThere are N boxes arranged in a row, and some of these boxes contain cookies.\n\nThe state of these boxes is represented by a string S of length N.\nSpecifically, the i -th box (1\\leq i \\leq N) from the left contains one cookie if the i -th character of S is@, and is empty if it is..\n\nOver the next D days, Takahashi will choose and eat one cookie per day from among the cookies in these boxes.\n\nDetermine how many of the N boxes will be empty after D days have passed.\n(It can be proved that this value does not depend on which cookies Takahashi chooses each day.)\n\nIt is guaranteed that S contains at least D occurrences of@.",
          "constraints": "Constraints: 1 \\leq D \\leq N \\leq 100 \n N and D are integers. \n S is a string of length N consisting of@and.. \n S contains at least D occurrences of@.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nD\nS\n\nOutput: \n\nPrint the number of boxes that will be empty after D days have passed among the N boxes.",
          "samples": [
            {
              "input": "5 2\n.@@.@",
              "output": "4",
              "explanation": "For example, Takahashi might act as follows:\n\nEven though Takahashi might choose differently on each day than in this example, there will still be four empty boxes after two days.\nTherefore, the answer is 4.\n\nDay 1 : There are cookies in the 2nd, 3rd, and 5th boxes from the left. He chooses the cookie in the 2nd box to eat. \n Day 2 : There are cookies in the 3rd and 5th boxes. He chooses the cookie in the 5th box to eat. \n After two days have passed, only the 3rd box from the left contains a cookie. Therefore, four out of the five boxes are empty."
            },
            {
              "input": "3 3\n@@@",
              "output": "3",
              "explanation": null
            },
            {
              "input": "10 4\n@@@.@@.@@.",
              "output": "7",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc382_b",
          "problem_letter": "B",
          "url": "https://abc382.contest.atcoder.jp/tasks/abc382_b?lang=en",
          "statement": "Problem Statement: \n\nThis problem shares a similar setting with Problem A. The way Takahashi chooses cookies and what you are required to find are different from Problem A.\n\nThere are N boxes arranged in a row, and some of these boxes contain cookies.\n\nThe state of these boxes is represented by a string S of length N.\nSpecifically, the i -th box (1\\leq i \\leq N) from the left contains one cookie if the i -th character of S is@, and is empty if it is..\n\nOver the next D days, Takahashi will choose and eat one cookie per day from among the cookies in these boxes. On each day, he chooses the cookie in the rightmost box that contains a cookie at that point.\n\nDetermine, for each of the N boxes, whether it will contain a cookie after D days have passed.\n\nIt is guaranteed that S contains at least D occurrences of@.",
          "constraints": "Constraints: 1 \\leq D \\leq N \\leq 100 \n N and D are integers. \n S is a string of length N consisting of@and.. \n S contains at least D occurrences of@.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nD\nS\n\nOutput: \n\nPrint a string of length N.\nThe i -th character ( 1 \\leq i \\leq N) of the string should be@ if the i -th box from the left contains a cookie after D days have passed, and. otherwise.",
          "samples": [
            {
              "input": "5 2\n.@@.@",
              "output": ".@...",
              "explanation": "Takahashi acts as follows:\n\nTherefore, the correct output is.@....\n\nDay 1 : There are cookies in the 2nd, 3rd, and 5th boxes from the left. Among these, the rightmost is the 5th box. He eats the cookie in this box. \n Day 2 : There are cookies in the 2nd and 3rd boxes. Among these, the rightmost is the 3rd box. He eats the cookie in this box. \n After two days have passed, only the 2nd box from the left contains a cookie."
            },
            {
              "input": "3 3\n@@@",
              "output": "...",
              "explanation": null
            },
            {
              "input": "10 4\n@@@.@@.@@.",
              "output": "@@@.......",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc382_c",
          "problem_letter": "C",
          "url": "https://abc382.contest.atcoder.jp/tasks/abc382_c?lang=en",
          "statement": "Problem Statement: \n\nThere are N people numbered from 1 to N visiting a conveyor belt sushi restaurant.\nThegourmet level of person i is A_i.\n\nNow, M pieces of sushi will be placed on the conveyor belt.\nThedeliciousness of the j -th sushi is B_j.\nEach piece of sushi passes in front of people 1, 2, ..., N in this order.\nEach person, when a sushi whose deliciousness is not less than their gourmet level passes in front of them, will take and eat that sushi; otherwise, they do nothing.\nA sushi that person i takes and eats will no longer pass in front of person j (j > i).\n\nFor each of the M pieces of sushi, determine who eats that sushi, or if nobody eats it.",
          "constraints": "Constraints: 1 \\leq N, M \\leq 2 \\times 10^5 \n 1 \\leq A_i, B_i \\leq 2 \\times 10^5 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nA_1\nA_2\n...\nA_N\nB_1\nB_2\n...\nB_M\n\nOutput: \n\nPrint M lines.\nThe j -th line ( 1 \\leq j \\leq M) should contain the number representing the person who eats the j -th sushi, or-1 if nobody eats it.",
          "samples": [
            {
              "input": "3 3\n3 8 2\n5 2 1",
              "output": "1\n3\n-1",
              "explanation": "For the 1st sushi:It first passes in front of person1. SinceB_1 \\geq A_1, person1takes and eats it.It will not pass in front of person2and3. \n It first passes in front of person 1. Since B_1 \\geq A_1, person 1 takes and eats it. \n It will not pass in front of person 2 and 3. \n For the 2nd sushi:It first passes in front of person1. SinceB_2 < A_1, person1does nothing.Next, it passes in front of person2. SinceB_2 < A_2, person2does nothing.Finally, it passes in front of person3. SinceB_2 \\geq A_3, person3takes and eats it. \n It first passes in front of person 1. Since B_2 < A_1, person 1 does nothing. \n Next, it passes in front of person 2. Since B_2 < A_2, person 2 does nothing. \n Finally, it passes in front of person 3. Since B_2 \\geq A_3, person 3 takes and eats it. \n For the 3rd sushi:It first passes in front of person1. SinceB_3 < A_1, person1does nothing.Next, it passes in front of person2. SinceB_3 < A_2, person2does nothing.Finally, it passes in front of person3. SinceB_3 < A_3, person3does nothing.Therefore, nobody eats this sushi. \n It first passes in front of person 1. Since B_3 < A_1, person 1 does nothing. \n Next, it passes in front of person 2. Since B_3 < A_2, person 2 does nothing. \n Finally, it passes in front of person 3. Since B_3 < A_3, person 3 does nothing. \n Therefore, nobody eats this sushi.\n\nIt first passes in front of person 1. Since B_1 \\geq A_1, person 1 takes and eats it. \n It will not pass in front of person 2 and 3.\n\nIt first passes in front of person 1. Since B_2 < A_1, person 1 does nothing. \n Next, it passes in front of person 2. Since B_2 < A_2, person 2 does nothing. \n Finally, it passes in front of person 3. Since B_2 \\geq A_3, person 3 takes and eats it.\n\nIt first passes in front of person 1. Since B_3 < A_1, person 1 does nothing. \n Next, it passes in front of person 2. Since B_3 < A_2, person 2 does nothing. \n Finally, it passes in front of person 3. Since B_3 < A_3, person 3 does nothing. \n Therefore, nobody eats this sushi."
            },
            {
              "input": "3 3\n1 1 1\n1 1 1",
              "output": "1\n1\n1",
              "explanation": null
            },
            {
              "input": "10 5\n60 83 76 45 70 91 37 58 94 22\n70 39 52 33 18",
              "output": "1\n7\n4\n10\n-1",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc382_d",
          "problem_letter": "D",
          "url": "https://abc382.contest.atcoder.jp/tasks/abc382_d?lang=en",
          "statement": "Problem Statement: 1 \\leq A_i \n A_{i - 1} + 10 \\leq A_i for each integer i from 2 through N \n A_N \\leq M \n  (S_1, S_2, \\ldots, S_{i-1}) = (T_1, T_2, \\ldots, T_{i-1}) \n  S_i is less than T_i (as a number).",
          "constraints": "Constraints: 2 \\leq N \\leq 12 \n 10N - 9 \\leq M \\leq 10N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\n\nOutput: \n\nLet X be the number of integer sequences that satisfy the conditions, and print X + 1 lines.\n\nThe first line should contain the value of X.\n\nThe (i + 1) -th line ( 1 \\leq i \\leq X) should contain the i -th smallest integer sequence in lexicographical order, with elements separated by spaces.",
          "samples": [
            {
              "input": "3 23",
              "output": "10\n1 11 21\n1 11 22\n1 11 23\n1 12 22\n1 12 23\n1 13 23\n2 12 22\n2 12 23\n2 13 23\n3 13 23",
              "explanation": "(1, 11, 21), (1, 11, 22), (1, 11, 23), (1, 12, 22), (1, 12, 23), (1, 13, 23), (2, 12, 22), (2, 12, 23), (2, 13, 23), (3, 13, 23) are the 10 sequences that satisfy the conditions."
            }
          ]
        },
        {
          "id": "abc382_e",
          "problem_letter": "E",
          "url": "https://abc382.contest.atcoder.jp/tasks/abc382_e?lang=en",
          "statement": "Problem Statement: \n\nThere are infinitely many packs, each containing N cards. In each pack, the i -th card is rare with probability P_i percent. Whether each card is rare is independent of other cards being rare.\n\nYou will now open the packs one by one, and obtain all the cards in each opened pack. When you keep opening packs until you have obtained a total of at least X rare cards, find the expected number of packs you will open.",
          "constraints": "Constraints: 1 \\leq N \\leq 5000 \n 1 \\leq X \\leq 5000 \n 1 \\leq P_i \\leq 100 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nX\nP_1\nP_2\n...\nP_N\n\nOutput: \n\nPrint the answer.\n\nYour answer will be considered correct if the absolute or relative error from the true answer is at most 10^{-6}.",
          "samples": [
            {
              "input": "2 2\n50 100",
              "output": "1.5000000000000000",
              "explanation": "The number of packs opened will be 1 with probability \\frac{1}{2}, and 2 with probability \\frac{1}{2}."
            },
            {
              "input": "2 3\n40 60",
              "output": "3.2475579530543811",
              "explanation": null
            },
            {
              "input": "6 3\n10 33 33 10 100 10",
              "output": "1.8657859189536100",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc382_f",
          "problem_letter": "F",
          "url": "https://abc382.contest.atcoder.jp/tasks/abc382_f?lang=en",
          "statement": "Problem Statement: If bar i is not on the bottom row (the H -th row), and none of the cells directly below the cells occupied by bar i is occupied by any bar, then bar i moves down by one cell. That is, if at that time bar i occupies the cells (r,C_i),(r,C_i+1),\\dots,(r,C_i+L_i-1)\\ (r < H), and the cell (r + 1, C_i + j) is not occupied by any bar for all j ( 0 \\leq j \\leq L_i - 1), then bar i now occupies (r + 1, C_i), (r + 1, C_i + 1), \\dots, (r + 1, C_i + L_i - 1). \n Otherwise, nothing happens.",
          "constraints": "Constraints: 1 \\leq H, W \\leq 2 \\times 10^5 \n 1 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq R_i \\leq H \n 1 \\leq C_i \\leq W \n 1 \\leq L_i \\leq W - C_i + 1 \n In the initial state, there is no cell occupied by two different bars. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nH\nW\nN\nR_1\nC_1\nL_1\nR_2\nC_2\nL_2\n\\vdots\nR_N\nC_N\nL_N\n\nOutput: \n\nPrint N lines.\nThe i -th line ( 1 \\leq i \\leq N) should contain R'_i.",
          "samples": [
            {
              "input": "4 4 4\n1 2 3\n3 2 2\n2 1 2\n2 4 1",
              "output": "2\n4\n3\n4",
              "explanation": "The following three diagrams represent the grid at times t = 0, 1, and 2 from left to right.\nColored rectangles represent the bars, and the number inside each rectangle indicates its bar number.\n\n\n\nThe changes in the grid state are explained as follows:\n\nAt times t = 2.5, 3.5, ..., there is no bar such that the cells directly below it are all unoccupied, so nothing happens. Thus, the grid at time t = 10^{100} is the same as at t = 2 (the rightmost diagram above).\n\nTherefore, R'_1 = 2, R'_2 = 4, R'_3 = 3, R'_4 = 4.\n\nAt t = 0.5 :i = 1: The cells directly below bar1are(2,2),(2,3),(2,4). Among these,(2,2)is occupied by bar3and(2,4)is occupied by bar4, so nothing happens.i = 2: The cells directly below bar2are(4,2),(4,3), which are not occupied by any other bar, so bar2moves down by one cell.i = 3: The cells directly below bar3are(3,1),(3,2), which are not occupied by any other bar, so bar3moves down by one cell.i = 4: The cell directly below bar4is(3,4), which is not occupied by any other bar, so bar4moves down by one cell. \n i = 1 : The cells directly below bar 1 are (2,2),(2,3),(2,4). Among these, (2,2) is occupied by bar 3 and (2,4) is occupied by bar 4, so nothing happens. \n i = 2 : The cells directly below bar 2 are (4,2),(4,3), which are not occupied by any other bar, so bar 2 moves down by one cell. \n i = 3 : The cells directly below bar 3 are (3,1),(3,2), which are not occupied by any other bar, so bar 3 moves down by one cell. \n i = 4 : The cell directly below bar 4 is (3,4), which is not occupied by any other bar, so bar 4 moves down by one cell. \n At t = 1.5 :i = 1: The cells directly below bar1are(2,2),(2,3),(2,4), which are not occupied by any other bar, so bar1moves down by one cell.i = 2: Bar2is on the bottom row, so nothing happens.i = 3: The cells directly below bar3are(4,1),(4,2). Among these,(4,2)is occupied by bar2, so nothing happens.i = 4: The cell directly below bar4is(4,4), which is not occupied by any other bar, so bar4moves down by one cell. \n i = 1 : The cells directly below bar 1 are (2,2),(2,3),(2,4), which are not occupied by any other bar, so bar 1 moves down by one cell. \n i = 2 : Bar 2 is on the bottom row, so nothing happens. \n i = 3 : The cells directly below bar 3 are (4,1),(4,2). Among these, (4,2) is occupied by bar 2, so nothing happens. \n i = 4 : The cell directly below bar 4 is (4,4), which is not occupied by any other bar, so bar 4 moves down by one cell.\n\ni = 1 : The cells directly below bar 1 are (2,2),(2,3),(2,4). Among these, (2,2) is occupied by bar 3 and (2,4) is occupied by bar 4, so nothing happens. \n i = 2 : The cells directly below bar 2 are (4,2),(4,3), which are not occupied by any other bar, so bar 2 moves down by one cell. \n i = 3 : The cells directly below bar 3 are (3,1),(3,2), which are not occupied by any other bar, so bar 3 moves down by one cell. \n i = 4 : The cell directly below bar 4 is (3,4), which is not occupied by any other bar, so bar 4 moves down by one cell.\n\ni = 1 : The cells directly below bar 1 are (2,2),(2,3),(2,4), which are not occupied by any other bar, so bar 1 moves down by one cell. \n i = 2 : Bar 2 is on the bottom row, so nothing happens. \n i = 3 : The cells directly below bar 3 are (4,1),(4,2). Among these, (4,2) is occupied by bar 2, so nothing happens. \n i = 4 : The cell directly below bar 4 is (4,4), which is not occupied by any other bar, so bar 4 moves down by one cell."
            },
            {
              "input": "382 382 3\n3 3 3\n8 8 8\n2 2 2",
              "output": "382\n382\n381",
              "explanation": null
            },
            {
              "input": "5 10 8\n2 2 1\n4 3 1\n4 8 2\n1 2 2\n2 5 3\n5 4 3\n4 5 2\n1 5 2",
              "output": "5\n5\n5\n4\n3\n5\n4\n2",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc382_g",
          "problem_letter": "G",
          "url": "https://abc382.contest.atcoder.jp/tasks/abc382_g?lang=en",
          "statement": "Problem Statement: When i and j have the same parity (both even or both odd), the tile corresponding to (i, j, k) covers the area where iK \\leq x \\leq (i + 1)K and jK + k \\leq y \\leq jK + k + 1. \n When i and j have different parity, the tile corresponding to (i, j, k) covers the area where iK + k \\leq x \\leq iK + k + 1 and jK \\leq y \\leq (j + 1)K.",
          "constraints": "Constraints: 1 \\leq T \\leq 10^4 \n 2 \\leq K \\leq 10^{16} \n -10^{16} \\leq S_x, S_y, T_x, T_y \\leq 10^{16} \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nT\n\\text{case}_1\n\\vdots\n\\text{case}_T\n\nEach case is given in the following format:\n\nK\nS_x\nS_y\nT_x\nT_y\n\nOutput: \n\nPrint T lines. The i -th line should contain the answer for the i -th test case.",
          "samples": [
            {
              "input": "3\n3 -2 1 4 -1\n4 8 8 0 2\n5 -1000000000000 -1000000000000 1000000000000 1000000000000",
              "output": "4\n4\n800000000000",
              "explanation": "Let us explain the first test case.\n\nLet (i, j, k) denote the tile corresponding to integer triple (i, j, k).\n\n(-1.5, 1.5) is contained in tile (-1, 0, 1), and (4.5, -0.5) is contained in tile (1, -1, 2).\n\nFor example, by moving from tile (-1, 0, 1) to (-1, 0, 2) to (0, 0, 2) to (1, 0, 0) to (1, -1, 2), you can reach tile (1, -1, 2) in four moves to an adjacent tile.\n\n"
            }
          ]
        }
      ]
    },
    {
      "id": "abc383",
      "url": "https://abc383.contest.atcoder.jp/?lang=en",
      "start_time": "2024-12-07T12:00:00",
      "problems": [
        {
          "id": "abc383_a",
          "problem_letter": "A",
          "url": "https://abc383.contest.atcoder.jp/tasks/abc383_a?lang=en",
          "statement": "Problem Statement: \n\nThere is one humidifier in the AtCoder company office. The current time is 0, and the humidifier has no water inside.\n\nYou will add water to this humidifier N times. The i -th addition of water ( 1 \\leq i \\leq N) takes place at time T_i, and you add V_i liters of water. It is guaranteed that T_i < T_{i+1} for all 1 \\leq i \\leq N-1.\n\nHowever, the humidifier has a leak, and as long as there is water inside, the amount of water decreases by 1 liter per unit time.\n\nFind the amount of water remaining in the humidifier immediately after you finish adding water at time T_N.",
          "constraints": "Constraints: 1 \\leq N \\leq 100 \n 1 \\leq T_i \\leq 100 ( 1 \\leq i \\leq N) \n 1 \\leq V_i \\leq 100 ( 1 \\leq i \\leq N) \n T_i < T_{i+1} ( 1 \\leq i \\leq N-1) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nT_1\nV_1\nT_2\nV_2\n\\vdots\nT_N\nV_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "4\n1 3\n3 1\n4 4\n7 1",
              "output": "3",
              "explanation": "At each point in time, water is added as follows:\n\nAfter finishing the addition at time 7, the humidifier contains 3 liters. Thus, the answer is 3.\n\nTime 1 : Before adding, the humidifier has 0 liters. After adding 3 liters, it has 3 liters. \n Time 3 : Before adding, it has 1 liter. After adding 1 liter, it has 2 liters total. \n Time 4 : Before adding, it has 1 liter. After adding 4 liters, it has 5 liters total. \n Time 7 : Before adding, it has 2 liters. After adding 1 liter, it has 3 liters total."
            },
            {
              "input": "3\n1 8\n10 11\n21 5",
              "output": "5",
              "explanation": null
            },
            {
              "input": "10\n2 1\n22 10\n26 17\n29 2\n45 20\n47 32\n72 12\n75 1\n81 31\n97 7",
              "output": "57",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc383_b",
          "problem_letter": "B",
          "url": "https://abc383.contest.atcoder.jp/tasks/abc383_b?lang=en",
          "statement": "Problem Statement: \n\nThe AtCoder company office can be represented as a grid of H rows and W columns. Let (i, j) denote the cell at the i -th row from the top and j -th column from the left.\n\nThe state of each cell is represented by a character S_{i,j}. If S_{i,j} is#, that cell contains a desk; if S_{i,j} is., that cell is a floor. It is guaranteed that there are at least two floor cells.\n\nYou will choose two distinct floor cells and place a humidifier on each.\n\nAfter placing the humidifiers, a cell (i,j) is humidified if and only if it is within a Manhattan distance D from at least one of the humidifier cells (i',j'). The Manhattan distance between (i,j) and (i',j') is defined as |i - i'| + |j - j'|.\nNote that any floor cell on which a humidifier is placed is always humidified.\n\nFind the maximum possible number of humidified floor cells.",
          "constraints": "Constraints: 1 \\leq H \\leq 10 \n 1 \\leq W \\leq 10 \n 2 \\leq H \\times W \n 0 \\leq D \\leq H+W-2 \n H,W,D are integers. \n S_{i,j} is#or.. (1 \\leq i \\leq H, 1 \\leq j \\leq W) \n There are at least two floor cells.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nH\nW\nD\nS_{1,1}S_{1,2}...S_{1,W}\nS_{2,1}S_{2,2}...S_{2,W}\n\\vdots\nS_{H,1}S_{H,2}...S_{H,W}\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "2 5 1\n.###.\n.#.##",
              "output": "3",
              "explanation": "When placing humidifiers on (1,1) and (1,5) :\n\nIn total, three cells are humidified. No configuration can humidify four or more floor cells, so the answer is 3.\n\nFrom the humidifier on (1,1), two cells (1,1) and (2,1) are humidified. \n From the humidifier on (1,5), one cell (1,5) is humidified."
            },
            {
              "input": "5 5 2\n.#.#.\n.....\n.#.#.\n#.#.#\n.....",
              "output": "15",
              "explanation": "When placing humidifiers on (2,4) and (5,3), 15 floor cells are humidified."
            },
            {
              "input": "4 4 2\n....\n.##.\n.##.\n....",
              "output": "10",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc383_c",
          "problem_letter": "C",
          "url": "https://abc383.contest.atcoder.jp/tasks/abc383_c?lang=en",
          "statement": "Problem Statement: \n\nThe AtCoder company office is represented as a grid of H rows and W columns. Let (i, j) denote the cell at the i -th row from the top and j -th column from the left.\n\nThe state of each cell is represented by a character S_{i,j}. If S_{i,j} is#, that cell has a wall; if S_{i,j} is., that cell is a floor; if S_{i,j} isH, that cell has a humidifier placed on a floor cell.\n\nA certain cell is considered humidified if it can be reached from at least one humidifier cell by at most D moves up, down, left, or right without passing through a wall. Note that any cell with a humidifier is always humidified.\n\nFind the number of humidified floor cells.",
          "constraints": "Constraints: 1 \\leq H \\leq 1000 \n 1 \\leq W \\leq 1000 \n 0 \\leq D \\leq H\\times W \n S_{i,j} is#,., orH. (1 \\leq i \\leq H, 1 \\leq j \\leq W) \n All input numbers are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nH\nW\nD\nS_{1,1}S_{1,2}...S_{1,W}\nS_{2,1}S_{2,2}...S_{2,W}\n\\vdots\nS_{H,1}S_{H,2}...S_{H,W}\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3 4 1\nH...\n#..H\n.#.#",
              "output": "5",
              "explanation": "Five cells (1,1), (1,2), (1,4), (2,3), (2,4) are humidified."
            },
            {
              "input": "5 6 2\n##...H\nH.....\n..H.#.\n.HH...\n.###..",
              "output": "21",
              "explanation": null
            },
            {
              "input": "1 6 3\n...#..",
              "output": "0",
              "explanation": "It is possible that no cells are humidified."
            }
          ]
        },
        {
          "id": "abc383_d",
          "problem_letter": "D",
          "url": "https://abc383.contest.atcoder.jp/tasks/abc383_d?lang=en",
          "statement": "Problem Statement: \n\nFind the number of positive integers not greater than N that have exactly 9 positive divisors.",
          "constraints": "Constraints: 1 \\leq N \\leq 4 \\times 10^{12} \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "200",
              "output": "3",
              "explanation": "Three positive integers 36,100,196 satisfy the condition."
            },
            {
              "input": "4000000000000",
              "output": "407073",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc383_e",
          "problem_letter": "E",
          "url": "https://abc383.contest.atcoder.jp/tasks/abc383_e?lang=en",
          "statement": "Problem Statement: \n\nYou are given a simple connected undirected graph with N vertices and M edges, where vertices are numbered 1 to N and edges are numbered 1 to M. Edge i (1 \\leq i \\leq M) connects vertices u_i and v_i bidirectionally and has weight w_i.\n\nFor a path, define its weight as the maximum weight of an edge in the path.\nDefine f(x, y) as the minimum possible path weight of a path from vertex x to vertex y.\n\nYou are given two sequences of length K : (A_1, A_2, ..., A_K) and (B_1, B_2, ..., B_K). It is guaranteed that A_i \\neq B_j (1 \\leq i,j \\leq K).\n\nPermute the sequence B freely so that \\displaystyle \\sum_{i=1}^{K} f(A_i, B_i) is minimized.",
          "constraints": "Constraints: 2 \\leq N  \\leq 2 \\times 10^5 \n N-1 \\leq M  \\leq \\min(\\frac{N \\times (N-1)}{2},2 \\times 10^5) \n 1 \\leq K \\leq N \n 1 \\leq u_i<v_i \\leq N (1 \\leq i \\leq M) \n 1 \\leq w_i \\leq 10^9 \n 1 \\leq A_i,B_i \\leq N (1 \\leq i \\leq K) \n The given graph is simple and connected. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nK\nu_1\nv_1\nw_1\nu_2\nv_2\nw_2\n\\vdots\nu_M\nv_M\nw_M\nA_1\nA_2\n...\nA_K\nB_1\nB_2\n...\nB_K\n\nOutput: \n\nPrint the minimum value of \\displaystyle \\sum_{i=1}^{K} f(A_i, B_i).",
          "samples": [
            {
              "input": "4 4 3\n1 3 2\n3 4 1\n2 4 5\n1 4 4\n1 1 3\n4 4 2",
              "output": "8",
              "explanation": "If we rearrange B as (2,4,4) :\n\nThus, \\displaystyle \\sum_{i=1}^{3} f(A_i, B_i) = 5+2+1=8. No permutation of B yields 7 or less, so the answer is 8.\n\nf(1,2) = 5 : The path from vertex 1 to vertex 2 passing through vertex 4 contains edge 3 with a maximum edge weight of 5. There is no path with a maximum edge weight less than or equal to 4, so 5 is the minimum possible. \n f(1,4) = 2 : The path from vertex 1 to vertex 4 passing through vertex 3 contains edge 1 with a maximum edge weight of 2. There is no path with a maximum edge weight less than or equal to 1, so 2 is the minimum possible. \n f(3,4) = 1 : The path from vertex 3 to vertex 4 passing through the direct edge contains an edge with a maximum edge weight of 1. No path can have a maximum weight 0 or less, so 1 is the minimum possible."
            },
            {
              "input": "3 3 2\n1 2 5\n2 3 2\n1 3 1\n1 1\n2 3",
              "output": "3",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc383_f",
          "problem_letter": "F",
          "url": "https://abc383.contest.atcoder.jp/tasks/abc383_f?lang=en",
          "statement": "Problem Statement: \n\nThere are N products for sale in a store. The i -th product has a price of P_i yen, a utility value of U_i, and a color C_i.\n\nYou will choose some subset of these N products to buy (possibly none). The total price of the chosen products must be at most X yen.\n\nYour satisfaction is S + T \\times K, where S is the sum of utilities of the chosen products, and T is the number of distinct colors among the chosen products. Here, K is a given constant.\n\nYou will choose products to maximize your satisfaction. Find the maximized satisfaction.",
          "constraints": "Constraints: 1 \\leq N \\leq 500 \n 1 \\leq X \\leq 50000 \n 1 \\leq K \\leq 10^9 \n 1 \\leq P_i \\leq X (1 \\leq i \\leq N) \n 1 \\leq U_i \\leq 10^9 (1 \\leq i \\leq N) \n 1 \\leq C_i \\leq N (1 \\leq i \\leq N) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nX\nK\nP_1\nU_1\nC_1\nP_2\nU_2\nC_2\n\\vdots\nP_N\nU_N\nC_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3 10 5\n1 3 1\n7 4 2\n4 5 1",
              "output": "17",
              "explanation": "If you buy the 1st and 2nd products, the total utility S is 7, and the number of distinct colors T is 2. Thus, your satisfaction is 7 + 2 \\times 5 = 17. No purchase plan makes your satisfaction 18 or greater, so the answer is 17."
            },
            {
              "input": "5 30 3\n5 4 3\n11 20 1\n9 10 4\n7 5 2\n16 15 4",
              "output": "44",
              "explanation": "If you buy the 2nd, 3rd, and 4th products, the total utility S is 35, and the number of distinct colors T is 3. Thus, your satisfaction is 35 + 3 \\times 3 = 44. No purchase plan makes your satisfaction 45 or greater, so the answer is 44."
            },
            {
              "input": "22 75 6426\n9 309 9\n5 470 5\n17 481 12\n27 352 14\n1 191 18\n7 353 20\n9 99 15\n20 401 17\n46 434 19\n11 459 22\n10 317 19\n15 440 18\n17 438 19\n25 461 22\n5 320 22\n1 476 21\n11 315 3\n8 112 9\n11 438 13\n19 362 8\n10 422 13\n10 152 21",
              "output": "67717",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc383_g",
          "problem_letter": "G",
          "url": "https://abc383.contest.atcoder.jp/tasks/abc383_g?lang=en",
          "statement": "Problem Statement: When placing exactly i tiles without overlap, find the maximum possible sum of the numbers in the covered cells.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq K \\leq \\min(5,N) \n -10^9 \\leq A_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nA_1\n...\nA_N\n\nOutput: \n\nPrint the answers for i = 1, ..., \\lfloor \\frac{N}{K} \\rfloor separated by spaces in one line.",
          "samples": [
            {
              "input": "6 2\n-5 3 4 -1 6 -2",
              "output": "7 12 5",
              "explanation": "For i=1, if you cover the 2nd and 3rd cells with one tile, the sum of the numbers in the covered cells is 7.\n\nFor i=2, if you cover the 2nd and 3rd cells with one tile and the 4th and 5th cells with another tile, the sum of the numbers in the covered cells is 12."
            },
            {
              "input": "20 4\n-5 3 4 -1 6 -2 13 -1 13 7 6 -12 3 -5 12 -6 -3 10 -15 -5",
              "output": "32 45 57 52 22",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc384",
      "url": "https://abc384.contest.atcoder.jp/?lang=en",
      "start_time": "2024-12-14T12:00:00",
      "problems": [
        {
          "id": "abc384_a",
          "problem_letter": "A",
          "url": "https://abc384.contest.atcoder.jp/tasks/abc384_a?lang=en",
          "statement": "Problem Statement: \n\nYou are given a string S of length N consisting of lowercase English letters, along with lowercase English letters c_1 and c_2.\n\nFind the string obtained by replacing every character of S that isnot c_1 with c_2.",
          "constraints": "Constraints: 1\\le N\\le 100 \n N is an integer. \n c_1 and c_2 are lowercase English letters. \n S is a string of length N consisting of lowercase English letters.",
          "io_format": "Input: \n\nThe input is given in the following format from Standard Input:\n\nN\nc_1\nc_2\nS\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3 b g\nabc",
              "output": "gbg",
              "explanation": "Replacingaandc(which are notb) withgin S=abcresults ingbg, so printgbg."
            },
            {
              "input": "1 s h\ns",
              "output": "s",
              "explanation": "It is possible that the resulting string after replacement is the same as the original string."
            },
            {
              "input": "7 d a\natcoder",
              "output": "aaaadaa",
              "explanation": null
            },
            {
              "input": "10 b a\nacaabcabba",
              "output": "aaaabaabba",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc384_b",
          "problem_letter": "B",
          "url": "https://abc384.contest.atcoder.jp/tasks/abc384_b?lang=en",
          "statement": "Problem Statement: In ARC Div. 1, participants whose rating at the start of the contest is between 1600 and 2799, inclusive, are subject to rating updates. \n In ARC Div. 2, participants whose rating at the start of the contest is between 1200 and 2399, inclusive, are subject to rating updates.",
          "constraints": "Constraints: 1\\leq N\\leq 100 \n 0\\leq R\\leq 4229 \n 1\\leq D _ i\\leq 2\\ (1\\leq i\\leq N) \n -1000\\leq A _ i\\leq 1000\\ (1\\leq i\\leq N) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given in the following format from Standard Input:\n\nN\nR\nD _ 1\nA _ 1\nD _ 2\nA _ 2\n\\vdots\nD _ N\nA _ N\n\nOutput: \n\nPrint Takahashi's rating after finishing the N ARCs.",
          "samples": [
            {
              "input": "4 1255\n2 900\n1 521\n2 600\n1 52",
              "output": "2728",
              "explanation": "Initially, Takahashi's rating is 1255.\n\nFor each contest, Takahashi's rating changes as follows:\n\nAfter the four ARCs, his rating is 2728, so print2728.\n\nThe 1st ARC is Div. 2. He is subject to rating updates, so his rating becomes 1255+900=2155. \n The 2nd ARC is Div. 1. He is subject to rating updates, so his rating becomes 2155+521=2676. \n The 3rd ARC is Div. 2. He is not subject to rating updates, so his rating does not change. \n The 4th ARC is Div. 1. He is subject to rating updates, so his rating becomes 2676+52=2728."
            },
            {
              "input": "2 3031\n1 1000\n2 -1000",
              "output": "3031",
              "explanation": "He is a Red coder, so his rating does not change upon his performance in ARC."
            },
            {
              "input": "15 2352\n2 -889\n2 420\n2 -275\n1 957\n1 -411\n1 -363\n1 151\n2 -193\n2 289\n2 -770\n2 109\n1 345\n2 551\n1 -702\n1 355",
              "output": "1226",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc384_c",
          "problem_letter": "C",
          "url": "https://abc384.contest.atcoder.jp/tasks/abc384_c?lang=en",
          "statement": "Problem Statement: The length |S| of S is less than the length of T, and the first |S| characters of T match S. \n There exists an integer 1\\leq i\\leq\\min\\{ |S|,|T|\\} that satisfy both of the following two conditions:For every integerjwith1\\leq j\\lt i, thej-th character ofSequals thej-th character ofT.Thei-th character ofSis alphabetically smaller than thei-th character ofT. \n For every integer j with 1\\leq j\\lt i, the j -th character of S equals the j -th character of T. \n The i -th character of S is alphabetically smaller than the i -th character of T.",
          "constraints": "Constraints: 100\\leq a\\leq b\\leq c\\leq d\\leq e\\leq 2718 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\na\nb\nc\nd\ne\n\nOutput: \n\nPrint 31 lines.\nThe i -th line (1\\leq i\\leq 31) should contain the name of the participant who obtained the i -th highest score.\nIf multiple participants have the same score, print them in lexicographical order.",
          "samples": [
            {
              "input": "400 500 600 700 800",
              "output": "ABCDE\nBCDE\nACDE\nABDE\nABCE\nABCD\nCDE\nBDE\nADE\nBCE\nACE\nBCD\nABE\nACD\nABD\nABC\nDE\nCE\nBE\nCD\nAE\nBD\nAD\nBC\nAC\nAB\nE\nD\nC\nB\nA",
              "explanation": "The score of each participant is as follows:\n\n\n\nFor example, ADE and BCE obtained the same score, and ADE is lexicographically smaller, so print ADE before BCE."
            },
            {
              "input": "800 800 900 900 1000",
              "output": "ABCDE\nACDE\nBCDE\nABCE\nABDE\nABCD\nCDE\nACE\nADE\nBCE\nBDE\nABE\nACD\nBCD\nABC\nABD\nCE\nDE\nAE\nBE\nCD\nAC\nAD\nBC\nBD\nAB\nE\nC\nD\nA\nB",
              "explanation": null
            },
            {
              "input": "128 256 512 1024 2048",
              "output": "ABCDE\nBCDE\nACDE\nCDE\nABDE\nBDE\nADE\nDE\nABCE\nBCE\nACE\nCE\nABE\nBE\nAE\nE\nABCD\nBCD\nACD\nCD\nABD\nBD\nAD\nD\nABC\nBC\nAC\nC\nAB\nB\nA",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc384_d",
          "problem_letter": "D",
          "url": "https://abc384.contest.atcoder.jp/tasks/abc384_d?lang=en",
          "statement": "Problem Statement: \n\nYou are given the first N terms A _ 1,A _ 2,...c,A _ N of an infinite sequence A=(A _ 1,A _ 2,A _ 3,...c) that has period N.\n\nDetermine if there exists a non-empty contiguous subsequence of this infinite sequence whose sum is S.\n\nHere, an infinite sequence A has period N when A _ i=A _ {i-N} for every integer i>N.",
          "constraints": "Constraints: 1\\leq N\\leq2\\times10 ^ 5 \n 1\\leq A _ i\\leq 10 ^ 9 \n 1\\leq S\\leq 10 ^ {18} \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS\nA _ 1\nA _ 2\n...c\nA _ N\n\nOutput: \n\nIf there exists a contiguous subsequence (A _ l,A _ {l+1},...c,A _ r) of A for which A _ l+A _ {l+1}+...b+A _ r=S, printYes. Otherwise, printNo.",
          "samples": [
            {
              "input": "3 42\n3 8 4",
              "output": "Yes",
              "explanation": "The sequence A is (3,8,4,3,8,4,3,8,4,...c).\n\nFor the subsequence (A _ 2,A _ 3,A _ 4,A _ 5,A _ 6,A _ 7,A _ 8,A _ 9)=(8,4,3,8,4,3,8,4), we have 8+4+3+8+4+3+8+4=42, so printYes."
            },
            {
              "input": "3 1\n3 8 4",
              "output": "No",
              "explanation": "All elements of A are at least 3, so the sum of any non-empty contiguous subsequence is at least 3.\n\nThus, there is no subsequence with sum 1, so printNo."
            },
            {
              "input": "20 83298426\n748 169 586 329 972 529 432 519 408 587 138 249 656 114 632 299 984 755 404 772",
              "output": "Yes",
              "explanation": null
            },
            {
              "input": "20 85415869\n748 169 586 329 972 529 432 519 408 587 138 249 656 114 632 299 984 755 404 772",
              "output": "No",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc384_e",
          "problem_letter": "E",
          "url": "https://abc384.contest.atcoder.jp/tasks/abc384_e?lang=en",
          "statement": "Problem Statement: Among the slimes adjacent to him, choose one whose strength isstrictly less than \\dfrac{1}{X} times his strength and absorb it.\r\n  As a result, the absorbed slime disappears, and Takahashi's strength increases by the strength of the absorbed slime.",
          "constraints": "Constraints: 1\\leq H,W\\leq500 \n 1\\leq P\\leq H \n 1\\leq Q\\leq W \n 1\\leq X\\leq10^9 \n 1\\leq S _ {i,j}\\leq10^{12} \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given in the following format from Standard Input:\n\nH\nW\nX\nP\nQ\nS _ {1,1}\nS _ {1,2}\n...\nS _ {1,W}\nS _ {2,1}\nS _ {2,2}\n...\nS _ {2,W}\n\\vdots\nS _ {H,1}\nS _ {H,2}\n...\nS _ {H,W}\n\nOutput: \n\nPrint the maximum possible strength of Takahashi after performing the action.",
          "samples": [
            {
              "input": "3 3 2\n2 2\n14 6 9\n4 9 20\n17 15 7",
              "output": "28",
              "explanation": "Initially, the strength of the slime in each cell is as follows:\n\n\n\nFor example, Takahashi can act as follows:\n\n\n\nAfter these actions, his strength is 28.\n\nNo matter how he acts, it is impossible to get a strength greater than 28, so print28.\n\nNote that Takahashi can only absorb slimes whose strength is strictly less than half of his strength. For example, in the figure on the right above, he cannot absorb the slime in cell (1,1).\n\nAbsorb the slime in cell (2,1). His strength becomes 9+4=13, and the slimes in cells (1,1) and (3,1) become newly adjacent to him. \n Absorb the slime in cell (1,2). His strength becomes 13+6=19, and the slime in cell (1,3) becomes newly adjacent to him. \n Absorb the slime in cell (1,3). His strength becomes 19+9=28."
            },
            {
              "input": "3 4 1\n1 1\n5 10 1 1\n10 1 1 1\n1 1 1 1",
              "output": "5",
              "explanation": "He cannot absorb any slimes."
            },
            {
              "input": "8 10 2\n1 5\n388 130 971 202 487 924 247 286 237 316\n117 166 918 106 336 928 493 391 235 398\n124 280 425 955 212 988 227 222 307 226\n336 302 478 246 950 368 291 236 170 101\n370 200 204 141 287 410 388 314 205 460\n291 104 348 337 404 399 416 263 415 339\n105 420 302 334 231 481 466 366 401 452\n119 432 292 403 371 417 351 231 482 184",
              "output": "1343",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc384_f",
          "problem_letter": "F",
          "url": "https://abc384.contest.atcoder.jp/tasks/abc384_f?lang=en",
          "statement": "Problem Statement: \n\nFor a positive integer x, define f(x) as follows: \"While x is even, keep dividing it by 2. The final value of x after these divisions is f(x).\" For example, f(4)=f(2)=f(1)=1, and f(12)=f(6)=f(3)=3.\n\nGiven an integer sequence A=(A_1,A_2,...,A_N) of length N, find \\displaystyle \\sum_{i=1}^N \\sum_{j=i}^N f(A_i+A_j).",
          "constraints": "Constraints: 1\\le N\\le 2\\times 10^5 \n 1\\le A_i\\le 10^7 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given in the following format from Standard Input:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "2\n4 8",
              "output": "5",
              "explanation": "f(A_1+A_1)=f(8)=1, f(A_1+A_2)=f(12)=3, f(A_2+A_2)=f(16)=1. Thus, Print 1+3+1=5."
            },
            {
              "input": "3\n51 44 63",
              "output": "384",
              "explanation": null
            },
            {
              "input": "8\n577752 258461 183221 889769 278633 577212 392309 326001",
              "output": "20241214",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc384_g",
          "problem_letter": "G",
          "url": "https://abc384.contest.atcoder.jp/tasks/abc384_g?lang=en",
          "statement": "Problem Statement: \n\nYou are given integer sequences A=(A_1,A_2,...,A_N) and B=(B_1,B_2,...,B_N) of length N, and integer sequences X=(X_1,X_2,...,X_K) and Y=(Y_1,Y_2,...,Y_K) of length K.\n\nFor each k=1,2,...,K, find \\displaystyle \\sum_{i=1}^{X_k} \\sum_{j=1}^{Y_k} |A_i-B_j|.",
          "constraints": "Constraints: 1\\le N\\le 10^5 \n 0\\le A_i,B_j\\le 2\\times 10^8 \n 1\\le K\\le 10^4 \n 1\\le X_k,Y_k\\le N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\nB_1\nB_2\n...\nB_N\nK\nX_1\nY_1\nX_2\nY_2\n\\vdots\nX_K\nY_K\n\nOutput: \n\nPrint K lines.\nThe i -th line (1\\le i\\le K) should contain the answer for k=i.",
          "samples": [
            {
              "input": "2\n2 4\n3 5\n4\n1 1\n1 2\n2 1\n2 2",
              "output": "1\n4\n2\n6",
              "explanation": "For k=1, the answer is |A_1-B_1|=1, so print 1 on the first line.\n\nFor k=2, the answer is |A_1-B_1|+|A_1-B_2|=1+3=4, so print 4 on the second line.\n\nFor k=3, the answer is |A_1-B_1|+|A_2-B_1|=1+1=2, so print 2 on the third line.\n\nFor k=4, the answer is |A_1-B_1|+|A_1-B_2|+|A_2-B_1|+|A_2-B_2|=1+3+1+1=6, so print 6 on the fourth line."
            },
            {
              "input": "5\n1163686 28892 1263085 2347878 520306\n1332157 1202905 2437161 1291976 563395\n5\n5 3\n1 5\n2 3\n1 2\n5 5",
              "output": "13331322\n2209746\n6366712\n207690\n20241215",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc385",
      "url": "https://abc385.contest.atcoder.jp/?lang=en",
      "start_time": "2024-12-21T12:00:00",
      "problems": [
        {
          "id": "abc385_a",
          "problem_letter": "A",
          "url": "https://abc385.contest.atcoder.jp/tasks/abc385_a?lang=en",
          "statement": "Problem Statement: \n\nYou are given three integers A,B,C. Determine whether it is possible to divide these three integers into two or more groups so that these groups have equal sums.",
          "constraints": "Constraints: 1 \\leq A,B,C \\leq 1000 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nA\nB\nC\n\nOutput: \n\nIf it is possible to divide A,B,C into two or more groups with equal sums, printYes ; otherwise, printNo.",
          "samples": [
            {
              "input": "3 8 5",
              "output": "Yes",
              "explanation": "For example, by dividing into two groups (3,5) and (8), each group can have the sum 8."
            },
            {
              "input": "2 2 2",
              "output": "Yes",
              "explanation": "By dividing into three groups (2),(2),(2), each group can have the sum 2."
            },
            {
              "input": "1 2 4",
              "output": "No",
              "explanation": "No matter how you divide them into two or more groups, it is not possible to make the sums equal."
            }
          ]
        },
        {
          "id": "abc385_b",
          "problem_letter": "B",
          "url": "https://abc385.contest.atcoder.jp/tasks/abc385_b?lang=en",
          "statement": "Problem Statement: Let |T| be the length of the string T. For i=1,2,\\ldots,|T|, he moves as follows.Let(x,y)be the cell he is currently in.IfT_iisUand cell(x-1,y)is passable, move to cell(x-1,y).IfT_iisDand cell(x+1,y)is passable, move to cell(x+1,y).IfT_iisLand cell(x,y-1)is passable, move to cell(x,y-1).IfT_iisRand cell(x,y+1)is passable, move to cell(x,y+1).Otherwise, stay in cell(x,y). \n Let (x,y) be the cell he is currently in.IfT_iisUand cell(x-1,y)is passable, move to cell(x-1,y).IfT_iisDand cell(x+1,y)is passable, move to cell(x+1,y).IfT_iisLand cell(x,y-1)is passable, move to cell(x,y-1).IfT_iisRand cell(x,y+1)is passable, move to cell(x,y+1).Otherwise, stay in cell(x,y). \n If T_i isUand cell (x-1,y) is passable, move to cell (x-1,y). \n If T_i isDand cell (x+1,y) is passable, move to cell (x+1,y). \n If T_i isLand cell (x,y-1) is passable, move to cell (x,y-1). \n If T_i isRand cell (x,y+1) is passable, move to cell (x,y+1). \n Otherwise, stay in cell (x,y).",
          "constraints": "Constraints: 3 \\leq H,W \\leq 100 \n 1 \\leq X \\leq H \n 1 \\leq Y \\leq W \n All given numbers are integers. \n Each S_{i,j} is one of#,.,@. \n S_{i,1} and S_{i,W} are#for every 1 \\leq i \\leq H. \n S_{1,j} and S_{H,j} are#for every 1 \\leq j \\leq W. \n S_{X,Y}=. \n T is a string of length at least 1 and at most 10^4, consisting ofU,D,L,R.",
          "io_format": "Input: \n\nThe Input is given from Standard Input in the following format:\n\nH\nW\nX\nY\nS_{1,1}S_{1,2}... S_{1,W}\n...\nS_{H,1}S_{H,2}... S_{H,W}\nT\n\nOutput: \n\nLet (X,Y) be the cell where he is after completing all actions, and C be the number of distinct houses he passed through or arrived at during his actions. Print X,Y,C in this order separated by spaces.",
          "samples": [
            {
              "input": "5 5 3 4\n#####\n#...#\n#.@.#\n#..@#\n#####\nLLLDRUU",
              "output": "2 3 1",
              "explanation": "Santa Claus behaves as follows:\n\n\n\nThe number of houses he passed or arrived during his actions is 1.\n\nT_1=L, so he moves from (3,4) to (3,3). A house is passed. \n T_2=L, so he moves from (3,3) to (3,2). \n T_3=L, but cell (3,1) is impassable, so he stays at (3,2). \n T_4=D, so he moves from (3,2) to (4,2). \n T_5=R, so he moves from (4,2) to (4,3). \n T_6=U, so he moves from (4,3) to (3,3). A house is passed, but it has already been passed. \n T_7=U, so he moves from (3,3) to (2,3)."
            },
            {
              "input": "6 13 4 6\n#############\n#@@@@@@@@@@@#\n#@@@@@@@@@@@#\n#@@@@.@@@@@@#\n#@@@@@@@@@@@#\n#############\nUURUURLRLUUDDURDURRR",
              "output": "3 11 11",
              "explanation": null
            },
            {
              "input": "12 35 7 10\n###################################\n#.................................#\n#..........@......................#\n#......@................@.........#\n#.............##............@.....#\n#...##........##....##............#\n#...##........##....##.......##...#\n#....##......##......##....##.....#\n#....##......##......##..##.......#\n#.....#######.........###.........#\n#.................................#\n###################################\nLRURRRUUDDULUDUUDLRLRDRRLULRRUDLDRU",
              "output": "4 14 1",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc385_c",
          "problem_letter": "C",
          "url": "https://abc385.contest.atcoder.jp/tasks/abc385_c?lang=en",
          "statement": "Problem Statement: The chosen buildings all have the same height. \n The chosen buildings are arranged at equal intervals.",
          "constraints": "Constraints: 1 \\leq N \\leq 3000 \n 1 \\leq H_i \\leq 3000 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nH_1\n...\nH_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "8\n5 7 5 7 7 5 7 7",
              "output": "3",
              "explanation": "Choosing the 2nd, 5th, and 8th buildings from the front satisfies the conditions."
            },
            {
              "input": "10\n100 200 300 400 500 600 700 800 900 1000",
              "output": "1",
              "explanation": "Choosing just one building is considered to satisfy the conditions."
            },
            {
              "input": "32\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4 6 2 6 4 3 3 8 3 2 7 9 5",
              "output": "3",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc385_d",
          "problem_letter": "D",
          "url": "https://abc385.contest.atcoder.jp/tasks/abc385_d?lang=en",
          "statement": "Problem Statement: For i=1,2,\\ldots,M in order, he moves as follows:Let(x,y)be the point where he currently is.IfD_iisU, move in a straight line from(x,y)to(x,y+C_i).IfD_iisD, move in a straight line from(x,y)to(x,y-C_i).IfD_iisL, move in a straight line from(x,y)to(x-C_i,y).IfD_iisR, move in a straight line from(x,y)to(x+C_i,y). \n Let (x,y) be the point where he currently is.IfD_iisU, move in a straight line from(x,y)to(x,y+C_i).IfD_iisD, move in a straight line from(x,y)to(x,y-C_i).IfD_iisL, move in a straight line from(x,y)to(x-C_i,y).IfD_iisR, move in a straight line from(x,y)to(x+C_i,y). \n If D_i isU, move in a straight line from (x,y) to (x,y+C_i). \n If D_i isD, move in a straight line from (x,y) to (x,y-C_i). \n If D_i isL, move in a straight line from (x,y) to (x-C_i,y). \n If D_i isR, move in a straight line from (x,y) to (x+C_i,y).",
          "constraints": "Constraints: 1 \\leq N \\leq 2\\times 10^5 \n 1 \\leq M \\leq 2\\times 10^5 \n -10^9 \\leq X_i,Y_i \\leq 10^9 \n The pairs (X_i,Y_i) are distinct. \n -10^9 \\leq S_x,S_y \\leq 10^9 \n There is no house at (S_x,S_y). \n Each D_i is one ofU,D,L,R. \n 1 \\leq C_i \\leq 10^9 \n All input numbers are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nS_x\nS_y\nX_1\nY_1\n\\vdots\nX_N\nY_N\nD_1\nC_1\n\\vdots\nD_M\nC_M\n\nOutput: \n\nLet (X,Y) be the point where he is after completing all actions, and C be the number of distinct houses passed through or arrived at. Print X,Y,C in this order separated by spaces.",
          "samples": [
            {
              "input": "3 4 3 2\n2 2\n3 3\n2 1\nL 2\nD 1\nR 1\nU 2",
              "output": "2 3 2",
              "explanation": "Santa Claus behaves as follows:\n\n\n\nThe number of houses he passed or arrived during his actions is 2.\n\nD_1=L, so he moves from (3,2) to (3-2,2) in a straight line. During this, he passes through the house at (2,2). \n D_2=D, so he moves from (1,2) to (1,2-1) in a straight line. \n D_3=R, so he moves from (1,1) to (1+1,1) in a straight line. During this, he passes through the house at (2,1). \n D_4=U, so he moves from (2,1) to (2,1+2) in a straight line. During this, he passes through the house at (2,2), but it has already been passed."
            },
            {
              "input": "1 3 0 0\n1 1\nR 1000000000\nR 1000000000\nR 1000000000",
              "output": "3000000000 0 0",
              "explanation": "Be careful with overflow."
            }
          ]
        },
        {
          "id": "abc385_e",
          "problem_letter": "E",
          "url": "https://abc385.contest.atcoder.jp/tasks/abc385_e?lang=en",
          "statement": "Problem Statement: Choose positive integers x,y. \n Prepare one vertex. \n Prepare x more vertices, and connect each of them to the vertex prepared in step 2. \n For each of the x vertices prepared in step 3, attach y leaves to it.",
          "constraints": "Constraints: 3 \\leq N \\leq 3 \\times 10^5 \n 1 \\leq u_i < v_i \\leq N \n The given graph is a tree. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nu_1\nv_1\nu_2\nv_2\n\\vdots\nu_{N-1}\nv_{N-1}\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "8\n1 3\n2 3\n3 4\n4 5\n5 6\n5 7\n4 8",
              "output": "1",
              "explanation": "By deleting vertex 8, the given tree can be transformed into a Snowflake Tree with x=2,y=2."
            },
            {
              "input": "3\n1 2\n2 3",
              "output": "0",
              "explanation": "The given tree is already a Snowflake Tree with x=1,y=1."
            },
            {
              "input": "10\n1 3\n1 2\n5 7\n6 10\n2 8\n1 6\n8 9\n2 7\n1 4",
              "output": "3",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc385_f",
          "problem_letter": "F",
          "url": "https://abc385.contest.atcoder.jp/tasks/abc385_f?lang=en",
          "statement": "Problem Statement: \n\nThere are N buildings numbered 1 to N on a number line. Building i is at coordinate X_i and has height H_i. The size in directions other than height is negligible.\n\nFrom a point P with coordinate x and height h, building i is considered visible if there exists a point Q on building i such that the line segment PQ does not intersect with any other building.\n\nFind the maximum height at coordinate 0 from which it is not possible to see all buildings. Height must be non-negative; if it is possible to see all buildings at height 0 at coordinate 0, report-1 instead.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq X_1 < \\dots < X_N \\leq 10^9 \n 1 \\leq H_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nX_1\nH_1\n\\vdots\nX_N\nH_N\n\nOutput: \n\nIf it is possible to see all buildings from coordinate 0 and height 0, print-1. Otherwise, print the maximum height at coordinate 0 from which it is not possible to see all buildings. Answers with an absolute or relative error of at most 10^{-9} from the true answer will be considered correct.",
          "samples": [
            {
              "input": "3\n3 2\n5 4\n7 5",
              "output": "1.500000000000000000",
              "explanation": "From coordinate 0 and height 1.5, building 3 cannot be seen. If the height is even slightly greater than 1.5, all buildings including building 3 can be seen. Thus, the answer is 1.5.\n\n"
            },
            {
              "input": "2\n1 1\n2 100",
              "output": "-1",
              "explanation": "Note that-1.000or similar outputs would be considered incorrect."
            },
            {
              "input": "3\n1 1\n2 2\n3 3",
              "output": "0.000000000000000000",
              "explanation": null
            },
            {
              "input": "4\n10 10\n17 5\n20 100\n27 270",
              "output": "17.142857142857142350",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc385_g",
          "problem_letter": "G",
          "url": "https://abc385.contest.atcoder.jp/tasks/abc385_g?lang=en",
          "statement": "Problem Statement: Consider N buildings arranged in a row from left to right, with the height of the i -th building from the left being P_i. Then L(P) is the number of buildings visible when viewed from the left, and R(P) is the number of buildings visible when viewed from the right.More formally, L(P) is the count of indices i such that P_j < P_i for all j < i, and R(P) is the count of indices i such that P_i > P_j for all j > i.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n |K| \\leq N-1 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3 -1",
              "output": "1",
              "explanation": "Therefore, the number of permutations P with L(P)-R(P)=-1 is 1.\n\nP=(1,2,3) : L(P)-R(P)=3-1=2. \n P=(1,3,2) : L(P)-R(P)=2-2=0. \n P=(2,1,3) : L(P)-R(P)=2-1=1. \n P=(2,3,1) : L(P)-R(P)=2-2=0. \n P=(3,1,2) : L(P)-R(P)=1-2=-1. \n P=(3,2,1) : L(P)-R(P)=1-3=-2."
            },
            {
              "input": "1 0",
              "output": "1",
              "explanation": null
            },
            {
              "input": "2024 385",
              "output": "576300012",
              "explanation": "Print the count modulo 998244353."
            }
          ]
        }
      ]
    },
    {
      "id": "abc386",
      "url": "https://abc386.contest.atcoder.jp/?lang=en",
      "start_time": "2024-12-28T12:00:00",
      "problems": [
        {
          "id": "abc386_a",
          "problem_letter": "A",
          "url": "https://abc386.contest.atcoder.jp/tasks/abc386_a?lang=en",
          "statement": "Problem Statement: For two distinct integers x and y, there are three cards with x written on them and two cards with y written on them.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le A,B,C,D \\le 13",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nA\nB\nC\nD\n\nOutput: \n\nIf adding one card can form a Full House, printYes ; otherwise, printNo.",
          "samples": [
            {
              "input": "7 7 7 1",
              "output": "Yes",
              "explanation": "Adding 1 to 7,7,7,1 forms a Full House."
            },
            {
              "input": "13 12 11 10",
              "output": "No",
              "explanation": "Adding anything to 13,12,11,10 does not form a Full House."
            },
            {
              "input": "3 3 5 5",
              "output": "Yes",
              "explanation": "Adding 3,3,5,5 to 3 forms a Full House.Also, adding 5 forms a Full House."
            },
            {
              "input": "8 8 8 8",
              "output": "No",
              "explanation": "Adding anything to 8,8,8,8 does not form a Full House.Note that five identical cards do not form a Full House."
            },
            {
              "input": "1 3 4 1",
              "output": "No",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc386_b",
          "problem_letter": "B",
          "url": "https://abc386.contest.atcoder.jp/tasks/abc386_b?lang=en",
          "statement": "Problem Statement: \n\nThere is a calculator with the buttons00,0,1,2,3,4,5,6,7,8,9. When a string x is displayed on this calculator and you press a button b, the resulting displayed string becomes the string x with b appended to its end.\n\nInitially, the calculator displays the empty string (a string of length 0). Find the minimum number of button presses required to display the string S on this calculator.",
          "constraints": "Constraints: S is a string of length at least 1 and at most 1000, consisting of0,1,2,3,4,5,6,7,8,9. \n The first character of S is not0.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS\n\nOutput: \n\nPrint the answer as an integer.",
          "samples": [
            {
              "input": "1000000007",
              "output": "6",
              "explanation": "To display1000000007, you can press the buttons1,00,00,00,00,7in this order. The total number of button presses is 6, and this is the minimum possible."
            },
            {
              "input": "998244353",
              "output": "9",
              "explanation": null
            },
            {
              "input": "32000",
              "output": "4",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc386_c",
          "problem_letter": "C",
          "url": "https://abc386.contest.atcoder.jp/tasks/abc386_c?lang=en",
          "statement": "Problem Statement: Choose one of the following three operations and execute it.Insert any one character at any position inS(possibly the beginning or end).Delete one character fromS.Choose one character inSand replace it with another character. \n Insert any one character at any position in S (possibly the beginning or end). \n Delete one character from S. \n Choose one character in S and replace it with another character.",
          "constraints": "Constraints: Each of S and T is a string of length between 1 and 500000, inclusive, consisting of lowercase English letters. \n \\color{red}{K=1}",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nK\nS\nT\n\nOutput: \n\nIf S can be made identical to T with at most K operations, printYes ; otherwise, printNo.",
          "samples": [
            {
              "input": "1\nabc\nagc",
              "output": "Yes",
              "explanation": "Replacing the second characterbofabcwithgconvertsabctoagcin one operation."
            },
            {
              "input": "1\nabc\nawtf",
              "output": "No",
              "explanation": "abccannot be converted toawtfin one operation."
            },
            {
              "input": "1\nabc\nac",
              "output": "Yes",
              "explanation": "Deleting the second characterbofabcconvertsabctoacin one operation."
            },
            {
              "input": "1\nback\nblack",
              "output": "Yes",
              "explanation": "Insertinglbetween the first and second characters ofbackconvertsbacktoblackin one operation."
            },
            {
              "input": "1\nsame\nsame",
              "output": "Yes",
              "explanation": "It is also possible that S = T from the beginning."
            },
            {
              "input": "1\nleap\nread",
              "output": "No",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc386_d",
          "problem_letter": "D",
          "url": "https://abc386.contest.atcoder.jp/tasks/abc386_d?lang=en",
          "statement": "Problem Statement: For every row, the following condition holds: \n There exists an integer i\\ (0\\leq i\\leq N) such that the leftmost i cells are colored black, and the rest are colored white. \n For every column, the following condition holds: \n There exists an integer i\\ (0\\leq i\\leq N) such that the topmost i cells are colored black, and the rest are colored white.",
          "constraints": "Constraints: 1\\leq N\\leq 10^9 \n 1\\leq M\\leq \\min(N^2,2\\times 10^5) \n 1\\leq X_i,Y_i\\leq N \n (X_i,Y_i)\\neq (X_j,Y_j)\\ (i\\neq j) \n C_i isBorW. \n All input numbers are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nX_1\nY_1\nC_1\n\\vdots\nX_M\nY_M\nC_M\n\nOutput: \n\nIf it is possible to satisfy the conditions, printYes ; otherwise, printNo.",
          "samples": [
            {
              "input": "4 3\n4 1 B\n3 2 W\n1 3 B",
              "output": "Yes",
              "explanation": "For example, one can color the grid as in the following figure to satisfy the conditions. The cells already colored are surrounded by red borders.\n\n"
            },
            {
              "input": "2 2\n1 2 W\n2 2 B",
              "output": "No",
              "explanation": "No matter how the remaining two cells are colored, the conditions cannot be satisfied."
            },
            {
              "input": "1 1\n1 1 W",
              "output": "Yes",
              "explanation": null
            },
            {
              "input": "2289 10\n1700 1083 W\n528 967 B\n1789 211 W\n518 1708 W\n1036 779 B\n136 657 B\n759 1497 B\n902 1309 B\n1814 712 B\n936 763 B",
              "output": "No",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc386_e",
          "problem_letter": "E",
          "url": "https://abc386.contest.atcoder.jp/tasks/abc386_e?lang=en",
          "statement": "Problem Statement: In the binary representation of A \\oplus B, the bit corresponding to 2^k (k \\ge 0) is 1 if and only if exactly one of the bits corresponding to 2^k in A and B is 1, and is 0 otherwise.",
          "constraints": "Constraints: 1\\leq K\\leq N\\leq 2\\times 10^5 \n 0\\leq A_i<2^{60} \n \\dbinom{N}{K}\\leq 10^6 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "4 2\n3 2 6 4",
              "output": "7",
              "explanation": "Here are six ways to choose two distinct elements from (3,2,6,4).\n\nHence, the maximum possible value is 7.\n\n(3,2) : The XOR is 3\\oplus 2 = 1. \n (3,6) : The XOR is 3\\oplus 6 = 5. \n (3,4) : The XOR is 3\\oplus 4 = 7. \n (2,6) : The XOR is 2\\oplus 6 = 4. \n (2,4) : The XOR is 2\\oplus 4 = 6. \n (6,4) : The XOR is 6\\oplus 4 = 2."
            },
            {
              "input": "10 4\n1516 1184 1361 2014 1013 1361 1624 1127 1117 1759",
              "output": "2024",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc386_f",
          "problem_letter": "F",
          "url": "https://abc386.contest.atcoder.jp/tasks/abc386_f?lang=en",
          "statement": "Problem Statement: Choose one of the following three operations and execute it.Insert any one character at any position inS(possibly the beginning or end).Delete one character fromS.Choose one character inSand replace it with another character. \n Insert any one character at any position in S (possibly the beginning or end). \n Delete one character from S. \n Choose one character in S and replace it with another character.",
          "constraints": "Constraints: Each of S and T is a string of length between 1 and 500000, inclusive, consisting of lowercase English letters. \n K is an integer satisfying \\color{red}{1 \\le K \\le 20}.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nK\nS\nT\n\nOutput: \n\nIf S can be made identical to T with at most K operations, printYes ; otherwise, printNo.",
          "samples": [
            {
              "input": "3\nabc\nawtf",
              "output": "Yes",
              "explanation": "For example, here is a way to convertabctoawtfwith three operations:\n\nReplace the second characterbwithw. After the operation, the string becomesawc. \n Replace the third charactercwithf. After the operation, the string becomesawf. \n Inserttbetween the second and third characters. After the operation, the string becomesawtf."
            },
            {
              "input": "2\nabc\nawtf",
              "output": "No",
              "explanation": "abccannot be converted toawtfwith two or fewer operations."
            },
            {
              "input": "17\ntwothousandtwentyfour\nhappynewyear",
              "output": "Yes",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc386_g",
          "problem_letter": "G",
          "url": "https://abc386.contest.atcoder.jp/tasks/abc386_g?lang=en",
          "statement": "Problem Statement: \n\nYou are given positive integers N and M. Consider a weighted complete graph with N vertices labeled from 1 to N, where the weight of each edge is an integer between 1 and M, inclusive. There are M^{N(N-1)/2} such graphs. For each of them, consider the sum of the weights of the edges included in its Minimum Spanning Tree. What is the total of these sums? Print the result modulo 998244353.",
          "constraints": "Constraints: 2 \\le N \\le 500 \n 1 \\le M \\le 500 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3 2",
              "output": "21",
              "explanation": "Here are eight complete graphs with three vertices where edge weights are 1 or 2. The edges in each graph’s MST are highlighted in red in the figure below.\n\n\n\nThe sums of the MST edges for these graphs are 2,2,2,3,2,3,3,4, so the total is 2+2+2+3+2+3+3+4=21."
            },
            {
              "input": "2 100",
              "output": "5050",
              "explanation": null
            },
            {
              "input": "20 24",
              "output": "707081320",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc387",
      "url": "https://abc387.contest.atcoder.jp/?lang=en",
      "start_time": "2025-01-04T12:00:00",
      "problems": [
        {
          "id": "abc387_a",
          "problem_letter": "A",
          "url": "https://abc387.contest.atcoder.jp/tasks/abc387_a?lang=en",
          "statement": "Problem Statement: \n\nYou are given two positive integers A and B.\n\nOutput the square of A + B.",
          "constraints": "Constraints: 1 \\leq A,B \\leq 2025 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nA\nB\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "20 25",
              "output": "2025",
              "explanation": "(20+25)^2=2025."
            },
            {
              "input": "30 25",
              "output": "3025",
              "explanation": null
            },
            {
              "input": "45 11",
              "output": "3136",
              "explanation": null
            },
            {
              "input": "2025 1111",
              "output": "9834496",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc387_b",
          "problem_letter": "B",
          "url": "https://abc387.contest.atcoder.jp/tasks/abc387_b?lang=en",
          "statement": "Problem Statement: \n\nAmong the 81 integers that appear in the 9 -by- 9 multiplication table, find the sum of those that are not X.\n\nThere is a grid of size 9 by 9. Each cell of the grid contains an integer: the cell at the i -th row from the top and the j -th column from the left contains i \\times j. You are given an integer X. Among the 81 integers written in this grid, find the sum of those that are not X. If the same value appears in multiple cells, add it for each cell.",
          "constraints": "Constraints: X is an integer between 1 and 81, inclusive.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nX\n\nOutput: \n\nPrint the sum of the integers that are not X among the 81 integers written in the grid.",
          "samples": [
            {
              "input": "1",
              "output": "2024",
              "explanation": "The only cell with 1 in the grid is the cell at the 1st row from the top and 1st column from the left. Summing all integers that are not 1 yields 2024."
            },
            {
              "input": "11",
              "output": "2025",
              "explanation": "There is no cell containing 11 in the grid. Thus, the answer is 2025, the sum of all 81 integers."
            },
            {
              "input": "24",
              "output": "1929",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc387_c",
          "problem_letter": "C",
          "url": "https://abc387.contest.atcoder.jp/tasks/abc387_c?lang=en",
          "statement": "Problem Statement: \n\nA positive integer not less than 10 whose top digit (the most significant digit) in decimal representation is strictly larger than every other digit in that number is called aSnake number.\nFor example, 31 and 201 are Snake numbers, but 35 and 202 are not.\n\nFind how many Snake numbers exist between L and R, inclusive.",
          "constraints": "Constraints: 10 \\leq L \\leq R \\leq 10^{18} \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nL\nR\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "97 210",
              "output": "6",
              "explanation": "The Snake numbers between 97 and 210, inclusive, are 97, 98, 100, 200, 201, and 210 : there are six."
            },
            {
              "input": "1000 9999",
              "output": "2025",
              "explanation": null
            },
            {
              "input": "252509054433933519 760713016476190692",
              "output": "221852052834757",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc387_d",
          "problem_letter": "D",
          "url": "https://abc387.contest.atcoder.jp/tasks/abc387_d?lang=en",
          "statement": "Problem Statement: For every 1 \\leq l \\leq k, it holds that 1 \\leq i_l \\leq H and 1 \\leq j_l \\leq W, and (i_l,j_l) is not an obstacle cell. \n (i_1,j_1) is the start cell. \n (i_k,j_k) is the goal cell. \n For every 1 \\leq l \\leq k-1, |i_l - i_{l+1}| + |j_l - j_{l+1}| = 1. \n For every 1 \\leq l \\leq k-2, if i_l \\neq i_{l+1}, then i_{l+1} = i_{l+2}. \n For every 1 \\leq l \\leq k-2, if j_l \\neq j_{l+1}, then j_{l+1} = j_{l+2}.",
          "constraints": "Constraints: 1 \\leq H,W \\leq 1000 \n H and W are integers. \n Each S_i is a string of length W consisting ofS,G,.,#. \n There is exactly one start cell and exactly one goal cell.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nH\nW\nS_1\nS_2\n\\vdots\nS_H\n\nOutput: \n\nIf it is possible to reach the goal cell, print the minimum number of moves. Otherwise, print-1.",
          "samples": [
            {
              "input": "3 5\n.S#.G\n.....\n.#...",
              "output": "7",
              "explanation": "\n\nAs shown in the left figure, you can move as (1,2)\\rightarrow(2,2)\\rightarrow(2,3)\\rightarrow(3,3)\\rightarrow(3,4)\\rightarrow(2,4)\\rightarrow(2,5)\\rightarrow(1,5), reaching the goal cell in 7 moves.\nIt is impossible in 6 moves or fewer, so the answer is 7.\n\nNote that you cannot take a path that moves horizontally (or vertically) consecutively without alternating as shown in the right figure."
            },
            {
              "input": "3 5\n..#.G\n.....\nS#...",
              "output": "-1",
              "explanation": "It is not possible to reach the goal cell."
            },
            {
              "input": "8 63\n...............................................................\n..S...#............................#####..#####..#####..####G..\n..#...#................................#..#...#......#..#......\n..#####..####...####..####..#..#...#####..#...#..#####..#####..\n..#...#..#..#...#..#..#..#..#..#...#......#...#..#..........#..\n..#...#..#####..####..####..####...#####..#####..#####..#####..\n................#.....#........#...............................\n................#.....#........#...............................",
              "output": "148",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc387_e",
          "problem_letter": "E",
          "url": "https://abc387.contest.atcoder.jp/tasks/abc387_e?lang=en",
          "statement": "Problem Statement: \n\nThe digit sum of a positive integer n is defined as the sum of its digits when n is written in decimal. For example, the digit sum of 2025 is 2 + 0 + 2 + 5 = 9. A positive integer n is called agood integer if it is divisible by its digit sum. For example, 2025 is a good integer because it is divisible by its digit sum of 9. A pair of positive integers (a, a+1) is calledtwin good integers if both a and a+1 are good integers. For example, (2024, 2025) is twin good integers.\n\nYou are given a positive integer N. Find a pair of twin good integers (a, a + 1) such that N \\leq a and a + 1 \\leq 2N. If no such pair exists, report that fact.",
          "constraints": "Constraints: N is an integer at least 1 and less than 10^{100000}.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\n\nOutput: \n\nIf there exists such a pair (a, a+1), output a. Otherwise, output-1. Do not print leading zeros. If there are multiple such pairs, you may print any.",
          "samples": [
            {
              "input": "5",
              "output": "8",
              "explanation": "(8, 9) is a valid pair of twin good integers satisfying the conditions. Other examples include (5, 6), (6, 7), (7, 8), (9, 10)."
            },
            {
              "input": "21",
              "output": "-1",
              "explanation": "No pair of twin good integers satisfies the conditions."
            },
            {
              "input": "1234",
              "output": "2024",
              "explanation": "(2024, 2025) is a valid pair of twin good integers."
            },
            {
              "input": "1234567890123456789012345678901234567890",
              "output": "1548651852734633803438094164372911259190",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc387_f",
          "problem_letter": "F",
          "url": "https://abc387.contest.atcoder.jp/tasks/abc387_f?lang=en",
          "statement": "Problem Statement: x_i \\leq x_{A_i} for every i ( 1 \\leq i \\leq N).",
          "constraints": "Constraints: 1 \\leq N, M \\leq 2025 \n 1 \\leq A_i \\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3 3\n2 1 1",
              "output": "6",
              "explanation": "The sequences x=(1,1,1),(2,2,1),(2,2,2),(3,3,1),(3,3,2),(3,3,3) satisfy the condition."
            },
            {
              "input": "4 9\n1 1 1 1",
              "output": "2025",
              "explanation": null
            },
            {
              "input": "10 5\n9 4 5 5 4 2 1 5 7 2",
              "output": "10010",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc387_g",
          "problem_letter": "G",
          "url": "https://abc387.contest.atcoder.jp/tasks/abc387_g?lang=en",
          "statement": "Problem Statement: For every circuit in G, the number of edges in that circuit is a prime number.Here, a circuit is a closed trail that may pass through the same vertex more than once (but must not use the same edge more than once).",
          "constraints": "Constraints: N is an integer between 1 and 2.5 \\times 10^5, inclusive.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\n\nOutput: \n\nPrint the number, modulo 998244353, of simple undirected connected graphs G satisfying the condition.",
          "samples": [
            {
              "input": "3",
              "output": "4",
              "explanation": "There are four such graphs G :\n\nThe graph with edges (1, 2) and (1, 3) \n The graph with edges (1, 2) and (2, 3) \n The graph with edges (1, 3) and (2, 3) \n The graph with edges (1, 2), (1, 3), and (2, 3)"
            },
            {
              "input": "2025",
              "output": "879839321",
              "explanation": null
            },
            {
              "input": "61261",
              "output": "202537766",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc388",
      "url": "https://abc388.contest.atcoder.jp/?lang=en",
      "start_time": "2025-01-11T12:00:00",
      "problems": [
        {
          "id": "abc388_a",
          "problem_letter": "A",
          "url": "https://abc388.contest.atcoder.jp/tasks/abc388_a?lang=en",
          "statement": "Problem Statement: \n\nYou are given a string S. Here, the first character of S is an uppercase English letter, and the second and subsequent characters are lowercase English letters.\n\nPrint the string formed by concatenating the first character of S andUPC in this order.",
          "constraints": "Constraints: S is a string of length between 1 and 100, inclusive. \n The first character of S is an uppercase English letter. \n The second and subsequent characters of S are lowercase English letters.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS\n\nOutput: \n\nPrint the string formed by concatenating the first character of S andUPC in this order.",
          "samples": [
            {
              "input": "Kyoto",
              "output": "KUPC",
              "explanation": "The first character ofKyotoisK, so concatenateKandUPC, and printKUPC."
            },
            {
              "input": "Tohoku",
              "output": "TUPC",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc388_b",
          "problem_letter": "B",
          "url": "https://abc388.contest.atcoder.jp/tasks/abc388_b?lang=en",
          "statement": "Problem Statement: \n\nThere are N snakes.\n\nInitially, the thickness of the i -th snake is T_i, and its length is L_i.\n\nThe weight of a snake is defined as the product of its thickness and length.\n\nFor each integer k satisfying 1 \\leq k \\leq D, find the weight of the heaviest snake when every snake's length has increased by k.",
          "constraints": "Constraints: 1 \\leq N, D \\leq 100 \n 1 \\leq T_i, L_i \\leq 100 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nD\nT_1\nL_1\nT_2\nL_2\n\\vdots\nT_N\nL_N\n\nOutput: \n\nPrint D lines. The k -th line should contain the weight of the heaviest snake when every snake's length has increased by k.",
          "samples": [
            {
              "input": "4 3\n3 3\n5 1\n2 4\n1 10",
              "output": "12\n15\n20",
              "explanation": "When every snake’s length has increased by 1, the snakes' weights become 12, 10, 10, 11, so print 12 on the first line.\n\nWhen every snake’s length has increased by 2, the snakes' weights become 15, 15, 12, 12, so print 15 on the second line.\n\nWhen every snake’s length has increased by 3, the snakes' weights become 18, 20, 14, 13, so print 20 on the third line."
            },
            {
              "input": "1 4\n100 100",
              "output": "10100\n10200\n10300\n10400",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc388_c",
          "problem_letter": "C",
          "url": "https://abc388.contest.atcoder.jp/tasks/abc388_c?lang=en",
          "statement": "Problem Statement: \n\nThere are N mochi (rice cakes) arranged in ascending order of size.\nThe size of the i -th mochi (1 \\leq i \\leq N) is A_i.\n\nGiven two mochi A and B, with sizes a and b respectively, you can make one kagamimochi (a stacked rice cake) by placing mochi A on top of mochi B if and only if a is at most half of b.\n\nYou choose two mochi out of the N mochi, and place one on top of the other to form one kagamimochi.\n\nFind how many different kinds of kagamimochi can be made.\n\nTwo kagamimochi are distinguished if at least one of the mochi is different, even if the sizes of the mochi are the same.",
          "constraints": "Constraints: 2 \\leq N \\leq 5 \\times 10^5 \n 1 \\leq A_i \\leq 10^9 \\ (1 \\leq i \\leq N) \n A_i \\leq A_{i+1} \\ (1 \\leq i < N) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the number of different kinds of kagamimochi that can be made.",
          "samples": [
            {
              "input": "6\n2 3 4 4 7 10",
              "output": "8",
              "explanation": "The sizes of the given mochi are as follows:\n\n\n\nIn this case, you can make the following eight kinds of kagamimochi:\n\n\n\nNote that there are two kinds of kagamimochi where a mochi of size 4 is topped by a mochi of size 2, and two kinds where a mochi of size 10 is topped by a mochi of size 4."
            },
            {
              "input": "3\n387 388 389",
              "output": "0",
              "explanation": "It is possible that you cannot make any kagamimochi."
            },
            {
              "input": "32\n1 2 4 5 8 10 12 16 19 25 33 40 50 64 87 101 149 175 202 211 278 314 355 405 412 420 442 481 512 582 600 641",
              "output": "388",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc388_d",
          "problem_letter": "D",
          "url": "https://abc388.contest.atcoder.jp/tasks/abc388_d?lang=en",
          "statement": "Problem Statement: \n\nOn a certain planet, there are N aliens, all of whom are minors.\n\nThe i -th alien currently has A_i stones, and will become an adult exactly i years later.\n\nWhen someone becomes an adult on this planet, everyadult who has at least one stone gives exactly one stone as a congratulatory gift to the alien who has just become an adult.\n\nFind how many stones each alien will have after N years.\n\nAssume that no new aliens will be born in the future.",
          "constraints": "Constraints: 1 \\leq N \\leq 5 \\times 10^5 \n 0 \\leq A_i \\leq 5 \\times 10^5 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nLet B_i be the number of stones owned by the i -th alien after N years. Print B_1, B_2, ..., B_N in this order, separated by spaces.",
          "samples": [
            {
              "input": "4\n5 0 9 3",
              "output": "2 0 10 5",
              "explanation": "Let C_i be the number of stones that the i -th alien has at a given time.\n\nInitially, (C_1, C_2, C_3, C_4) = (5, 0, 9, 3).\n\nAfter 1 year, (C_1, C_2, C_3, C_4) = (5, 0, 9, 3).\n\nAfter 2 years, (C_1, C_2, C_3, C_4) = (4, 1, 9, 3).\n\nAfter 3 years, (C_1, C_2, C_3, C_4) = (3, 0, 11, 3).\n\nAfter 4 years, (C_1, C_2, C_3, C_4) = (2, 0, 10, 5)."
            },
            {
              "input": "5\n4 6 7 2 5",
              "output": "0 4 7 4 9",
              "explanation": null
            },
            {
              "input": "10\n2 9 1 2 0 4 6 7 1 5",
              "output": "0 2 0 0 0 4 7 10 4 10",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc388_e",
          "problem_letter": "E",
          "url": "https://abc388.contest.atcoder.jp/tasks/abc388_e?lang=en",
          "statement": "Problem Statement: From the N mochi, choose 2K of them to form K pairs. For each pair, place one mochi on top of the other, to make K kagamimochi.",
          "constraints": "Constraints: 2 \\leq N \\leq 5 \\times 10^5 \n 1 \\leq A_i \\leq 10^9 \\ (1 \\leq i \\leq N) \n A_i \\leq A_{i+1} \\ (1 \\leq i < N) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...c\nA_N\n\nOutput: \n\nPrint the maximum K such that K kagamimochi can be made simultaneously.",
          "samples": [
            {
              "input": "6\n2 3 4 4 7 10",
              "output": "3",
              "explanation": "The sizes of the given mochi are as follows:\n\n\n\nIn this case, you can make the following three kagamimochi simultaneously:\n\n\n\nIt is not possible to make four or more kagamimochi from six mochi, so print3."
            },
            {
              "input": "3\n387 388 389",
              "output": "0",
              "explanation": "It is possible that you cannot make any kagamimochi."
            },
            {
              "input": "24\n307 321 330 339 349 392 422 430 477 481 488 537 541 571 575 602 614 660 669 678 712 723 785 792",
              "output": "6",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc388_f",
          "problem_letter": "F",
          "url": "https://abc388.contest.atcoder.jp/tasks/abc388_f?lang=en",
          "statement": "Problem Statement: Let your current square be x. Choose an integer i that satisfies all of the following conditions, and move to square x + i.A \\leq i \\leq Bx + i \\leq NSquarex + iis not bad. \n A \\leq i \\leq B \n x + i \\leq N \n Square x + i is not bad.",
          "constraints": "Constraints: 2 \\leq N \\leq 10^{12} \n 0 \\leq M \\leq 2 \\times 10^4 \n 1 \\leq A \\leq B \\leq 20 \n 1 < L_i \\leq R_i < N \\ (1 \\leq i \\leq M) \n R_i < L_{i+1} \\ (1 \\leq i \\leq M - 1) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nA\nB\nL_1\nR_1\nL_2\nR_2\n\\vdots\nL_M\nR_M\n\nOutput: \n\nIf it is possible to reach square N by repeating the action described in the problem statement, printYes. Otherwise, printNo.",
          "samples": [
            {
              "input": "24 2 3 5\n7 8\n17 20",
              "output": "Yes",
              "explanation": "You can move to square N in this way: 1 \\to 6 \\to 9 \\to 12 \\to 16 \\to 21 \\to 24."
            },
            {
              "input": "30 1 5 8\n4 24",
              "output": "No",
              "explanation": null
            },
            {
              "input": "100 4 10 11\n16 18\n39 42\n50 55\n93 99",
              "output": "Yes",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc388_g",
          "problem_letter": "G",
          "url": "https://abc388.contest.atcoder.jp/tasks/abc388_g?lang=en",
          "statement": "Problem Statement: Out of the R_i - L_i + 1 mochi from the L_i -th to the R_i -th, choose 2K mochi and form K pairs. For each pair, place one mochi on top of the other, to make K kagamimochi.",
          "constraints": "Constraints: 2 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq A_i \\leq 10^9 \\ (1 \\leq i \\leq N) \n A_i \\leq A_{i+1} \\ (1 \\leq i < N) \n 1 \\leq Q \\leq 2 \\times 10^5 \n 1 \\leq L_i < R_i \\leq N \\ (1 \\leq i \\leq Q) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...c\nA_N\nQ\nL_1\nR_1\nL_2\nR_2\n\\vdots\nL_Q\nR_Q\n\nOutput: \n\nPrint Q lines. The i -th line (1\\leq i\\leq Q) should contain the answer to the i -th query.",
          "samples": [
            {
              "input": "11\n1 1 2 3 4 4 7 10 11 12 20\n5\n2 5\n3 8\n7 11\n1 2\n1 11",
              "output": "2\n3\n1\n0\n5",
              "explanation": "The answers to each query are as follows. One possible way to make the kagamimochi is given for each query.\n\nHence, print2,3,1,0,5in this order.\n\nThe mochi sizes are (1, 2, 3, 4). You can make the two kagamimochi (1,3) and (2,4). \n The mochi sizes are (2, 3, 4, 4, 7, 10). You can make the three kagamimochi (2,4), (3,7), and (4,10). \n The mochi sizes are (7, 10, 11, 12, 20). You can make one kagamimochi (10,20). \n The mochi sizes are (1, 1). You cannot make any kagamimochi. \n The mochi sizes are (1, 1, 2, 3, 4, 4, 7, 10, 11, 12, 20). You can make five kagamimochi (1,2), (1,3), (4,10), (4,11), and (7,20)."
            },
            {
              "input": "24\n127 148 170 174 258 311 331 414 416 436 517 523 532 587 591 638 660 748 760 776 837 857 972 984\n15\n7 11\n8 9\n8 13\n12 15\n9 23\n1 17\n8 12\n1 5\n6 17\n3 7\n12 19\n13 18\n7 22\n1 12\n14 15",
              "output": "0\n0\n0\n0\n2\n6\n0\n1\n1\n0\n0\n0\n3\n5\n0",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc389",
      "url": "https://abc389.contest.atcoder.jp/?lang=en",
      "start_time": "2025-01-18T12:00:00",
      "problems": [
        {
          "id": "abc389_a",
          "problem_letter": "A",
          "url": "https://abc389.contest.atcoder.jp/tasks/abc389_a?lang=en",
          "statement": "Problem Statement: \n\nYou are given a 3 -character string S, where the first character is a digit, the second character is the characterx, and the third character is a digit.\n\nFind the product of the two numbers in S.",
          "constraints": "Constraints: S is a 3 -character string where the first character is an integer between 1 and 9, inclusive, the second character is the characterx, and the third character is an integer between 1 and 9, inclusive.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nS\n\nOutput: \n\nPrint the answer as an integer.",
          "samples": [
            {
              "input": "3x8",
              "output": "24",
              "explanation": "From 3 \\times 8 = 24, print 24."
            },
            {
              "input": "9x9",
              "output": "81",
              "explanation": "From 9 \\times 9 = 81, print 81."
            }
          ]
        },
        {
          "id": "abc389_b",
          "problem_letter": "B",
          "url": "https://abc389.contest.atcoder.jp/tasks/abc389_b?lang=en",
          "statement": "Problem Statement: \n\nYou are given an integer X not less than 2.\n\nFind the positive integer N such that N! = X.\n\nHere, N! denotes the factorial of N, and it is guaranteed that there is exactly one such N.",
          "constraints": "Constraints: 2 \\leq X \\leq 3 \\times 10^{18} \n There is exactly one positive integer N such that N!=X. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nX\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "6",
              "output": "3",
              "explanation": "From 3!=3\\times2\\times1=6, print 3."
            },
            {
              "input": "2432902008176640000",
              "output": "20",
              "explanation": "From 20!=2432902008176640000, print 20."
            }
          ]
        },
        {
          "id": "abc389_c",
          "problem_letter": "C",
          "url": "https://abc389.contest.atcoder.jp/tasks/abc389_c?lang=en",
          "statement": "Problem Statement: Type 1 : Given in the form1 l. A snake of length l is added to the end of the queue. If the queue was empty before adding, the head position of the newly added snake is 0 ; otherwise, it is the sum of the head coordinate of the last snake in the queue and the last snake’s length. \n Type 2 : Given in the form2. The snake at the front of the queue leaves the queue. It is guaranteed that the queue is not empty at this time. Let m be the length of the snake that left, then the head coordinate of every snake remaining in the queue decreases by m. \n Type 3 : Given in the form3 k. Output the head coordinate of the snake that is k -th from the front of the queue. It is guaranteed that there are at least k snakes in the queue at this time.",
          "constraints": "Constraints: 1 \\leq Q \\leq 3 \\times 10^{5} \n For a query of type 1, 1 \\leq l \\leq 10^{9} \n For a query of type 2, it is guaranteed that the queue is not empty. \n For a query of type 3, let n be the number of snakes in the queue, then 1 \\leq k \\leq n. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nQ\n\\text{query}_1\n\\text{query}_2\n\\vdots\n\\text{query}_Q\n\nHere, \\text{query}_i is the i -th query in one of the following forms:\n\n1\nl\n\n2\n\n3\nk\n\nOutput: \n\nLet q be the number of queries of type 3. Print q lines. The i -th line should contain the answer to the i -th type 3 query.",
          "samples": [
            {
              "input": "7\n1 5\n1 7\n3 2\n1 3\n1 4\n2\n3 3",
              "output": "5\n10",
              "explanation": "1st query: A snake of length 5 is added to the queue. Since the queue was empty, the head coordinate of this snake is 0. \n 2nd query: A snake of length 7 is added to the queue. Before adding, the last snake has head coordinate 0 and length 5, so the newly added snake’s head coordinate is 5. \n 3rd query: Output the head coordinate of the snake that is 2nd from the front. Currently, the head coordinates of the snakes in order are 0, 5, so output 5. \n 4th query: A snake of length 3 is added to the queue. Before adding, the last snake has head coordinate 5 and length 7, so the new snake’s head coordinate is 12. \n 5th query: A snake of length 4 is added to the queue. Before adding, the last snake has head coordinate 12 and length 3, so the new snake’s head coordinate is 15. \n 6th query: The snake at the front leaves the queue. The length of the snake that left is 5, so the head coordinate of each remaining snake decreases by 5. The remaining snake’s head coordinate becomes 0, 7, 10. \n 7th query: Output the head coordinate of the snake that is 3rd from the front. Currently, the head coordinates of the snakes in order are 0, 7, 10, so output 10."
            },
            {
              "input": "3\n1 1\n2\n1 3",
              "output": "",
              "explanation": "It is possible that there are no queries of type 3."
            },
            {
              "input": "10\n1 15\n1 10\n1 5\n2\n1 5\n1 10\n1 15\n2\n3 4\n3 2",
              "output": "20\n5",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc389_d",
          "problem_letter": "D",
          "url": "https://abc389.contest.atcoder.jp/tasks/abc389_d?lang=en",
          "statement": "Problem Statement: \n\nOn the two-dimensional coordinate plane, there is an infinite tiling of 1 \\times 1 squares.\n\nConsider drawing a circle of radius R centered at the center of one of these squares. How many of these squares are completely contained inside the circle?\n\nMore precisely, find the number of integer pairs (i,j) such that all four points (i+0.5,j+0.5), (i+0.5,j-0.5), (i-0.5,j+0.5), and (i-0.5,j-0.5) are at a distance of at most R from the origin.",
          "constraints": "Constraints: 1 \\leq R \\leq 10^{6} \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nR\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "2",
              "output": "5",
              "explanation": "There are a total of five squares completely contained in the circle: the square whose center matches the circle’s center, plus the four squares adjacent to it."
            },
            {
              "input": "4",
              "output": "37",
              "explanation": null
            },
            {
              "input": "26",
              "output": "2025",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc389_e",
          "problem_letter": "E",
          "url": "https://abc389.contest.atcoder.jp/tasks/abc389_e?lang=en",
          "statement": "Problem Statement: \n\nThere are N types of products, each having 10^{100} units in stock.\n\nYou can buy any non-negative number of units of each product. To buy k units of the i -th product, it costs k^2 P_i yen.\n\nIf your total purchase cost is at most M yen, what is the maximum number of units you can buy in total?",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^{5} \n 1 \\leq M \\leq 10^{18} \n 1 \\leq P_i \\leq 2 \\times 10^{9} \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nP_1\n...\nP_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3 9\n4 1 9",
              "output": "3",
              "explanation": "If you buy one unit of the 1st product and two units of the 2nd product, the total purchase cost is 1^2 \\times 4 + 2^2 \\times 1 = 8. It is impossible to buy four or more units in total with a total cost of at most 9 yen, so the answer is 3."
            },
            {
              "input": "10 1000\n2 15 6 5 12 1 7 9 17 2",
              "output": "53",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc389_f",
          "problem_letter": "F",
          "url": "https://abc389.contest.atcoder.jp/tasks/abc389_f?lang=en",
          "statement": "Problem Statement: An integer X is given. Assuming that Takahashi's initial rating is X, determine his rating after participating in all N contests.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq L_i \\leq R_i \\leq 5 \\times 10^5 (1 \\leq i \\leq N) \n 1 \\leq Q \\leq 3 \\times 10^5 \n For each query, 1 \\leq X \\leq 5 \\times 10^5. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nL_1\nR_1\nL_2\nR_2\n\\vdots\nL_N\nR_N\nQ\n\\text{query}_1\n\\text{query}_2\n\\vdots\n\\text{query}_Q\n\nHere, \\text{query}_i is the i -th query in the form:\n\nX\n\nOutput: \n\nPrint Q lines. The i -th line should contain the answer to the i -th query.",
          "samples": [
            {
              "input": "5\n1 5\n1 3\n3 6\n2 4\n4 7\n3\n3\n2\n5",
              "output": "6\n6\n8",
              "explanation": "For the 1st query, the rating changes as follows:\n\nFor the 2nd query, the rating increases in the 1st, 2nd, 3rd, and 5th contests, ending at 6.\n\nFor the 3rd query, the rating increases in the 1st, 3rd, and 5th contests, ending at 8.\n\nIn the 1st contest, the rating is between 1 and 5, so it increases by 1, becoming 4. \n In the 2nd contest, the rating is not between 1 and 3, so it remains 4. \n In the 3rd contest, the rating is between 3 and 6, so it increases by 1, becoming 5. \n In the 4th contest, the rating is not between 2 and 4, so it remains 5. \n In the 5th contest, the rating is between 4 and 7, so it increases by 1, becoming 6."
            },
            {
              "input": "10\n1 1999\n1 1999\n1200 2399\n1 1999\n1 1999\n1 1999\n2000 500000\n1 1999\n1 1999\n1600 2799\n7\n1\n1995\n2000\n2399\n500000\n2799\n1000",
              "output": "8\n2002\n2003\n2402\n500001\n2800\n1007",
              "explanation": null
            },
            {
              "input": "15\n260522 414575\n436426 479445\n148772 190081\n190629 433447\n47202 203497\n394325 407775\n304784 463982\n302156 468417\n131932 235902\n78537 395728\n223857 330739\n286918 329211\n39679 238506\n63340 186568\n160016 361868\n10\n287940\n296263\n224593\n101449\n336991\n390310\n323355\n177068\n11431\n8580",
              "output": "287946\n296269\n224599\n101453\n336997\n390315\n323363\n177075\n11431\n8580",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc389_g",
          "problem_letter": "G",
          "url": "https://abc389.contest.atcoder.jp/tasks/abc389_g?lang=en",
          "statement": "Problem Statement: \n\nYou are given a positive even integer N and a prime number P.\n\nFor M = N-1, ..., \\frac{N(N-1)}{2}, solve the following problem.\n\nHow many undirected connected simple graphs with N vertices labeled from 1 to N and M edges satisfy this: the number of vertices whose shortest distance from vertex 1 is even is equal to the number of vertices whose shortest distance from vertex 1 is odd? Find this number modulo P.",
          "constraints": "Constraints: 2 \\leq N \\leq 30 \n 10^8 \\leq P \\leq 10^9 \n N is even. \n P is prime. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nP\n\nOutput: \n\nFor M = N-1, ..., \\frac{N(N-1)}{2}, output the answers in order, separated by spaces, on a single line.",
          "samples": [
            {
              "input": "4 998244353",
              "output": "12 9 3 0",
              "explanation": "With four vertices and three edges, there are 12 simple connected undirected graphs satisfying the condition.\n\nWith four vertices and four edges, there are 9 such graphs.\n\nWith four vertices and five edges, there are 3 such graphs.\n\nWith four vertices and six edges, there are 0 such graphs."
            },
            {
              "input": "6 924844033",
              "output": "810 2100 3060 3030 2230 1210 450 100 10 0 0",
              "explanation": null
            },
            {
              "input": "10 433416647",
              "output": "49218750 419111280 321937732 107111441 372416570 351559278 312484809 334285827 317777667 211471846 58741385 422156135 323887465 54923551 121645733 94354149 346849276 72744827 385773306 163421544 351691775 59915863 430096957 166653801 346330874 185052506 245426328 47501118 7422030 899640 79380 4536 126 0 0 0 0",
              "explanation": "Remember to find the number of such graphs modulo P."
            }
          ]
        }
      ]
    },
    {
      "id": "abc390",
      "url": "https://abc390.contest.atcoder.jp/?lang=en",
      "start_time": "2025-01-25T12:00:00",
      "problems": [
        {
          "id": "abc390_a",
          "problem_letter": "A",
          "url": "https://abc390.contest.atcoder.jp/tasks/abc390_a?lang=en",
          "statement": "Problem Statement: \n\nYou are given an integer sequence A=(A_1,A_2,A_3,A_4,A_5) obtained by permuting (1,2,3,4,5).\n\nDetermine whether A can be sorted in ascending order by performingexactly one operation of swapping two adjacent elements in A.",
          "constraints": "Constraints: A is an integer sequence of length 5 obtained by permuting (1,2,3,4,5).",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nA_1\nA_2\nA_3\nA_4\nA_5\n\nOutput: \n\nIf A can be sorted in ascending order by exactly one operation, printYes ; otherwise, printNo.",
          "samples": [
            {
              "input": "1 2 4 3 5",
              "output": "Yes",
              "explanation": "By swapping A_3 and A_4, A becomes (1,2,3,4,5), so it can be sorted in ascending order. Therefore, printYes."
            },
            {
              "input": "5 3 2 4 1",
              "output": "No",
              "explanation": "No matter what operation is performed, it is impossible to sort A in ascending order."
            },
            {
              "input": "1 2 3 4 5",
              "output": "No",
              "explanation": "You must perform exactly one operation."
            },
            {
              "input": "2 1 3 4 5",
              "output": "Yes",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc390_b",
          "problem_letter": "B",
          "url": "https://abc390.contest.atcoder.jp/tasks/abc390_b?lang=en",
          "statement": "Problem Statement: \n\nYou are given a length- N sequence A=(A_1,A_2,...,A_N) of positive integers.\n\nDetermine whether A is a geometric progression.",
          "constraints": "Constraints: 2 \\leq N \\leq 100 \n 1 \\leq A_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nIf A is a geometric progression, printYes ; otherwise, printNo.",
          "samples": [
            {
              "input": "5\n3 6 12 24 48",
              "output": "Yes",
              "explanation": "A=(3,6,12,24,48). A is a geometric progression with first term 3, common ratio 2, and five terms.Therefore, printYes."
            },
            {
              "input": "3\n1 2 3",
              "output": "No",
              "explanation": "A=(1,2,3).Since A_1 : A_2 = 1 : 2 \\neq 2 : 3 = A_2 : A_3, A is not a geometric progression.Therefore, printNo."
            },
            {
              "input": "2\n10 8",
              "output": "Yes",
              "explanation": "A is a geometric progression with first term 10, common ratio 0.8, and two terms.Therefore, printYes."
            }
          ]
        },
        {
          "id": "abc390_c",
          "problem_letter": "C",
          "url": "https://abc390.contest.atcoder.jp/tasks/abc390_c?lang=en",
          "statement": "Problem Statement: If the j -th character of S_i is#, cell (i,j) is painted black. \n If the j -th character of S_i is., cell (i,j) is painted white. \n If the j -th character of S_i is?, cell (i,j) is not yet painted.",
          "constraints": "Constraints: 1 \\leq H, W \\leq 1000 \n H and W are integers. \n Each S_i is a string of length W consisting of#,.,?. \n There is at least one cell that is already painted black.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nH\nW\nS_1\nS_2\n\\vdots\nS_H\n\nOutput: \n\nIf it is possible to paint all the not-yet-painted cells so that the black cells form a rectangle, printYes ; otherwise, printNo.",
          "samples": [
            {
              "input": "3 5\n.#?#.\n.?#?.\n?...?",
              "output": "Yes",
              "explanation": "The grid is in the following state.?indicates a cell that are not yet painted.\n\n\n\nBy painting cells (1,3), (2,2), and (2,4) black and cells (3,1) and (3,5) white, the black cells can form a rectangle as follows:\n\n\n\nTherefore, printYes."
            },
            {
              "input": "3 3\n?##\n#.#\n##?",
              "output": "No",
              "explanation": "To form a rectangle with all black cells, you would need to paint cell (2,2) black, but it is already painted white.Therefore, it is impossible to make all black cells form a rectangle, so printNo."
            },
            {
              "input": "1 1\n#",
              "output": "Yes",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc390_d",
          "problem_letter": "D",
          "url": "https://abc390.contest.atcoder.jp/tasks/abc390_d?lang=en",
          "statement": "Problem Statement: B_1 \\oplus B_2 \\oplus \\cdots \\oplus B_N, where B_i is the final number of stones in bag i.Here, \\oplus denotes bitwise XOR.",
          "constraints": "Constraints: 2 \\leq N \\leq 12 \n 1 \\leq A_i \\leq 10^{17} \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the number of different possible values for B_1 \\oplus B_2 \\oplus ... \\oplus B_N after repeating the operation.",
          "samples": [
            {
              "input": "3\n2 5 7",
              "output": "3",
              "explanation": "For example, if Takahashi chooses bags 1 and 3 for the operation, then the numbers of stones in bags 1, 2, 3 become 0, 5, 9.If he stops at this point, the XOR is0 \\oplus 5 \\oplus 9 = 12.\n\nThe other possible XOR values after repeating the operation are 0 and 14.Therefore, the possible values are 0, 12, 14 ; there are three values, so the output is 3."
            },
            {
              "input": "2\n100000000000000000 100000000000000000",
              "output": "2",
              "explanation": null
            },
            {
              "input": "6\n71 74 45 34 31 60",
              "output": "84",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc390_e",
          "problem_letter": "E",
          "url": "https://abc390.contest.atcoder.jp/tasks/abc390_e?lang=en",
          "statement": "Problem Statement: \n\nThere are N foods, each containing exactly one of vitamins 1, 2, and 3. Specifically, eating the i -th food gives you A_i units of vitamin V_i, and C_i calories.\n\nTakahashi can choose any subset of these N foods as long as the total calorie consumption does not exceed X. Find the maximum possible value of this: the minimum intake among vitamins 1, 2, and 3.",
          "constraints": "Constraints: 1 \\leq N \\leq 5000 \n 1 \\leq X \\leq 5000 \n 1 \\leq V_i \\leq 3 \n 1 \\leq A_i \\leq 2 \\times 10^5 \n 1 \\leq C_i \\leq X \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nX\nV_1\nA_1\nC_1\nV_2\nA_2\nC_2\n\\vdots\nV_N\nA_N\nC_N\n\nOutput: \n\nPrint the maximum possible value of \"the minimum intake among vitamins 1, 2, and 3 \" when the total calories consumed is at most X.",
          "samples": [
            {
              "input": "5 25\n1 8 5\n2 3 5\n2 7 10\n3 2 5\n3 3 10",
              "output": "3",
              "explanation": "Each food provides the following if eaten:\n\nEating the 1st, 2nd, 4th, and 5th foods gives 8 units of vitamin 1, 3 units of vitamin 2, 5 units of vitamin 3, and 25 calories.In this case, the minimum among the three vitamin intakes is 3 (vitamin 2).\n\nIt is impossible to get 4 or more units of each vitamin without exceeding 25 calories, so the answer is 3.\n\n1st food: 8 units of vitamin 1, and 5 calories \n 2nd food: 3 units of vitamin 2, and 5 calories \n 3rd food: 7 units of vitamin 2, and 10 calories \n 4th food: 2 units of vitamin 3, and 5 calories \n 5th food: 3 units of vitamin 3, and 10 calories"
            },
            {
              "input": "2 5000\n1 200000 1\n2 200000 1",
              "output": "0",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc390_f",
          "problem_letter": "F",
          "url": "https://abc390.contest.atcoder.jp/tasks/abc390_f?lang=en",
          "statement": "Problem Statement: Start with an empty blackboard. Write the R-L+1 integers A_L, A_{L+1}, \\ldots, A_R on the blackboard in order. \n Repeat the following operation until all integers on the blackboard are erased:Choose integersl, rwithl \\le rsuch that every integer fromlthroughrappears at least once on the blackboard. Then, erase all integers fromlthroughrthat are on the blackboard. \n Choose integers l, r with l \\le r such that every integer from l through r appears at least once on the blackboard. Then, erase all integers from l through r that are on the blackboard. \n Let f(L,R) be the minimum number of such operations needed to erase all the integers from the blackboard.",
          "constraints": "Constraints: 1 \\le N \\le 3 \\times 10^5 \n 1 \\le A_i \\le N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "4\n1 3 1 4",
              "output": "16",
              "explanation": "For example, in the case of (L,R)=(1,4) :\n\nSimilarly, you can find f(2,4)=2, f(1,1)=1, etc.\n\n\\displaystyle \\sum_{L=1}^N \\sum_{R=L}^N f(L,R) = 16, so print 16.\n\nThe blackboard has 1,3,1,4. \n Choose (l,r)=(1,1) and erase all occurrences of 1. The blackboard now has 3,4. \n Choose (l,r)=(3,4) and erase all occurrences of 3 and 4. The blackboard becomes empty. \n It cannot be done in fewer than two operations, so f(1,4) = 2."
            },
            {
              "input": "5\n3 1 4 2 4",
              "output": "23",
              "explanation": null
            },
            {
              "input": "10\n5 1 10 9 2 5 6 9 1 6",
              "output": "129",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc390_g",
          "problem_letter": "G",
          "url": "https://abc390.contest.atcoder.jp/tasks/abc390_g?lang=en",
          "statement": "Problem Statement: Let S be an empty string. \n For i=1,2,\\ldots,N in this order:LetTbe the decimal representation ofA_iwithout leading zeros.AppendTto the end ofS. \n Let T be the decimal representation of A_i without leading zeros. \n Append T to the end of S. \n Interpret S as a decimal integer, and let that be f(A).",
          "constraints": "Constraints: 1 \\le N \\le 2 \\times 10^5 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\n\nOutput: \n\nPrint the sum, modulo 998244353, of f(P) over all permutations P of (1,2,...,N).",
          "samples": [
            {
              "input": "3",
              "output": "1332",
              "explanation": "The six permutations of (1,2,3) are (1,2,3), (1,3,2), (2,1,3), (2,3,1), (3,1,2), (3,2,1). Their f(P) values are 123,132,213,231,312,321. Therefore, print 123+132+213+231+312+321 = 1332."
            },
            {
              "input": "390",
              "output": "727611652",
              "explanation": "Print the sum modulo 998244353."
            },
            {
              "input": "79223",
              "output": "184895744",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc391",
      "url": "https://abc391.contest.atcoder.jp/?lang=en",
      "start_time": "2025-02-01T12:00:00",
      "problems": [
        {
          "id": "abc391_a",
          "problem_letter": "A",
          "url": "https://abc391.contest.atcoder.jp/tasks/abc391_a?lang=en",
          "statement": "Problem Statement: North:N \n East:E \n West:W \n South:S \n Northeast:NE \n Northwest:NW \n Southeast:SE \n Southwest:SW",
          "constraints": "Constraints: D is one ofN,E,W,S,NE,NW,SE,SW.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nD\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "N",
              "output": "S",
              "explanation": "PrintS, which represents south, the direction opposite to north."
            },
            {
              "input": "SE",
              "output": "NW",
              "explanation": "PrintNW, which represents northwest, the direction opposite to southeast."
            }
          ]
        },
        {
          "id": "abc391_b",
          "problem_letter": "B",
          "url": "https://abc391.contest.atcoder.jp/tasks/abc391_b?lang=en",
          "statement": "Problem Statement: S_{a+i-1,b+j-1} = T_{i,j} for every i,j ( 1\\leq i,j \\leq M).",
          "constraints": "Constraints: 1 \\leq M \\leq N \\leq 50 \n N and M are integers. \n Each of S_{i,j} and T_{i,j} is.or#. \n There is exactly one pair (a,b) satisfying the condition.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nS_{1,1}S_{1,2}... S_{1,N}\nS_{2,1}S_{2,2}... S_{2,N}\n\\vdots\nS_{N,1}S_{N,2}... S_{N,N}\nT_{1,1}T_{1,2}... T_{1,M}\nT_{2,1}T_{2,2}... T_{2,M}\n\\vdots\nT_{M,1}T_{M,2}... T_{M,M}\n\nOutput: \n\nPrint a and b in this order, separated by a space on one line.",
          "samples": [
            {
              "input": "3 2\n#.#\n..#\n##.\n.#\n#.",
              "output": "2 2",
              "explanation": "The 2 \\times 2 subgrid of S from the 2nd to the 3rd row and from the 2nd to the 3rd column matches T."
            },
            {
              "input": "2 1\n#.\n##\n.",
              "output": "1 2",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc391_c",
          "problem_letter": "C",
          "url": "https://abc391.contest.atcoder.jp/tasks/abc391_c?lang=en",
          "statement": "Problem Statement: 1 P H: Move pigeon P to nest H. \n 2: Output the number of nests that contain more than one pigeon.",
          "constraints": "Constraints: 2 \\leq N \\leq 10^6 \n 1 \\leq Q \\leq 3\\times 10^5 \n 1 \\leq P, H \\leq N \n For a query of the first type, pigeon P is not in nest H before the move. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nQ\n\\mathrm{query}_1\n\\mathrm{query}_2\n\\vdots\n\\mathrm{query}_Q\n\nEach query is given in one of the following two formats:\n\n1\nP\nH\n\n2\n\nOutput: \n\nPrint the answer to each query on a new line according to the instructions in the problem statement.",
          "samples": [
            {
              "input": "4 7\n2\n1 1 2\n2\n1 3 2\n2\n1 3 4\n2",
              "output": "0\n1\n1\n2",
              "explanation": "Initially, pigeons 1,2,3,4 are in nests 1,2,3,4, respectively.\n\nFor the 1st query, the counts of pigeons in nests 1,2,3,4 are 1,1,1,1. No nests contain multiple pigeons, output 0. \n For the 2nd query, move pigeon 1 to nest 2. \n For the 3rd query, the counts become 0,2,1,1, respectively. One nest (nest 2) contains multiple pigeons, so output 1. \n For the 4th query, move pigeon 3 to nest 2. \n For the 5th query, the counts become 0,3,0,1, respectively. One nest (nest 2) contains multiple pigeons, so output 1. \n For the 6th query, move pigeon 3 to nest 4. \n For the 7th query, the counts become 0,2,0,2, respectively. Two nests (nests 2 and 4) contain multiple pigeons, so output 2."
            },
            {
              "input": "5 10\n2\n1 4 3\n1 4 5\n2\n1 3 1\n2\n1 2 3\n1 2 5\n1 1 3\n2",
              "output": "0\n1\n2\n1",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc391_d",
          "problem_letter": "D",
          "url": "https://abc391.contest.atcoder.jp/tasks/abc391_d?lang=en",
          "statement": "Problem Statement: If the entire bottom row is filled with blocks, then all blocks in the bottom row are removed. \n For each remaining block, in order from bottom to top, perform the following:If the block is in the bottom row, or if there is a block in the cell immediately below it, do nothing.Otherwise, move the block one cell downward. \n If the block is in the bottom row, or if there is a block in the cell immediately below it, do nothing. \n Otherwise, move the block one cell downward.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq W \\leq N \n 1 \\leq X_i \\leq W \n 1 \\leq Y_i \\leq 10^9 \n (X_i,Y_i) \\neq (X_j,Y_j) if i \\neq j. \n 1 \\leq Q \\leq 2 \\times 10^5 \n 1 \\leq T_j \\leq 10^9 \n 1 \\leq A_j \\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nW\nX_1\nY_1\nX_2\nY_2\n\\vdots\nX_N\nY_N\nQ\nT_1\nA_1\nT_2\nA_2\n\\vdots\nT_Q\nA_Q\n\nOutput: \n\nPrint Q lines. The i -th line should containYes if block A_i exists at time T_i+0.5, andNo otherwise.",
          "samples": [
            {
              "input": "5 3\n1 1\n1 2\n2 2\n3 2\n2 3\n6\n1 1\n1 2\n2 3\n2 5\n3 4\n3 5",
              "output": "Yes\nYes\nNo\nYes\nNo\nYes",
              "explanation": "The positions of the blocks change as follows: (\"時刻\" means \"time.\")\n\n\n\nQuery 1 : At time 1.5, block 1 exists, so the answer isYes. \n Query 2 : At time 1.5, block 2 exists, so the answer isYes. \n Query 3 : Block 3 disappears at time 2, so it does not exist at time 2.5, and the answer isNo."
            },
            {
              "input": "3 2\n1 1\n2 1\n1 2\n4\n1 1\n1 2\n1 3\n2 3",
              "output": "No\nNo\nYes\nYes",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc391_e",
          "problem_letter": "E",
          "url": "https://abc391.contest.atcoder.jp/tasks/abc391_e?lang=en",
          "statement": "Problem Statement: Partition the elements of B into groups of 3 and take the majority value from each group. That is, for i=1,2,\\dots,3^{n-1}, let C_i be the value that appears most frequently among B_{3i-2}, B_{3i-1}, and B_{3i}.",
          "constraints": "Constraints: N is an integer with 1 \\leq N \\leq 13. \n A is a string of length 3^N consisting of 0 and 1.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1 A_2 ... A_{3^N}\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "2\n010011101",
              "output": "1",
              "explanation": "For example, with A=010011101, after applying the operation twice, we obtain:\n\nTo change the final value from 1 to 0, one way is to change the 5th character of A from 1 to 0, yielding A=010001101. After the change, the operations yield:\n\nThus, the minimum number of changes required is 1.\n\nFirst operation: The majority of 010 is 0, of 011 is 1, and of 101 is 1, resulting in 011. \n Second operation: The majority of 011 is 1, yielding 1.\n\nFirst operation: The majority of 010 is 0, of 001 is 0, and of 101 is 1, resulting in 001. \n Second operation: The majority of 001 is 0, yielding 0."
            },
            {
              "input": "1\n000",
              "output": "2",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc391_f",
          "problem_letter": "F",
          "url": "https://abc391.contest.atcoder.jp/tasks/abc391_f?lang=en",
          "statement": "Problem Statement: \n\nYou are given three integer sequences of length N, namely A=(A_1,A_2,...,A_N), B=(B_1,B_2,...,B_N), and C=(C_1,C_2,...,C_N), and an integer K.\n\nFor each of the N^3 choices of integers i,j,k ( 1\\leq i,j,k\\leq N), compute the value A_iB_j + B_jC_k + C_kA_i. Among all these values, find the K -th largest value.",
          "constraints": "Constraints: 1\\leq N \\leq 2\\times 10^5 \n 1\\leq K \\leq \\min(N^3,5\\times 10^5) \n 1\\leq A_i,B_i,C_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nA_1\nA_2\n...\nA_N\nB_1\nB_2\n...\nB_N\nC_1\nC_2\n...\nC_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "2 5\n1 2\n3 4\n5 6",
              "output": "31",
              "explanation": "The N^3=8 values are computed as follows:\n\nSorting these values in descending order, we have (44,38,36,34,31,29,27,23), so the 5th largest value is 31.\n\nFor (i,j,k)=(1,1,1) : A_1B_1+B_1C_1+C_1A_1=1\\times 3+3\\times 5+5\\times 1=23 \n For (i,j,k)=(1,1,2) : A_1B_1+B_1C_2+C_2A_1=1\\times 3+3\\times 6+6\\times 1=27 \n For (i,j,k)=(1,2,1) : A_1B_2+B_2C_1+C_1A_1=1\\times 4+4\\times 5+5\\times 1=29 \n For (i,j,k)=(1,2,2) : A_1B_2+B_2C_2+C_2A_1=1\\times 4+4\\times 6+6\\times 1=34 \n For (i,j,k)=(2,1,1) : A_2B_1+B_1C_1+C_1A_2=2\\times 3+3\\times 5+5\\times 2=31 \n For (i,j,k)=(2,1,2) : A_2B_1+B_1C_2+C_2A_2=2\\times 3+3\\times 6+6\\times 2=36 \n For (i,j,k)=(2,2,1) : A_2B_2+B_2C_1+C_1A_2=2\\times 4+4\\times 5+5\\times 2=38 \n For (i,j,k)=(2,2,2) : A_2B_2+B_2C_2+C_2A_2=2\\times 4+4\\times 6+6\\times 2=44"
            },
            {
              "input": "3 10\n100 100 100\n100 100 100\n100 100 100",
              "output": "30000",
              "explanation": null
            },
            {
              "input": "5 54\n800516877 573289179 26509423 168629803 696409999\n656737335 915059758 201458890 931198638 185928366\n140174496 254538849 830992027 305186313 322164559",
              "output": "689589940713840351",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc391_g",
          "problem_letter": "G",
          "url": "https://abc391.contest.atcoder.jp/tasks/abc391_g?lang=en",
          "statement": "Problem Statement: There are 26^M lowercase English strings of length M. Among these, find the number, modulo 998244353, of strings whose longest common subsequence with S has length exactly k.",
          "constraints": "Constraints: 1\\leq N\\leq 10 \n 1\\leq M\\leq 100 \n N and M are integers. \n S is a lowercase English string of length N.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nS\n\nOutput: \n\nLet \\mathrm{ans}_i be the answer for k=i. Print the answers in the following format:\n\n\\mathrm{ans}_0\n\\mathrm{ans}_1\n...\n\\mathrm{ans}_N",
          "samples": [
            {
              "input": "2 2\nab",
              "output": "576 99 1",
              "explanation": "The answers for k=0,1,2 are as follows:\n\nFor k=0 : Among length 2 lowercase English strings, those with a longest common subsequence of length 0 withabinclude strings such ascd,re,zz, totaling 576. \n For k=1 : Among length 2 lowercase English strings, those with a longest common subsequence of length 1 withabinclude strings such asac,wa,ba, totaling 99. \n For k=2 : Among length 2 lowercase English strings, there is 1 string (ab) whose longest common subsequence withabhas length 2."
            },
            {
              "input": "3 4\naaa",
              "output": "390625 62500 3750 101",
              "explanation": null
            },
            {
              "input": "7 50\natcoder",
              "output": "309810541 226923474 392073062 146769908 221445233 435648037 862664208 238437587",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "abc392",
      "url": "https://abc392.contest.atcoder.jp/?lang=en",
      "start_time": "2025-02-08T12:00:00",
      "problems": [
        {
          "id": "abc392_a",
          "problem_letter": "A",
          "url": "https://abc392.contest.atcoder.jp/tasks/abc392_a?lang=en",
          "statement": "Problem Statement: \n\nYou are given a sequence of integers A = (A_1, A_2, A_3). Let B = (B_1, B_2, B_3) be any permutation of A. Determine whether it is possible that B_1 \\times B_2 = B_3.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le A_1, A_2, A_3 \\le 100",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nA_1\nA_2\nA_3\n\nOutput: \n\nIf it is possible that B_1 \\times B_2 = B_3, printYes ; otherwise, printNo.",
          "samples": [
            {
              "input": "3 15 5",
              "output": "Yes",
              "explanation": "Here, A=(3,15,5).\nBy rearranging it as B=(3,5,15), we can satisfy B_1 \\times B_2 = B_3."
            },
            {
              "input": "5 3 2",
              "output": "No",
              "explanation": "No permutation of B satisfies B_1 \\times B_2 = B_3."
            }
          ]
        },
        {
          "id": "abc392_b",
          "problem_letter": "B",
          "url": "https://abc392.contest.atcoder.jp/tasks/abc392_b?lang=en",
          "statement": "Problem Statement: \n\nYou are given a sequence of M integers A = (A_1, A_2, ..., A_M). Each element of A is an integer between 1 and N, inclusive, and all elements are distinct.\n\nList all integers between 1 and N that do not appear in A in ascending order.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le M \\le N \\le 1000 \n 1 \\le A_i \\le N \n The elements of A are distinct.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nA_1\nA_2\n...\nA_M\n\nOutput: \n\nLet (X_1, X_2, ..., X_C) be the sequence of all integers between 1 and N, inclusive, that do not appear in A, listed in ascending order.\nThe output should be in the following format:\n\nC\nX_1\nX_2\n...\nX_C",
          "samples": [
            {
              "input": "10 3\n3 9 2",
              "output": "7\n1 4 5 6 7 8 10",
              "explanation": "Here, A=(3,9,2).The integers between 1 and 10 that do not appear in A, listed in ascending order, are 1,4,5,6,7,8,10."
            },
            {
              "input": "6 6\n1 3 5 2 4 6",
              "output": "0",
              "explanation": "No integer between 1 and 6 is missing from A.In this case, print0on the first line and leave the second line empty."
            },
            {
              "input": "9 1\n9",
              "output": "8\n1 2 3 4 5 6 7 8",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc392_c",
          "problem_letter": "C",
          "url": "https://abc392.contest.atcoder.jp/tasks/abc392_c?lang=en",
          "statement": "Problem Statement: \n\nThere are N people numbered from 1 to N.\n\nPerson i is wearing a bib with the number Q_i and is staring at person P_i.\n\nFor each i = 1,2,...,N, find the number written on the bib of the person that the person wearing the bib with number i is staring at.",
          "constraints": "Constraints: 2 \\leq N \\leq 3\\times 10^5 \n 1 \\leq P_i \\leq N \n The values of P_i are distinct. \n 1 \\leq Q_i \\leq N \n The values of Q_i are distinct. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nP_1\nP_2\n...\nP_N\nQ_1\nQ_2\n...\nQ_N\n\nOutput: \n\nLet S_i be the number written on the bib of the person that the person wearing the bib with number i is staring at. Print S_1, S_2, ..., S_N in this order, separated by a single space.",
          "samples": [
            {
              "input": "4\n4 3 2 1\n2 3 1 4",
              "output": "3 4 1 2",
              "explanation": "Person 3 is wearing the bib with the number 1, and the person that person 3 is staring at, person 2, is wearing the bib with the number 3.\nThus, the answer for i = 1 is 3.\n\n"
            },
            {
              "input": "10\n2 6 4 3 7 8 9 10 1 5\n1 4 8 2 10 5 7 3 9 6",
              "output": "4 8 6 5 3 10 9 2 1 7",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc392_d",
          "problem_letter": "D",
          "url": "https://abc392.contest.atcoder.jp/tasks/abc392_d?lang=en",
          "statement": "Problem Statement: \n\nThere are N dice.\nThe i -th die has K_i faces, with the numbers A_{i,1}, A_{i,2}, ..., A_{i,K_i} written on them.\nWhen you roll this die, each face appears with probability \\frac{1}{K_i}.\n\nYou choose two dice from the N dice and roll them.\nDetermine the maximum probability that the two dice show the same number, when the dice are chosen optimally.",
          "constraints": "Constraints: 2 \\leq N \\leq 100 \n 1 \\leq K_i \n K_1 + K_2 + \\dots + K_N \\leq 10^5 \n 1 \\leq A_{i,j} \\leq 10^5 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK_1\nA_{1,1}\nA_{1,2}\n...\nA_{1,K_1}\n\\vdots\nK_N\nA_{N,1}\nA_{N,2}\n...\nA_{N,K_N}\n\nOutput: \n\nPrint the answer.\nYour answer is considered correct if the absolute or relative error from the true solution does not exceed 10^{-8}.",
          "samples": [
            {
              "input": "3\n3 1 2 3\n4 1 2 2 1\n6 1 2 3 4 5 6",
              "output": "0.333333333333333",
              "explanation": "Therefore, the maximum probability is \\frac{1}{3} = 0.3333333333....\n\nWhen choosing the 1st and 2nd dice, the probability that the outcomes are the same is \\frac{1}{3}. \n When choosing the 1st and 3rd dice, the probability is \\frac{1}{6}. \n When choosing the 2nd and 3rd dice, the probability is \\frac{1}{6}."
            },
            {
              "input": "3\n5 1 1 1 1 1\n4 2 2 2 2\n3 1 1 2",
              "output": "0.666666666666667",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc392_e",
          "problem_letter": "E",
          "url": "https://abc392.contest.atcoder.jp/tasks/abc392_e?lang=en",
          "statement": "Problem Statement: Operation: Choose one cable and reconnect one of its ends to a different server.",
          "constraints": "Constraints: 2 \\leq N \\leq 2\\times 10^5 \n N-1 \\leq M \\leq 2\\times 10^5 \n 1 \\leq A_i, B_i \\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nA_1\nB_1\nA_2\nB_2\n\\vdots\nA_M\nB_M\n\nOutput: The first line should contain K. \n The (i+1) -th line should contain three space-separated integers: the number of the cable chosen in the i -th operation, the server number that was originally connected at that end, and the server number to which it is connected after the operation, in this order.",
          "samples": [
            {
              "input": "4 5\n1 1\n1 2\n2 1\n3 4\n4 4",
              "output": "1\n1 1 3",
              "explanation": "By reconnecting the end of cable 1 that is connected to server 1 to server 3, the servers can be connected via cables.\n\n\n\nOperations such as reconnecting the end of cable 5 that is connected to server 4 to server 1, or reconnecting the end of cable 2 that is connected to server 2 to server 3, will also result in all servers being connected and are considered correct."
            },
            {
              "input": "4 3\n3 4\n4 1\n1 2",
              "output": "0",
              "explanation": "No operation may be necessary."
            },
            {
              "input": "5 4\n3 3\n3 3\n3 3\n3 3",
              "output": "4\n1 3 5\n2 3 4\n3 3 2\n4 3 1",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc392_f",
          "problem_letter": "F",
          "url": "https://abc392.contest.atcoder.jp/tasks/abc392_f?lang=en",
          "statement": "Problem Statement: Insert the number i into A so that it becomes the P_i -th element from the beginning.More precisely, replaceAwith the concatenation of the firstP_i-1elements ofA, theni, then the remaining elements ofAstarting from theP_i-th element, in this order. \n More precisely, replace A with the concatenation of the first P_i-1 elements of A, then i, then the remaining elements of A starting from the P_i -th element, in this order.",
          "constraints": "Constraints: 1 \\leq N \\leq 5\\times 10^5 \n 1 \\leq P_i \\leq i \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nP_1\nP_2\n...\nP_N\n\nOutput: \n\nLet the final array be A = (A_1, A_2, ..., A_N).\nPrint A_1, A_2, ..., A_N in this order, separated by spaces.",
          "samples": [
            {
              "input": "4\n1 1 2 1",
              "output": "4 2 3 1",
              "explanation": "The operations are performed as follows:\n\nInsert the number 1 so that it becomes the 1st element of A. Now, A = (1). \n Insert the number 2 so that it becomes the 1st element of A. Now, A = (2, 1). \n Insert the number 3 so that it becomes the 2nd element of A. Now, A = (2, 3, 1). \n Insert the number 4 so that it becomes the 1st element of A. Now, A = (4, 2, 3, 1)."
            },
            {
              "input": "5\n1 2 3 4 5",
              "output": "1 2 3 4 5",
              "explanation": null
            }
          ]
        },
        {
          "id": "abc392_g",
          "problem_letter": "G",
          "url": "https://abc392.contest.atcoder.jp/tasks/abc392_g?lang=en",
          "statement": "Problem Statement: \n\nFor integers A, B, C ( A < B < C), if they satisfy B-A = C-B, then (A, B, C) is called afine triplet. You are given a set of N distinct positive integers S = \\{ S_1, S_2, ..., S_N \\}. Find the number of fine triplets (A, B, C) with A, B, C \\in S.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le N \\le 10^6 \n 1 \\le S_i \\le 10^6 \n The elements of S are distinct.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS_1\nS_2\n...\nS_N\n\nOutput: \n\nPrint the number of fine triplets as an integer.",
          "samples": [
            {
              "input": "5\n8 3 1 5 2",
              "output": "3",
              "explanation": "Here, S = \\{8,3,1,5,2\\}.\nThe fine triplets to be counted are the following three:\n\n(1,2,3) \n (1,3,5) \n (2,5,8)"
            },
            {
              "input": "7\n300000 100000 499998 499999 200000 400000 500000",
              "output": "5",
              "explanation": null
            },
            {
              "input": "10\n13 1 16 15 12 4 7 10 2 19",
              "output": "10",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "agc067",
      "url": "https://agc067.contest.atcoder.jp/?lang=en",
      "start_time": "2024-08-18T12:00:00",
      "problems": [
        {
          "id": "agc067_a",
          "problem_letter": "A",
          "url": "https://agc067.contest.atcoder.jp/tasks/agc067_a?lang=en",
          "statement": "Problem Statement: For every subset X of the vertex set \\{1,2,\\cdots,N\\}, there exists a subset Y of X such that |Y|\\ge \\frac{|X|}{2} and Y forms a clique.",
          "constraints": "Constraints: 1\\le T \\le 10^3 \n 1\\le N \\le 10^5 \n 0 \\le M \\le 10^6 \n 1 \\le A_i,B_i \\le N \n The given graph doesn't contain self-loops or multiple edges. \n The sum of N across the test cases in a single input is at most 10^5. \n The sum of M across the test cases in a single input is at most 10^6. \n All input values are integers.",
          "io_format": "Input: \n\nInput is given from Standard Input in the following format:\n\nT\ncase_1\ncase_2\n\\vdots\ncase_T\n\nEach test case is given in the following format:\n\nN\nM\nA_1\nB_1\nA_2\nB_2\n\\vdots\nA_M\nB_M\n\nOutput: \n\nFor each test case, if G satisfies the condition, printYes, and otherwise printNo. In printingYes orNo, you can output each letter in any case (upper or lower).",
          "samples": [
            {
              "input": "4\n3 3\n1 2\n1 3\n2 3\n3 2\n1 2\n1 3\n3 1\n1 2\n3 0",
              "output": "Yes\nYes\nYes\nNo",
              "explanation": "For the 1 -st test case, G satisfies the condition. \nIn this case, every subset X is a clique, so we can just let Y=X.\n\nFor the 2 -nd test case, G satisfies the condition. \nFor example, for X=\\{2,3\\}, we can let Y=\\{2\\}.\n\nFor the 4 -th test case, G doesn't satisfy the condition. \nIf we let X=\\{1,2,3\\}, no subset Y of X satisfies the condition."
            }
          ]
        },
        {
          "id": "agc067_b",
          "problem_letter": "B",
          "url": "https://agc067.contest.atcoder.jp/tasks/agc067_b?lang=en",
          "statement": "Problem Statement: Change a_{L_{p_i}}, \\cdots, a_{R_{p_i}} to w_i.",
          "constraints": "Constraints: 1\\le N\\le 100 \n 1\\le M\\le\\dfrac{N(N+1)}{2} \n 1\\le C<998244353 \n 1 \\le L_i \\le R_i \\le N \n (L_i,R_i) \\neq (L_j,R_j) ( i \\neq j) \n Every position in a is covered by at least one interval. \n All input values are integers.",
          "io_format": "Input: \n\nInput is given from Standard Input in the following format:\n\nN\nM\nC\nL_1\nR_1\nL_2\nR_2\n\\vdots\nL_M\nR_M\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "5 5 2\n1 3\n2 2\n3 3\n1 5\n3 5",
              "output": "16",
              "explanation": "There are 16 sequences that can be achieved.\nFor example, you can achieve a=(2,1,1,1,1) in the following manner:\n\nChoose p=(4,1,2,3,5) and w=(1,2,1,2,1) \n The 1 -st operation changes a into (1,1,1,1,1) \n The 2 -nd operation changes a into (2,2,2,1,1) \n The 3 -rd operation changes a into (2,1,2,1,1) \n The 4 -th operation changes a into (2,1,2,1,1) \n The 5 -th operation changes a into (2,1,1,1,1)"
            },
            {
              "input": "20 30 20\n1 14\n1 7\n1 16\n3 13\n1 17\n4 8\n2 11\n4 12\n9 14\n3 15\n11 19\n1 13\n4 15\n8 19\n3 17\n15 18\n10 18\n1 18\n17 19\n16 20\n1 8\n8 15\n13 17\n1 19\n13 19\n1 20\n6 13\n10 12\n11 20\n17 18",
              "output": "258066445",
              "explanation": null
            }
          ]
        },
        {
          "id": "agc067_c",
          "problem_letter": "C",
          "url": "https://agc067.contest.atcoder.jp/tasks/agc067_c?lang=en",
          "statement": "Problem Statement: There exists a finite constantCsuch thata_n \\le C \\cdot nfor all1 \\le n; \n For all pairs of positive integers(n,m),a_n \\mid a_mif and only ifn\\mid m. Here,x \\mid ymeansxdividesy.",
          "constraints": "Constraints: 1\\le T \\le 5000 \n 1 \\leq N \\leq 5000 \n 1 \\leq A_i \\leq 10^{18} \n The sum of N across the test cases in a single input is at most 5000. \n All input values are integers.",
          "io_format": "Input: \n\nInput is given from Standard Input in the following format:\n\nT\ncase_1\ncase_2\n\\vdots\ncase_T\n\nEach test case is given in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nFor each test case, if there exists a good infinite sequence starting with (A_1,A_2,...,A_N), printYes, and otherwise printNo.\nIn printingYes orNo, you can output each letter in any case (upper or lower).",
          "samples": [
            {
              "input": "5\n5\n1 2 3 4 5\n5\n1 4 9 16 25\n5\n1 4 6 8 10\n5\n1 2 4 4 5\n5\n1 2 3 5 4",
              "output": "Yes\nYes\nYes\nNo\nNo",
              "explanation": "For the 1 -st test case, we can let a_n=n and that satisfies the condition."
            }
          ]
        },
        {
          "id": "agc067_d",
          "problem_letter": "D",
          "url": "https://agc067.contest.atcoder.jp/tasks/agc067_d?lang=en",
          "statement": "Problem Statement: 1\\le L_i\\le R_i\\le N holds for all 1\\le i\\le N. \n There exists auniquepermutation x=(x_1,x_2,\\cdots,x_N) of (1,2,\\cdots,N) such that L_i\\le x_i\\le R_i holds for all 1\\le i\\le N.",
          "constraints": "Constraints: 2 \\leq N \\leq 5000 \n 10^9<P<1.01\\times 10^9 \n P is prime. \n All input values are integers.",
          "io_format": "Input: \n\nInput is given from Standard Input in the following format:\n\nN\nP\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "2 1005488041",
              "output": "6",
              "explanation": "The following 6 sequences are good:\n\n([1,1],[2,2]) \n ([1,2],[2,2]) \n ([1,1],[1,2]) \n ([2,2],[1,1]) \n ([2,2],[1,2]) \n ([1,2],[1,1])"
            },
            {
              "input": "5 1005488041",
              "output": "102960",
              "explanation": null
            },
            {
              "input": "100 1005488041",
              "output": "47599495",
              "explanation": null
            },
            {
              "input": "1000 1005488041",
              "output": "632708165",
              "explanation": null
            }
          ]
        },
        {
          "id": "agc067_e",
          "problem_letter": "E",
          "url": "https://agc067.contest.atcoder.jp/tasks/agc067_e?lang=en",
          "statement": "Problem Statement: There are no self-loops in G. Note that multiple edges are allowed. \n For all edges (u,v) in G, if we delete (u,v) from G, G remains connected. In other words, G is edge-biconnected. \n For all edges (u,v) in G, if we delete (u,v) from G, G is no longer edge-biconnected.",
          "constraints": "Constraints: 2 \\le N \\le 50 \n 10^9<P<1.01\\times 10^9 \n P is prime. \n All input values are integers.",
          "io_format": "Input: \n\nInput is given from Standard Input in the following format:\n\nN\nP\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "2 1005976817",
              "output": "1",
              "explanation": null
            },
            {
              "input": "5 1000837403",
              "output": "372",
              "explanation": null
            },
            {
              "input": "10 1001160547",
              "output": "789846604",
              "explanation": null
            },
            {
              "input": "20 1006779551",
              "output": "888612770",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "agc068",
      "url": "https://agc068.contest.atcoder.jp/?lang=en",
      "start_time": "2024-09-29T12:00:00",
      "problems": [
        {
          "id": "agc068_a",
          "problem_letter": "A",
          "url": "https://agc068.contest.atcoder.jp/tasks/agc068_a?lang=en",
          "statement": "Problem Statement: For every pair of persons among the N chosen people, find the minimum distance one person has to move along the circumference to reach the other person's position.\nThe maximum value among these distances is the cost.",
          "constraints": "Constraints: 2 \\leq N \\leq L \\leq 10^6 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nL\nN\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "4 2",
              "output": "8",
              "explanation": "The choices of N people and their corresponding costs are as follows:\n\nThe sum of these costs, 8, is the answer.\n\n(0,1) : cost 1 \n (0,2) : cost 2 \n (0,3) : cost 1 \n (1,2) : cost 1 \n (1,3) : cost 2 \n (2,3) : cost 1"
            },
            {
              "input": "5 5",
              "output": "2",
              "explanation": "We can only choose all of them.\nIn this case, the cost is 2."
            },
            {
              "input": "13 5",
              "output": "7618",
              "explanation": null
            },
            {
              "input": "1000000 100000",
              "output": "664396470",
              "explanation": null
            }
          ]
        },
        {
          "id": "agc068_b",
          "problem_letter": "B",
          "url": "https://agc068.contest.atcoder.jp/tasks/agc068_b?lang=en",
          "statement": "Problem Statement: S and T contain the same number of0s. \n S and T contain the same number of1s. \n Let L be the length of S. Create a graph g with vertices 1, 2, \\cdots, L. \n Let n be the number of0s in S. Let the indices of0s in S be 1 \\leq a_1 < a_2 < \\cdots < a_n \\leq L. Let the indices of0s in T be 1 \\leq b_1 < b_2 < \\cdots < b_n \\leq L. For each 1 \\leq i \\leq n, add an edge between vertices a_i and b_i to g. \n Let m be the number of1s in S. Let the indices of1s in S be 1 \\leq c_1 < c_2 < \\cdots < c_m \\leq L. Let the indices of1s in T be 1 \\leq d_1 < d_2 < \\cdots < d_m \\leq L. For each 1 \\leq i \\leq m, add an edge between vertices c_i and d_i to g. \n The graph g obtained through the above steps is G(S, T). \n Let L be the length of S. It satisfies N \\leq L \\leq 10^5. \n For each pair 1 \\leq i, j \\leq N, vertices i and j belong to the same connected component in G(S, T) if and only if A_i = A_j.",
          "constraints": "Constraints: 1 \\leq N \\leq 100 \n 1 \\leq A_i \\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint a solution in the following format:\n\nL\nS\nT\n\nHere, L is the length of S and T.\nIf multiple solutions exist, any of them will be accepted.",
          "samples": [
            {
              "input": "3\n1 2 1",
              "output": "4\n0011\n1100",
              "explanation": "For the S and T in the sample output, we obtain G(S, T) as follows:\n\nG(S, T) has a connected component with vertices (1, 3) and another with vertices (2, 4).\nThis satisfies all the conditions, so this (S, T) is a valid output.\n\nPrepare a graph g with 4 vertices. \n The indices of0s in S are (1, 2), and the indices of0s in T are (3, 4). Add edges (1, 3) and (2, 4) to g. \n The indices of1s in S are (3, 4), and the indices of1s in T are (1, 2). Add edges (3, 1) and (4, 2) to g. \n Let G(S, T) = g."
            },
            {
              "input": "5\n1 2 3 4 5",
              "output": "5\n01010\n01010",
              "explanation": null
            },
            {
              "input": "6\n1 1 1 1 1 1",
              "output": "6\n011111\n111110",
              "explanation": null
            },
            {
              "input": "10\n1 2 3 2 4 3 4 4 5 6",
              "output": "21\n000101010111100011011\n011010000010101111110",
              "explanation": null
            }
          ]
        },
        {
          "id": "agc068_c",
          "problem_letter": "C",
          "url": "https://agc068.contest.atcoder.jp/tasks/agc068_c?lang=en",
          "statement": "Problem Statement: Put each ball into any box he likes. Multiple balls can be placed in the same box, and there can be boxes without balls. \n For i = 1, 2, \\cdots, N in this order, perform the following operations.If boxicontains no balls, do nothing.If boxicontains balls, take all of them out and arrange them in a linein any order he likes. Letkbe the number of balls taken out, and(x_1, x_2, \\cdots, x_k)be the ball numbers in the line. For each1 \\leq j \\leq k, put ballx_jinto boxx_{j+1}. Here,x_{k+1}meansx_1. All these operations of putting balls into boxes happen simultaneously. \n If box i contains no balls, do nothing. \n If box i contains balls, take all of them out and arrange them in a linein any order he likes. Let k be the number of balls taken out, and (x_1, x_2, \\cdots, x_k) be the ball numbers in the line. For each 1 \\leq j \\leq k, put ball x_j into box x_{j+1}. Here, x_{k+1} means x_1. All these operations of putting balls into boxes happen simultaneously.",
          "constraints": "Constraints: 1 \\leq T \\leq 250000 \n 1 \\leq N \\leq 250000 \n 1 \\leq A_i \\leq N \n The sum of N over all test cases in each input is at most 250000. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nT\ncase_1\ncase_2\n\\vdots\ncase_T\n\nEach test case is given in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nFor each test case, printYes if the state Snuke reported is a possible result of the procedure, andNo otherwise.",
          "samples": [
            {
              "input": "5\n3\n1 1 1\n3\n2 2 2\n5\n1 2 3 4 5\n10\n8 3 8 10 1 5 3 1 6 4\n10\n1 5 1 2 4 8 8 6 7 3",
              "output": "Yes\nNo\nYes\nNo\nYes",
              "explanation": "Consider the first test case.\nThe following steps yield the state Snuke reported, so the answer isYes.\n\nPut balls 1, 2, 3 into boxes 1, 1, 2, respectively. \n Take out the balls from box 1 and arrange them as (2, 1).Put ball2into box1.Put ball1into box2. \n Put ball 2 into box 1. \n Put ball 1 into box 2. \n Take out the balls from box 2 and arrange them as (1, 3).Put ball1into box3.Put ball3into box1. \n Put ball 1 into box 3. \n Put ball 3 into box 1. \n Take out the balls from box 3 and arrange them as (1).Put ball1into box1. \n Put ball 1 into box 1. \n Now, balls 1, 2, 3 are all in box 1.\n\nPut ball 2 into box 1. \n Put ball 1 into box 2.\n\nPut ball 1 into box 3. \n Put ball 3 into box 1.\n\nPut ball 1 into box 1."
            }
          ]
        },
        {
          "id": "agc068_d",
          "problem_letter": "D",
          "url": "https://agc068.contest.atcoder.jp/tasks/agc068_d?lang=en",
          "statement": "Problem Statement: Consider the following operation on x.Choose two adjacent elementsuandvinxsuch thatuandvare in an ancestor-descendant relationship inT. It does not matter which is the ancestor and which is the descendant. Then, swapuandv. \n Choose two adjacent elements u and v in x such that u and v are in an ancestor-descendant relationship in T. It does not matter which is the ancestor and which is the descendant. Then, swap u and v. \n If it is possible to obtain a permutation that is lexicographically strictly smaller than the initial state by performing the above operation zero or more times, x isnota good permutation. If it is impossible to obtain a permutation lexicographically smaller than the initial state by any such operations, x is a good permutation. \n  |S| \\lt |T| and (S_1, S_2, \\ldots, S_{|S|}) = (T_1, T_2, \\ldots, T_{|S|}). \n There exists an integer 1 \\leq i \\leq \\min\\{ |S|, |T| \\} such that the following two statements hold.(S_1, S_2, \\ldots, S_{i-1}) = (T_1, T_2, \\ldots, T_{i-1}).S_iis smaller thanT_i(as a number). \n  (S_1, S_2, \\ldots, S_{i-1}) = (T_1, T_2, \\ldots, T_{i-1}). \n  S_i is smaller than T_i (as a number).",
          "constraints": "Constraints: 2 \\leq N \\leq 100 \n 1 \\leq B < 998244353 \n 1 \\leq P_i < i ( 2 \\leq i \\leq N) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nB\nP_2\nP_3\n...\nP_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3 100\n1 1",
              "output": "50502",
              "explanation": "For example, x = (3, 1, 2) is not a good permutation, because by swapping 3 and 1, which are in an ancestor-descendant relationship, we can obtain (1, 3, 2), a lexicographically smaller permutation.\n\nIn this sample, the good permutations are x = (1, 2, 3) and x = (1, 3, 2).\nThus, the answer is \\operatorname{hash}((1,2,3)) + \\operatorname{hash}((1,3,2)) = 30201 + 20301 = 50502."
            },
            {
              "input": "5 100\n1 2 3 4",
              "output": "504030201",
              "explanation": "In this sample, any two vertices are in an ancestor-descendant relationship.\nTherefore, the only good permutation is x = (1, 2, 3, 4, 5)."
            },
            {
              "input": "10 248730679\n1 2 1 2 5 6 1 8 1",
              "output": "856673861",
              "explanation": null
            },
            {
              "input": "20 480124393\n1 2 3 2 3 4 3 8 3 4 11 10 4 14 15 12 17 18 19",
              "output": "488941820",
              "explanation": null
            }
          ]
        },
        {
          "id": "agc068_e",
          "problem_letter": "E",
          "url": "https://agc068.contest.atcoder.jp/tasks/agc068_e?lang=en",
          "statement": "Problem Statement: Let y = (y_1, y_2, \\cdots, y_M) be the sequence obtained by sorting the elements of x to be non-decreasing. \n Define f(x) = \\prod_{1 \\leq i \\leq M} A_{x_i, y_i}. \n Find the sum of f(x) over all sequences x satisfying x_1 = k, modulo 998244353.",
          "constraints": "Constraints: 1 \\leq N \\leq 50 \n 1 \\leq M \\leq 50 \n 0 \\leq A_{i,j} < 998244353 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nA_{1,1}\nA_{1,2}\n...\nA_{1,N}\nA_{2,1}\nA_{2,2}\n...\nA_{2,N}\n\\vdots\nA_{N,1}\nA_{N,2}\n...\nA_{N,N}\n\nOutput: \n\nPrint the answer for each k = 1, 2, ..., N in this order.",
          "samples": [
            {
              "input": "2 2\n1 2\n3 4",
              "output": "5 22",
              "explanation": "All possible x and the corresponding values of f(x) are as follows.\n\nThus, the answer is 1 + 4 = 5 for k = 1, and 6 + 16 = 22 for k = 2.\n\nx = (1, 1) : y = (1, 1), f(x) = A_{1,1} \\times A_{1,1} = 1 \n x = (1, 2) : y = (1, 2), f(x) = A_{1,1} \\times A_{2,2} = 4 \n x = (2, 1) : y = (1, 2), f(x) = A_{2,1} \\times A_{1,2} = 6 \n x = (2, 2) : y = (2, 2), f(x) = A_{2,2} \\times A_{2,2} = 16"
            },
            {
              "input": "2 3\n1 2\n3 4",
              "output": "27 118",
              "explanation": null
            },
            {
              "input": "5 4\n785439575 250040585 709423541 945005786 19237225\n404191279 250876592 22672563 519729086 344065186\n273714212 560047125 139793596 542901248 520999410\n855572558 498896932 418633758 742973826 248730678\n238856535 319502970 908902333 164543594 245101681",
              "output": "216530400 726773157 717209375 797938347 957133905",
              "explanation": null
            },
            {
              "input": "10 50\n197971506 714635866 966125570 768080799 80565655 459117401 256810168 775681305 582857561 948631706\n437330820 321722967 531470304 255908811 45459908 504089816 695016247 91058795 905527130 30860430\n151769562 979797105 619322493 298241991 360690308 480124392 297323928 284686636 922571073 627798362\n753705854 712639027 721488863 69714419 485979799 88704853 758288417 423073188 595934547 86264514\n272481811 622712481 221745114 225051881 433378197 985573661 210619166 851716760 283615535 834897126\n366075547 933505674 858395194 490049033 22039836 361481447 735151983 518458804 422209788 28981946\n907645400 111982636 978445563 686621115 486475154 734616351 587635888 527524079 454844580 826849288\n868863954 490627044 967828344 887235558 138021910 435784230 343307056 118718683 547282350 757693154\n32344652 101428952 585897722 693817619 790433406 848494439 873744405 604427602 951889915 989125209\n865548541 642980476 603592935 911086893 466178404 79002814 902745597 825893950 147052664 805753279",
              "output": "862518623 606960987 762676180 606184511 762408948 47716007 968649097 788324707 140177479 484063588",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "agc069",
      "url": "https://agc069.contest.atcoder.jp/?lang=en",
      "start_time": "2024-11-24T12:00:00",
      "problems": [
        {
          "id": "agc069_a",
          "problem_letter": "A",
          "url": "https://agc069.contest.atcoder.jp/tasks/agc069_a?lang=en",
          "statement": "Problem Statement: If i = 1, players 2j - 1 and 2j \n If i \\geq 2, the winners of the matches corresponding to (i - 1, 2j - 1) and (i - 1, 2j) \n Instruct the referees to fix the outcomes of the matches as desired. \n Pay the players to change their participation schedules. To make player i participate from day l'_i to day r'_i, Takahashi needs to pay |l_i - l'_i| + |r_i - r'_i| yen. Here, l'_i and r'_i are integers satisfying 1 \\leq l'_i \\leq r'_i \\leq 10^9.",
          "constraints": "Constraints: 1 \\leq N \\leq 18 \n 1 \\leq l_i \\leq r_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nl_1\nr_1\n\\vdots\nl_{2^N}\nr_{2^N}\n\nOutput: \n\nLet X be the minimum total amount of money Takahashi needs to pay. Print X.",
          "samples": [
            {
              "input": "3\n1 4\n1 3\n3 4\n2 2\n3 4\n4 4\n2 3\n3 4",
              "output": "1",
              "explanation": "Assume that Takahashi pays 1 yen to player 4 to change his participation schedule to (l'_4, r'_4) = (2, 3), and not change the schedules of the other players. Then, for example, the final can be completed as follows:\n\nOn the other hand, it is impossible to complete the final with less than 1 yen of payments. Therefore, the expected output is 1."
            },
            {
              "input": "1\n1 1\n1000000000 1000000000",
              "output": "999999999",
              "explanation": null
            },
            {
              "input": "4\n158260522 877914575\n24979445 602436426\n623690081 861648772\n433933447 476190629\n211047202 262703497\n628894325 971407775\n731963982 822804784\n430302156 450968417\n161735902 982631932\n880895728 923078537\n189330739 707723857\n802329211 910286918\n303238506 404539679\n317063340 492686568\n125660016 773361868\n650287940 839296263",
              "output": "1088492036",
              "explanation": null
            }
          ]
        },
        {
          "id": "agc069_b",
          "problem_letter": "B",
          "url": "https://agc069.contest.atcoder.jp/tasks/agc069_b?lang=en",
          "statement": "Problem Statement: Takahashi chooses one integer pair (i, j) satisfying 1 \\leq i, j \\leq N and S_{i,j} =1. \n Aoki asks Takahashi at least 0 and at most N questions. In each question, Aoki chooses an integer pair (i', j') satisfying 1 \\leq i', j' \\leq N, and Takahashi tells Aoki whether \"At least one of i = i' or j = j' holds\" is true or false. \n Aoki guesses (i, j). If his guess is correct, Aoki wins; otherwise, he loses.",
          "constraints": "Constraints: 1 \\leq T \\leq 2 \\times 10^5 \n 1 \\leq N \\leq 500 \n The sum of N^2 over all test cases in each input is at most 500^2. \n S_i is a string of length N consisting of0and1. \n There is at least one integer pair (i, j) satisfying S_{i,j} =1.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nT\ncase_1\n\\vdots\ncase_T\n\nEach test case is given in the following format:\n\nN\nS_1\n\\vdots\nS_N\n\nOutput: \n\nFor each test case, printYes if Aoki can always win the game, andNo otherwise.",
          "samples": [
            {
              "input": "3\n2\n01\n11\n2\n11\n11\n10\n0101011110\n1100100001\n1101100000\n0111101010\n1000011001\n1110101010\n1110110100\n1110000110\n0000001011\n1001111100",
              "output": "Yes\nNo\nYes",
              "explanation": "In the first test case, an example of the game is as follows:\n\nThis is just an example of the game, and Aoki's strategy might not be optimal. However, if Aoki uses an appropriate strategy, he can always win the game, so the output for the first test case isYes."
            }
          ]
        },
        {
          "id": "agc069_c",
          "problem_letter": "C",
          "url": "https://agc069.contest.atcoder.jp/tasks/agc069_c?lang=en",
          "statement": "Problem Statement: Choose an integer pair (i, j) satisfying the following conditions:1 \\leq i < j \\leq Ns_i = s_j =As_{i+1} = s_{i+2} = \\ldots = s_{j-1} =B \n 1 \\leq i < j \\leq N \n s_i = s_j =A \n s_{i+1} = s_{i+2} = \\ldots = s_{j-1} =B \n Then, simultaneously replace each of s_i, s_{i+1}, \\ldots, s_j with the other character (AbecomesB, andBbecomesA).",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n S and T are strings of length N consisting ofAandB.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS\nT\n\nOutput: \n\nIf it is possible to make S equal to T, print the minimum number of operations required; otherwise, output-1.",
          "samples": [
            {
              "input": "5\nAAABA\nBAAAB",
              "output": "2",
              "explanation": "You can make S equal to T in two operations as follows:\n\nIt is impossible to make S equal to T in fewer than two operations, so the answer is2."
            },
            {
              "input": "1\nA\nB",
              "output": "-1",
              "explanation": "It is impossible to make S equal to T. Note that you must choose (i, j) with i < j."
            },
            {
              "input": "1\nA\nA",
              "output": "0",
              "explanation": "Without any operation, S is already equal to T."
            },
            {
              "input": "10\nAAABBABAAB\nBBABBAAABB",
              "output": "7",
              "explanation": null
            }
          ]
        },
        {
          "id": "agc069_d",
          "problem_letter": "D",
          "url": "https://agc069.contest.atcoder.jp/tasks/agc069_d?lang=en",
          "statement": "Problem Statement: The number of integers i\\ (1 \\leq i \\leq N-1) satisfying \\min(a_i,b_i) \\leq j \\lt \\max(a_i,b_i).",
          "constraints": "Constraints: 2 \\leq N \\leq 500 \n 10^8 \\leq P \\leq 10^9 \n P is prime.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nP\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3 998244353",
              "output": "3",
              "explanation": "There are three different trees with three vertices, if we distinguish the vertices by their labels but not the edges.The corresponding (x_1, x_2) are (1, 1), (2, 1), and (1, 2), so the expected output is 3 modulo P = 998244353."
            },
            {
              "input": "69 433416647",
              "output": "243082757",
              "explanation": "Find the count modulo P."
            }
          ]
        },
        {
          "id": "agc069_e",
          "problem_letter": "E",
          "url": "https://agc069.contest.atcoder.jp/tasks/agc069_e?lang=en",
          "statement": "Problem Statement: A = (a_1, \\ldots, a_N) is a sequence of non-negative integers. \n B = (b_1, \\ldots, b_N) is a subsequence of (0, 1, \\ldots, M - 1). \n \\sum\\limits_{i=1}^{N} a_i = X. \n \\sum\\limits_{i=1}^{N} a_i b_i = Y.",
          "constraints": "Constraints: 1 \\leq N \\leq M \\leq 2 \\times 10^5 \n 1 \\leq X, Y \\leq 2 \\times 10^5 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nX\nY\n\nOutput: \n\nPrint the answer modulo 998244353.",
          "samples": [
            {
              "input": "3 4 3 4",
              "output": "5",
              "explanation": "Here are the five pairs (A, B) satisfying the conditions:\n\nA = (0, 2, 1), B = (0, 1, 2) \n A = (1, 0, 2), B = (0, 1, 2) \n A = (1, 1, 1), B = (0, 1, 3) \n A = (1, 2, 0), B = (0, 2, 3) \n A = (2, 1, 0), B = (1, 2, 3)"
            },
            {
              "input": "1 1 1 1",
              "output": "0",
              "explanation": "There are no pairs (A, B) satisfying the conditions."
            },
            {
              "input": "12345 67890 9876 54321",
              "output": "150392014",
              "explanation": "Find the count modulo 998244353."
            }
          ]
        }
      ]
    },
    {
      "id": "agc070",
      "url": "https://agc070.contest.atcoder.jp/?lang=en",
      "start_time": "2024-12-29T12:00:00",
      "problems": [
        {
          "id": "agc070_a",
          "problem_letter": "A",
          "url": "https://agc070.contest.atcoder.jp/tasks/agc070_a?lang=en",
          "statement": "Problem Statement: X is a positive integer at least 10^{50} and less than 10^{5000}. \n S is a string of length at most 5000, consisting of digits from0to9. \n For every integer i such that 1 \\leq i \\leq 1000, the following condition is satisfied:The decimal representation ofXmultiplied byiis a (contiguous) substring ofS. \n The decimal representation of X multiplied by i is a (contiguous) substring of S.",
          "constraints": "Input: \n\nNo input is given for this problem.",
          "io_format": "No input is given for this problem.\n\nOutput: \n\nPrint a pair (X, S) satisfying the conditions stated in the problem in the following format (there exists at least one such pair (X, S)). You may include leading zeros when outputting X, but in that case, make sure that the string representation of X has length at most 5000.\n\nX\nS\n\nSample Output: The value of X does not meet the first condition of the problem statement regarding its range. \n For i = 1 and 2,5and10are substrings of S. However, for i = 3,15is not a substring of S. Thus, (X, S) fails to meet the third condition of the problem statement.",
          "samples": []
        },
        {
          "id": "agc070_b",
          "problem_letter": "B",
          "url": "https://agc070.contest.atcoder.jp/tasks/agc070_b?lang=en",
          "statement": "Problem Statement: Every vertex in G has outdegree 1. \n G has no cycle of even length. \n For every i (2 \\leq i \\leq N), G does not contain the edge i \\to p_i.",
          "constraints": "Constraints: 2 \\leq N \\leq 10^5 \n 1 \\leq p_i \\lt i \n All values given in the input are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\np_2\np_3\n...\np_N\n\nOutput: \n\nPrint the sum, modulo 998244353, of 2^{(\\text{number of cycles in }G)} over all good graphs G.",
          "samples": [
            {
              "input": "2\n1",
              "output": "6",
              "explanation": "Here are the two possible good graphs:\n\nThe number of cycles in these graphs are 2 and 1, respectively. Thus, the answer is (2^2 + 2^1) \\bmod{998244353} = 6.\n\nThe graph with edges 1 \\to 1 and 2 \\to 2. \n The graph with edges 1 \\to 2 and 2 \\to 2."
            },
            {
              "input": "3\n1 2",
              "output": "34",
              "explanation": "For example, the graph with edges 1 \\to 2, 2 \\to 3, and 3 \\to 1 is a good graph, whose number of cycle is 1."
            },
            {
              "input": "5\n1 2 1 1",
              "output": "3104",
              "explanation": null
            },
            {
              "input": "20\n1 2 2 2 5 3 5 1 7 9 4 6 4 12 8 2 5 16 6",
              "output": "784973196",
              "explanation": "Remember to find the sum modulo 998244353."
            }
          ]
        },
        {
          "id": "agc070_c",
          "problem_letter": "C",
          "url": "https://agc070.contest.atcoder.jp/tasks/agc070_c?lang=en",
          "statement": "Problem Statement: Among the N rounds, Alice won exactly A times and Bob won exactly B times. \n Alice never won twice in a row without intervening draws. \n Bob never won twice in a row without intervening draws. \n At no point did Bob’s number of wins exceed Alice’s number of wins. Formally, for all 1 \\leq i \\leq N, “the number of times Alice has won up through round i ” is at least “the number of times Bob has won up through round i.”",
          "constraints": "Constraints: 2 \\leq N \\leq 2 \\times 10^7 \n 1 \\leq B \\leq A \n A + B \\leq N \n N, A, and B are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA\nB\n\nOutput: \n\nPrint the number, modulo (10^9 + 7), of sequences of results of N rounds that satisfy the conditions.",
          "samples": [
            {
              "input": "5 2 2",
              "output": "5",
              "explanation": "For example, the following sequence of N rounds satisfies the conditions:\n\nOn the other hand, the following sequence of N rounds doesnotsatisfy the conditions, because after round 4, Alice’s number of wins (=1) is less than Bob’s number of wins (=2) :\n\nThere are five sequences in total that satisfy the conditions.\n\nRound 1 : Alice wins. \n Round 2 : Bob wins. \n Round 3 : Alice wins. \n Round 4 : Draw. \n Round 5 : Bob wins.\n\nRound 1 : Alice wins. \n Round 2 : Bob wins. \n Round 3 : Draw. \n Round 4 : Bob wins. \n Round 5 : Alice wins."
            },
            {
              "input": "70 29 12",
              "output": "693209192",
              "explanation": "Remember to find the count modulo (10^9 + 7)."
            },
            {
              "input": "20000000 1234567 890123",
              "output": "566226457",
              "explanation": null
            }
          ]
        },
        {
          "id": "agc070_d",
          "problem_letter": "D",
          "url": "https://agc070.contest.atcoder.jp/tasks/agc070_d?lang=en",
          "statement": "Problem Statement: For 1 \\leq i \\leq N+K, card i has (A_i, B_i). \n For N + K + 1 \\leq i \\leq N + K + X, card i has (i, Y). \n First, choose one card from your hand and one card from the table, calling them card i and card j. Here, the following condition must hold:Let(a_i, b_i)be the pair of integers written on cardi, and(a_j, b_j)be the pair on cardj. You must havea_i < a_jandb_i < b_j. \n Let (a_i, b_i) be the pair of integers written on card i, and (a_j, b_j) be the pair on card j. You must have a_i < a_j and b_i < b_j. \n Then, remove card j from the table and place card i on the table (the removed card is no longer available).",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq K \\leq 10 \n 1 \\leq Q \\leq 2 \\times 10^5 \n 1 \\leq A_i \\leq N + K \n 1 \\leq B_i \\leq N + K \n A and B are permutations of (1, 2, \\dots, N+K). \n 1 \\leq X \\leq 10 \n 1 \\leq Y \\leq N + K \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format, where \\mathrm{query}_i denotes the i -th query:\n\nN\nK\nQ\nA_1\nA_2\n...\nA_{N+K}\nB_1\nB_2\n...\nB_{N+K}\n\\mathrm{query}_1\n\\mathrm{query}_2\n\\vdots\n\\mathrm{query}_Q\n\nEach query is given in the following format:\n\nX\nY\n\nOutput: \n\nPrint Q lines. The i -th line should contain the answer to the i -th query.",
          "samples": [
            {
              "input": "5 1 6\n1 2 3 4 6 5\n4 2 5 1 6 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6",
              "output": "4\n3\n3\n3\n2\n1",
              "explanation": "Taking the query (X, Y) = (2, 2) (the second query) as an example:\n\nInitially, the cards in your hand and on the table are as follows:\n\nYou can achieve holding three cards in your hand, which is the minimum, by performing the following operations:\n\nIn your hand: (1, 4), (2, 2), (3, 5), (4, 1), (6, 6) \n On the table: (5, 3), (7, 2), (8, 2)\n\nChoose card 2 in your hand with (2, 2) and card 6 on the table with (5, 3). Remove card 6 from the table and place card 2 on the table. Now, the following cards are remaining.In your hand:(1, 4), (3, 5), (4, 1), (6, 6)On the table:(2, 2), (7, 2), (8, 2) \n In your hand: (1, 4), (3, 5), (4, 1), (6, 6) \n On the table: (2, 2), (7, 2), (8, 2) \n Choose card 4 in your hand with (4, 1) and card 8 on the table with (8, 2). Remove card 8 from the table and place card 4 on the table. Now, the following cards are remaining.In your hand:(1, 4), (3, 5), (6, 6)On the table:(2, 2), (7, 2), (4, 1) \n In your hand: (1, 4), (3, 5), (6, 6) \n On the table: (2, 2), (7, 2), (4, 1)\n\nIn your hand: (1, 4), (3, 5), (4, 1), (6, 6) \n On the table: (2, 2), (7, 2), (8, 2)\n\nIn your hand: (1, 4), (3, 5), (6, 6) \n On the table: (2, 2), (7, 2), (4, 1)"
            },
            {
              "input": "10 2 10\n12 3 2 4 10 9 5 8 1 6 11 7\n3 7 2 6 10 9 1 11 5 8 4 12\n2 6\n3 3\n1 3\n1 7\n1 12\n3 4\n3 11\n2 1\n2 8\n1 5",
              "output": "4\n5\n5\n4\n2\n4\n1\n6\n3\n4",
              "explanation": null
            },
            {
              "input": "20 3 10\n18 16 5 12 21 23 14 1 19 17 3 15 13 22 7 4 2 8 9 20 6 11 10\n18 1 6 20 9 13 21 17 4 16 15 22 12 14 10 23 2 5 3 19 7 11 8\n1 11\n1 3\n3 19\n1 22\n2 15\n4 9\n3 16\n1 19\n5 21\n2 3",
              "output": "13\n15\n6\n11\n9\n13\n8\n12\n3\n15",
              "explanation": null
            }
          ]
        },
        {
          "id": "agc070_e",
          "problem_letter": "E",
          "url": "https://agc070.contest.atcoder.jp/tasks/agc070_e?lang=en",
          "statement": "Problem Statement: It is possible to remove all edges from T by repeating the following operation:Choose a path of length2K + 1and remove all edges in it.Formally, choose a sequence of distinct verticesv_0, v_1, \\dots, v_{2K+1}such that there exists an edge(v_i, v_{i+1})for allisuch that0 \\leq i \\leq 2K, and remove the edge(v_i, v_{i+1})for allisuch that0 \\leq i \\leq 2K. \n Choose a path of length 2K + 1 and remove all edges in it.Formally, choose a sequence of distinct vertices v_0, v_1, \\dots, v_{2K+1} such that there exists an edge (v_i, v_{i+1}) for all i such that 0 \\leq i \\leq 2K, and remove the edge (v_i, v_{i+1}) for all i such that 0 \\leq i \\leq 2K.",
          "constraints": "Constraints: 1 \\leq N \\leq 1.3 \\times 10^5 \n 1 \\leq K \\leq 50 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\n\nOutput: \n\nPrint the number, modulo 998244353, of trees with (2K + 1)N + 1 vertices satisfying the condition.",
          "samples": [
            {
              "input": "2 1",
              "output": "8820",
              "explanation": "For example, consider a tree with edges (1, 2), (2, 3), (2, 4), (2, 6), (3, 7), and (4, 5). By doing the following steps, one can remove all edges from the tree, so it satisfies the condition in the problem statement:\n\n\n\nThere are 8820 such trees in total.\n\nChoose the path (1,2,4,5) and remove edges (1,2), (2,4), (4,5). \n Choose the path (6,2,3,7) and remove edges (6,2), (2,3), (3,7)."
            },
            {
              "input": "70 1",
              "output": "273892456",
              "explanation": "Remember to print the count modulo 998244353."
            },
            {
              "input": "12 29",
              "output": "898069699",
              "explanation": null
            },
            {
              "input": "100000 50",
              "output": "158600909",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "arc181",
      "url": "https://arc181.contest.atcoder.jp/?lang=en",
      "start_time": "2024-08-04T12:00:00",
      "problems": [
        {
          "id": "arc181_a",
          "problem_letter": "A",
          "url": "https://arc181.contest.atcoder.jp/tasks/arc181_a?lang=en",
          "statement": "Problem Statement: Choose an integer k such that 1 \\leq k \\leq N. If k \\geq 2, sort the 1 -st through (k-1) -th terms of P in ascending order. Then, if k \\leq N-1, sort the (k+1) -th through N -th terms of P in ascending order.",
          "constraints": "Constraints: 1 \\leq T \\leq 10^5 \n 3 \\leq N \\leq 2 \\times 10^5 \n P is a permutation of (1,2,\\dots,N). \n All input values are integers. \n The sum of N across the test cases in a single input is at most 2 \\times 10^5.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nT\n\\mathrm{case}_1\n\\vdots\n\\mathrm{case}_T\n\nEach case is given in the following format:\n\nN\nP_1\nP_2\n...\nP_N\n\nOutput: \n\nPrint T lines. The i -th line should contain the answer for the i -th test case.",
          "samples": [
            {
              "input": "3\n5\n2 1 3 5 4\n3\n1 2 3\n7\n3 2 1 7 5 6 4",
              "output": "1\n0\n2",
              "explanation": "For the first test case,\n\nPerforming the operation with k=1 results in P becoming (2,1,3,4,5).\n\nPerforming the operation with k=2 results in P becoming (2,1,3,4,5).\n\nPerforming the operation with k=3 results in P becoming (1,2,3,4,5).\n\nPerforming the operation with k=4 results in P becoming (1,2,3,5,4).\n\nPerforming the operation with k=5 results in P becoming (1,2,3,5,4).\n\nSpecifically, performing the operation with k=3 results in P satisfying P_i=i for all i=1,2,...,5. Therefore, the minimum number of operations required is 1.\n\nFor the third test case, performing the operation with k=4 followed by k=3 results in P changing as (3,2,1,7,5,6,4) \\rightarrow (1,2,3,7,4,5,6) \\rightarrow (1,2,3,4,5,6,7).\n\nPerforming the operation withk=1results inPbecoming(2,1,3,4,5). \n Performing the operation withk=2results inPbecoming(2,1,3,4,5). \n Performing the operation withk=3results inPbecoming(1,2,3,4,5). \n Performing the operation withk=4results inPbecoming(1,2,3,5,4). \n Performing the operation withk=5results inPbecoming(1,2,3,5,4)."
            }
          ]
        },
        {
          "id": "arc181_b",
          "problem_letter": "B",
          "url": "https://arc181.contest.atcoder.jp/tasks/arc181_b?lang=en",
          "statement": "Problem Statement: Starting with an empty string, for each i=1,2,\\dots,|X|, append S to the end if the i -th character of X is0, and append T to the end if it is1.",
          "constraints": "Constraints: 1 \\leq t \\leq 5 \\times 10^5 \n 1 \\leq |S| \\leq 5\\times 10^5 \n 1 \\leq |X|,|Y| \\leq 5\\times 10^5 \n S is a string consisting of lowercase English letters. \n X and Y are strings consisting of0and1. \n The sum of |S| across all test cases in a single input is at most 5 \\times 10^5. \n The sum of |X| across all test cases in a single input is at most 5 \\times 10^5. \n The sum of |Y| across all test cases in a single input is at most 5 \\times 10^5.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nt\n\\mathrm{case}_1\n\\vdots\n\\mathrm{case}_t\n\nEach case is given in the following format:\n\nS\nX\nY\n\nOutput: \n\nPrint t lines. The i -th line should containYes if there exists a T that satisfies the condition for the i -th test case, andNo otherwise.",
          "samples": [
            {
              "input": "3\naraara\n01\n111\naraaaa\n100100\n0010111\nabacabac\n0\n1111",
              "output": "Yes\nNo\nNo",
              "explanation": "Below, string concatenation is represented using +.\n\nFor the 1st test case, if T= ara, then f(S,T,X)=S+T= araaraaraand f(S,T,Y)=T+T+T= araaraara, so f(S,T,X)=f(S,T,Y).\n\nFor the 2nd and 3rd test cases, there is no T that satisfies the condition."
            },
            {
              "input": "2\nempty\n10101\n00\nempty\n11111\n111",
              "output": "Yes\nYes",
              "explanation": "T can be empty."
            }
          ]
        },
        {
          "id": "arc181_c",
          "problem_letter": "C",
          "url": "https://arc181.contest.atcoder.jp/tasks/arc181_c?lang=en",
          "statement": "Problem Statement: Let S_i be the string obtained by concatenating the characters in the i -th row from the 1 -st to the N -th column. Then, S_{P_1} < S_{P_2} < \\dots < S_{P_N} in lexicographical order. \n Let T_i be the string obtained by concatenating the characters in the i -th column from the 1 -st to the N -th row. Then, T_{Q_1} < T_{Q_2} < \\dots < T_{Q_N} in lexicographical order. \n  |X| \\lt |Y| and X_1X_2\\ldots X_{|X|} = Y_1Y_2\\ldots Y_{|X|}. \n There exists an integer 1 \\leq i \\leq \\min\\lbrace |X|, |Y| \\rbrace such that both of the following are true:X_1X_2\\ldots X_{i-1} = Y_1Y_2\\ldots Y_{i-1}X_iis less thanY_i. \n  X_1X_2\\ldots X_{i-1} = Y_1Y_2\\ldots Y_{i-1} \n  X_i is less than Y_i.",
          "constraints": "Constraints: 2 \\leq N \\leq 500 \n P and Q are permutations of (1,2,\\dots,N). \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nP_1\nP_2\n...\nP_N\nQ_1\nQ_2\n...\nQ_N\n\nOutput: \n\nPrint a way to fill the grid that satisfies the conditions in the following format, where A_{ij} is the character written at the i -th row and j -th column:\n\nA_{11}A_{12}... A_{1N}\n\\vdots\nA_{N1}A_{N2}... A_{NN}\n\nIf there are multiple ways to satisfy the conditions, any of them will be accepted.",
          "samples": [
            {
              "input": "3\n1 2 3\n2 1 3",
              "output": "001\n101\n110",
              "explanation": "In this sample, S_1= 001, S_2= 101, S_3= 110, and T_1= 011, T_2= 001, T_3= 110. Therefore, S_1 < S_2 < S_3 and T_2 < T_1 < T_3 hold, satisfying the conditions."
            },
            {
              "input": "15\n8 15 10 2 4 3 1 13 5 12 9 6 14 11 7\n4 1 5 14 3 12 13 7 11 8 6 2 9 15 10",
              "output": "010001111110101\n001000000101001\n010001001100010\n010000011110010\n010011101101101\n100101110100000\n111100011001000\n000001001100000\n100011011000101\n000111101011110\n101010101010101\n011010101011110\n010011000010011\n100110010110101\n000101101100100",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc181_d",
          "problem_letter": "D",
          "url": "https://arc181.contest.atcoder.jp/tasks/arc181_d?lang=en",
          "statement": "Problem Statement: Operation k : For i=1,2,\\dots,k-1 in this order, if P_i > P_{i+1}, swap the values of the i -th and (i+1) -th elements of P.",
          "constraints": "Constraints: 2 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq M \\leq 2 \\times 10^5 \n 2 \\leq A_i \\leq N \n P is a permutation of (1,2,\\dots,N). \n A_i \\leq A_{i+1} for i=1,2,\\dots,M-1. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nP_1\nP_2\n...\nP_N\nM\nA_1\nA_2\n...\nA_M\n\nOutput: \n\nPrint M lines. The k -th line should contain the answer to the problem for i=k.",
          "samples": [
            {
              "input": "6\n3 2 4 1 6 5\n2\n4 6",
              "output": "3\n1",
              "explanation": "First, operation 4 is performed. During this, P changes as follows: (3,2,4,1,6,5) \\rightarrow (2,3,4,1,6,5) \\rightarrow (2,3,4,1,6,5) \\rightarrow (2,3,1,4,6,5). The inversion number of P afterward is 3.\n\nNext, operation 6 is performed, where P eventually becomes (2,1,3,4,5,6), whose inversion number is 1."
            },
            {
              "input": "20\n12 14 16 8 7 15 19 6 18 5 13 9 10 17 4 1 11 20 2 3\n15\n3 4 6 8 8 9 10 12 13 15 18 18 19 19 20",
              "output": "117\n116\n113\n110\n108\n105\n103\n99\n94\n87\n79\n72\n65\n58\n51",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc181_e",
          "problem_letter": "E",
          "url": "https://arc181.contest.atcoder.jp/tasks/arc181_e?lang=en",
          "statement": "Problem Statement: For every edge (u,v) (u < v) in the graph, the minimum and maximum vertex numbers on the unique simple path connecting vertices u and v in T are u and v, respectively.",
          "constraints": "Constraints: 2 \\leq N \\leq 2 \\times 10^5 \n N-1 \\leq M \\leq 2 \\times 10^5 \n 1 \\leq A_i < B_i \\leq N \n All input values are integers. \n The given graph is a simple connected undirected graph.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nA_1\nB_1\n\\vdots\nA_M\nB_M\n\nOutput: \n\nPrint M lines. The i -th line should containYes if the graph obtained by removing the i -th edge from G is agood graph, andNo otherwise.",
          "samples": [
            {
              "input": "6 9\n1 3\n1 5\n2 5\n2 6\n3 4\n3 5\n3 6\n4 6\n5 6",
              "output": "No\nNo\nNo\nNo\nYes\nNo\nNo\nYes\nYes",
              "explanation": "Consider the case where edge (4,6) is removed. A spanning tree formed by edges (1,3),(2,5),(3,4),(3,5),(5,6) satisfies the condition. For example, for edge (3,6), the simple path connecting vertices 3 and 6 traverses vertices 3,5,6 in this order, and the minimum and maximum vertex numbers on the path are 3 and 6, respectively, thus satisfying the condition. By verifying the other edges similarly, it can be seen that this spanning tree satisfies the condition, so the answer isYes.\n\nOn the other hand, consider the case where edge (1,5) is removed. The same spanning tree does not satisfy the condition. For edge (4,6), the simple path connecting vertices 4 and 6 traverses vertices 4,3,5,6 in this order, and the minimum and maximum vertex numbers on the path are 3 and 6, respectively, thus not satisfying the condition. It can also be shown that no other spanning tree satisfies the condition, so the answer isNo."
            },
            {
              "input": "5 4\n1 2\n2 3\n3 4\n4 5",
              "output": "No\nNo\nNo\nNo",
              "explanation": "Removing an edge may disconnect the graph."
            },
            {
              "input": "15 20\n12 13\n7 8\n5 7\n8 10\n9 12\n4 5\n11 12\n2 4\n6 8\n4 14\n1 2\n14 15\n2 9\n3 8\n2 15\n10 11\n13 14\n8 9\n7 14\n5 13",
              "output": "No\nNo\nNo\nYes\nYes\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nNo\nNo",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc181_f",
          "problem_letter": "F",
          "url": "https://arc181.contest.atcoder.jp/tasks/arc181_f?lang=en",
          "statement": "Problem Statement: Choose l and r (1\\leq l < r \\leq N) such that A_l=A_r, A_{l+1}=A_{l+2}=\\dots=A_{r-1}, and A_{l+1}\\neq A_l. Replace each of A_{l+1},A_{l+2},\\dots,A_{r-1} with A_l. The cost of this operation is r-l-1.",
          "constraints": "Constraints: 3 \\leq N \\leq 5 \\times 10^5 \n 1 \\leq A_i \\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "7\n1 2 3 2 3 2 1",
              "output": "7",
              "explanation": "For example, if you perform the operation with (l,r)=(3,5), (2,6), (1,7) in this order, A changes as follows: (1,2,3,2,3,2,1)\\rightarrow (1,2,3,3,3,2,1) \\rightarrow (1,2,2,2,2,2,1) \\rightarrow (1,1,1,1,1,1,1), after which there is no l and r with the said property. The total cost of this series of operations is 1+3+5=9.\n\nOn the other hand, if you perform the operation with (l,r)=(2,4), (4,6), (1,7) in this order, A changes as follows: (1,2,3,2,3,2,1)\\rightarrow (1,2,2,2,3,2,1) \\rightarrow (1,2,2,2,2,2,1) \\rightarrow (1,1,1,1,1,1,1). The total cost of this series of operations is 1+1+5=7."
            },
            {
              "input": "5\n1 2 3 4 5",
              "output": "0",
              "explanation": null
            },
            {
              "input": "40\n1 2 3 4 5 6 7 8 7 6 5 6 7 8 7 6 5 4 3 2 2 1 2 3 4 5 4 5 6 7 8 7 7 6 5 6 6 7 8 8",
              "output": "44",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "arc182",
      "url": "https://arc182.contest.atcoder.jp/?lang=en",
      "start_time": "2024-08-11T12:00:00",
      "problems": [
        {
          "id": "arc182_a",
          "problem_letter": "A",
          "url": "https://arc182.contest.atcoder.jp/tasks/arc182_a?lang=en",
          "statement": "Problem Statement: Perform one of the following:Replace each of the elementsS_1, S_2, \\dots, S_{P_i}withV_i. However, before this operation, if there is an element amongS_1, S_2, \\dots, S_{P_i}that is strictly greater thanV_i, Snuke will start crying.Replace each of the elementsS_{P_i}, S_{P_i+1}, \\dots, S_NwithV_i. However, before this operation, if there is an element amongS_{P_i}, S_{P_i+1}, \\dots, S_Nthat is strictly greater thanV_i, Snuke will start crying. \n Replace each of the elements S_1, S_2, \\dots, S_{P_i} with V_i. However, before this operation, if there is an element among S_1, S_2, \\dots, S_{P_i} that is strictly greater than V_i, Snuke will start crying. \n Replace each of the elements S_{P_i}, S_{P_i+1}, \\dots, S_N with V_i. However, before this operation, if there is an element among S_{P_i}, S_{P_i+1}, \\dots, S_N that is strictly greater than V_i, Snuke will start crying.",
          "constraints": "Constraints: 2 \\leq N \\leq 5000 \n 1 \\leq Q \\leq 5000 \n 1 \\leq P_i \\leq N \n 1 \\leq V_i \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nQ\nP_1\nV_1\nP_2\nV_2\n\\vdots\nP_Q\nV_Q\n\nOutput: \n\nPrint the answer as an integer.",
          "samples": [
            {
              "input": "8 3\n1 8\n8 1\n2 1",
              "output": "1",
              "explanation": "Snuke can perform the three operations without crying as follows:\n\nNo other sequences of operations satisfy the conditions, so the answer is 1. For example, if he replaces S_1, S_2, ..., S_8 with 8 in the first operation, he will cry in the second operation regardless of the choice.\n\nReplace S_1 with 8. \n Replace S_8 with 1. \n Replace S_2, S_3, \\dots, S_8 with 1."
            },
            {
              "input": "8 3\n8 1\n1 8\n1 2",
              "output": "0",
              "explanation": "No matter how he performs the first two operations, he will cry in the third operation."
            },
            {
              "input": "241 82\n190 3207371\n229 3639088\n61 4428925\n84 17258698\n34 42692503\n207 59753183\n180 67198566\n78 99285033\n60 102449991\n234 122146510\n111 126959145\n141 152331579\n78 159855439\n11 169658471\n22 189991287\n37 204602946\n73 209329065\n72 215363269\n152 236450854\n175 237822921\n22 261431608\n144 252550201\n54 268889550\n238 276997357\n69 313065279\n226 330144323\n6 335788783\n126 345410019\n220 348318997\n166 365778763\n142 382251905\n200 406191336\n234 392702679\n83 409660987\n183 410908761\n142 445707116\n205 470279207\n230 486436406\n156 494269002\n113 495687706\n200 500005738\n162 505246499\n201 548652987\n86 449551554\n62 459527873\n32 574001635\n230 601073337\n175 610244315\n174 613857555\n181 637452273\n158 637866397\n148 648101378\n172 646898076\n144 682578257\n239 703460335\n192 713255331\n28 727075136\n196 730768166\n111 751850547\n90 762445737\n204 762552166\n72 773170159\n240 803415865\n32 798873367\n195 814999380\n72 842641864\n125 851815348\n116 858041919\n200 869948671\n195 873324903\n5 877767414\n105 877710280\n150 877719360\n9 884707717\n230 880263190\n88 967344715\n49 977643789\n167 979463984\n70 981400941\n114 991068035\n94 991951735\n141 995762200",
              "output": "682155965",
              "explanation": "Remember to take the count modulo 998244353."
            }
          ]
        },
        {
          "id": "arc182_b",
          "problem_letter": "B",
          "url": "https://arc182.contest.atcoder.jp/tasks/arc182_b?lang=en",
          "statement": "Problem Statement: The number of distinct integers that can be expressed as \\displaystyle \\left\\lfloor\\frac{A_i}{2^k} \\right\\rfloor using an integer i between 1 and N, inclusive, and a non-negative integer k.",
          "constraints": "Constraints: 1 \\leq T \\leq 10^5 \n 1 \\leq N \\leq 10^5 \n 1 \\leq K \\leq 30 \n The sum of N across the test cases in a single input file is at most 2 \\times 10^5. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format. Here, \\text{case}_i denotes the i -th test case.\n\nT\n\\mathrm{case}_1\n\\mathrm{case}_2\n\\vdots\n\\mathrm{case}_T\n\nEach test case is given in the following format:\n\nN\nK\n\nOutput: \n\nPrint T lines.\n\nThe i -th line should contain the answer for \\mathrm{case}_i.\n\nIf there are multiple good sequences with the maximum score, any of them will be accepted.",
          "samples": [
            {
              "input": "3\n3 3\n7 2\n8 20",
              "output": "5 6 7\n2 2 3 3 1 3 3\n662933 967505 876482 840117 1035841 651549 543175 781219",
              "explanation": "Consider the first test case.\n\nFor A=(5,6,7), seven integers can be expressed as \\displaystyle \\left\\lfloor\\frac{A_i}{2^k} \\right\\rfloor : 0, 1, 2, 3, 5, 6, and 7, so its score is 7.\n\nOutputs such as A=(7,4,5) and A=(6,5,4) would also be accepted."
            }
          ]
        },
        {
          "id": "arc182_c",
          "problem_letter": "C",
          "url": "https://arc182.contest.atcoder.jp/tasks/arc182_c?lang=en",
          "statement": "Problem Statement: \n\nAn integer sequence of length between 1 and N, inclusive, where each element is between 1 and M, inclusive, is called agood sequence.\n\nThescore of a good sequence is defined as the number of positive divisors of X, where X is the product of the elements in the sequence.\n\nThere are \\displaystyle \\sum_{k=1}^{N}M^k good sequences. Find the sum of the scores of all those sequences modulo 998244353.",
          "constraints": "Constraints: 1 \\leq N \\leq 10^{18} \n 1 \\leq M \\leq 16 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\n\nOutput: \n\nPrint the answer as an integer.",
          "samples": [
            {
              "input": "1 7",
              "output": "16",
              "explanation": "There are seven good sequences: (1),(2),(3),(4),(5),(6),(7). Their scores are 1,2,2,3,2,4,2, respectively, so the answer is 1+2+2+3+2+4+2=16."
            },
            {
              "input": "3 11",
              "output": "16095",
              "explanation": "For example, (8,11) and (1,8,2) are good sequences. Here is the process of calculating their scores:\n\nThe product of the elements in (8,11) is 8 \\times 11 = 88. 88 has eight positive divisors: 1,2,4,8,11,22,44,88, so the score of (8,11) is 8. \n The product of the elements in (1,8,2) is 1 \\times 8 \\times 2 = 16. 16 has five positive divisors: 1,2,4,8,16, so the score of (1,8,2) is 5."
            },
            {
              "input": "81131 14",
              "output": "182955659",
              "explanation": "Remember to take the result modulo 998244353."
            }
          ]
        },
        {
          "id": "arc182_d",
          "problem_letter": "D",
          "url": "https://arc182.contest.atcoder.jp/tasks/arc182_d?lang=en",
          "statement": "Problem Statement: Choose an integer i between 1 and N, inclusive, and perform one of the following:SetA_i \\leftarrow (A_i + 1) \\bmod M.SetA_i \\leftarrow (A_i - 1) \\bmod M. Here,(-1) \\bmod M = M - 1. \n Set A_i \\leftarrow (A_i + 1) \\bmod M. \n Set A_i \\leftarrow (A_i - 1) \\bmod M. Here, (-1) \\bmod M = M - 1.",
          "constraints": "Constraints: 2 \\leq N \\leq 2 \\times 10^5 \n 2 \\leq M \\leq 10^6 \n 0\\leq A_i,B_i< M(1\\leq i\\leq N) \n A_i\\ne A_{i+1}(1\\leq i\\leq N-1) \n B_i\\ne B_{i+1}(1\\leq i\\leq N-1) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nA_1\nA_2\n...\nA_N\nB_1\nB_2\n...\nB_N\n\nOutput: \n\nIf the goal is unachievable, print-1.\n\nOtherwise, print the minimum number of operations required as an integer.",
          "samples": [
            {
              "input": "3 9\n2 0 1\n4 8 1",
              "output": "3",
              "explanation": "You can achieve the goal in three operations as follows:\n\nIt is impossible to achieve the goal in two or fewer operations, so the answer is 3.\n\nFor example, you cannot set A_2 \\leftarrow (A_2 + 1) \\bmod M in the first operation, because it would make A = (2, 1, 1), which is not a good sequence.\n\nSet A_1 \\leftarrow (A_1 + 1) \\bmod M. Now A = (3, 0, 1). \n Set A_2 \\leftarrow (A_2 - 1) \\bmod M. Now A = (3, 8, 1). \n Set A_1 \\leftarrow (A_1 + 1) \\bmod M. Now A = (4, 8, 1)."
            },
            {
              "input": "3 9\n1 8 2\n1 8 2",
              "output": "0",
              "explanation": "A and B might be equal from the beginning."
            },
            {
              "input": "24 182\n128 115 133 52 166 92 164 119 143 99 54 162 86 2 59 166 24 78 81 5 109 67 172 99\n136 103 136 28 16 52 2 85 134 64 123 74 64 28 85 161 19 74 14 110 125 104 180 75",
              "output": "811",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc182_e",
          "problem_letter": "E",
          "url": "https://arc182.contest.atcoder.jp/tasks/arc182_e?lang=en",
          "statement": "Problem Statement: \n\nYou are given positive integers N, M, K, a non-negative integer C, and an integer sequence A=(A_1, A_2, ..., A_N) of length N.\n\nFind \\displaystyle \\sum_{k=0}^{K-1}\\min_{1\\le i\\le N}\\lbrace(Ck+A_i) \\mathrm{mod} M \\rbrace.",
          "constraints": "Constraints: 1 \\le N \\le 10^5 \n 1 \\le M \\le 10^9 \n 0 \\le C < M \n 1 \\le K \\le 10^9 \n 0 \\le A_i < M \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nC\nK\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "2 5 3 3\n1 3",
              "output": "4",
              "explanation": "For k=0, \\lbrace(3k+1) \\mathrm{mod} 5 \\rbrace=1 and \\lbrace(3k+3) \\mathrm{mod} 5 \\rbrace=3, so \\displaystyle \\min_{1\\le i\\le N}\\lbrace(Ck+A_i) \\mathrm{mod} M \\rbrace=1.\n\nFor k=1, \\lbrace(3k+1) \\mathrm{mod} 5 \\rbrace=4 and \\lbrace(3k+3) \\mathrm{mod} 5 \\rbrace=1, so \\displaystyle \\min_{1\\le i\\le N}\\lbrace(Ck+A_i) \\mathrm{mod} M \\rbrace=1.\n\nFor k=2, \\lbrace(3k+1) \\mathrm{mod} 5 \\rbrace=2 and \\lbrace(3k+3) \\mathrm{mod} 5 \\rbrace=4, so \\displaystyle \\min_{1\\le i\\le N}\\lbrace(Ck+A_i) \\mathrm{mod} M \\rbrace=2.\n\nTherefore, the answer is 1+1+2=4. Hence, print 4."
            },
            {
              "input": "5 4 3 182\n0 3 2 1 2",
              "output": "0",
              "explanation": null
            },
            {
              "input": "5 718 651 193855\n3 532 44 109 58",
              "output": "29484897",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc182_f",
          "problem_letter": "F",
          "url": "https://arc182.contest.atcoder.jp/tasks/arc182_f?lang=en",
          "statement": "Problem Statement: \n\nYou are given integers N and Q, and two integer sequences of length Q : A=(A_1,A_2,...,A_Q) and B=(B_1,B_2,..., B_Q).\n\nFor each k=1,2,...,Q, solve the following problem:\n\nThere is an undirected graph with N vertices numbered from 0 to N-1 and N edges. The i -th edge (0 \\le i < N) connects vertices i and (A_k \\times i + B_k) \\mod N bidirectionally. Find the number of connected components in this undirected graph.",
          "constraints": "Constraints: 1 \\le N \\le 10^6 \n 1 \\le Q \\le 10^5 \n 0 \\le A_k < N \n 0 \\le B_k < N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nQ\nA_1\nB_1\nA_2\nB_2\n\\vdots\nA_Q\nB_Q\n\nOutput: \n\nPrint Q lines.\nThe i -th line should contain the answer for k=i.",
          "samples": [
            {
              "input": "6 3\n2 1\n0 1\n1 0",
              "output": "2\n1\n6",
              "explanation": "For k=1, the graph has the following two connected components:\n\nThus, the answer for k=1 is 2.\n\nA connected component with vertices 0,1,3,4. \n A connected component with vertices 2,5."
            },
            {
              "input": "11 3\n9 1\n5 3\n8 0",
              "output": "3\n3\n2",
              "explanation": "For k=1, the graph has the following three connected components:\n\nThus, the answer for k=1 is 3.\n\nA connected component with vertices 0,1,3,6,10. \n A connected component with vertices 2,5,7,8,9. \n A connected component with vertex 4."
            },
            {
              "input": "182 3\n61 2\n77 88\n180 55",
              "output": "36\n14\n9",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "arc183",
      "url": "https://arc183.contest.atcoder.jp/?lang=en",
      "start_time": "2024-08-25T12:00:00",
      "problems": [
        {
          "id": "arc183_a",
          "problem_letter": "A",
          "url": "https://arc183.contest.atcoder.jp/tasks/arc183_a?lang=en",
          "statement": "Problem Statement:  |S| \\lt |T| and (S_1,S_2,\\ldots,S_{|S|}) = (T_1,T_2,\\ldots,T_{|S|}). \n There exists an integer 1 \\leq i \\leq \\min\\lbrace |S|, |T| \\rbrace such that both of the following hold:(S_1,S_2,\\ldots,S_{i-1}) = (T_1,T_2,\\ldots,T_{i-1})S_iis (numerically) smaller thanT_i. \n  (S_1,S_2,\\ldots,S_{i-1}) = (T_1,T_2,\\ldots,T_{i-1}) \n  S_i is (numerically) smaller than T_i.",
          "constraints": "Constraints: 1 \\leq N \\leq 500 \n 1 \\leq K \\leq 500 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\n\nOutput: \n\nPrint the desired integer sequence, with elements separated by spaces.",
          "samples": [
            {
              "input": "2 2",
              "output": "1 2 2 1",
              "explanation": "There are six good integer sequences:\n\nTherefore, the answer is the 3rd sequence in lexicographical order, (1,2,2,1).\n\n(1,1,2,2) \n (1,2,1,2) \n (1,2,2,1) \n (2,1,1,2) \n (2,1,2,1) \n (2,2,1,1)"
            },
            {
              "input": "1 5",
              "output": "1 1 1 1 1",
              "explanation": null
            },
            {
              "input": "6 1",
              "output": "3 6 5 4 2 1",
              "explanation": null
            },
            {
              "input": "3 3",
              "output": "2 2 2 1 3 3 3 1 1",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc183_b",
          "problem_letter": "B",
          "url": "https://arc183.contest.atcoder.jp/tasks/arc183_b?lang=en",
          "statement": "Problem Statement: Choose integers i and j ( 1 \\leq i,j \\leq N).\r\nHere, |i-j| \\leq K must hold.\r\nThen, change the value of A_i to A_j.",
          "constraints": "Constraints: 1 \\leq T \\leq 125000 \n 1 \\leq K < N \\leq 250000 \n 1 \\leq A_i,B_i \\leq N \n The sum of N across all test cases in each input is at most 250000. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nT\ncase_1\ncase_2\n\\vdots\ncase_T\n\nEach test case is given in the following format:\n\nN\nK\nA_1\nA_2\n...\nA_N\nB_1\nB_2\n...\nB_N\n\nOutput: \n\nFor each test case, printYes if it is possible to make A identical to B, andNo otherwise.",
          "samples": [
            {
              "input": "4\n3 1\n1 1 2\n1 2 2\n5 4\n2 4 5 1 3\n2 1 3 2 2\n13 1\n3 1 3 3 5 3 3 4 2 2 2 5 1\n5 3 3 3 4 2 2 2 2 5 5 1 3\n20 14\n10 6 6 19 13 16 15 15 2 10 2 16 9 12 2 6 13 5 5 9\n5 9 6 2 10 19 16 15 13 12 10 2 9 6 5 16 19 12 15 13",
              "output": "Yes\nYes\nNo\nYes",
              "explanation": "Consider the first test case.\nIf we operate with i=2 and j=3, the value of A_2 will be changed to A_3=2, resulting in A=(1,2,2)."
            }
          ]
        },
        {
          "id": "arc183_c",
          "problem_letter": "C",
          "url": "https://arc183.contest.atcoder.jp/tasks/arc183_c?lang=en",
          "statement": "Problem Statement: The i -th condition: The maximum among P_{L_i},P_{L_i+1},\\cdots,P_{R_i} isnot P_{X_i}.\nHere, L_i, R_i, and X_i are integers given in the input.",
          "constraints": "Constraints: 1 \\leq N \\leq 500 \n 1 \\leq M \\leq 10^5 \n 1 \\leq L_i \\leq X_i \\leq R_i \\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nL_1\nR_1\nX_1\nL_2\nR_2\nX_2\n\\vdots\nL_M\nR_M\nX_M\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3 2\n1 3 2\n1 2 1",
              "output": "1",
              "explanation": "Only one permutation, P=(1,2,3), satisfies the conditions."
            },
            {
              "input": "5 1\n1 1 1",
              "output": "0",
              "explanation": null
            },
            {
              "input": "10 5\n3 8 4\n3 10 4\n1 7 2\n1 8 3\n3 8 7",
              "output": "1598400",
              "explanation": null
            },
            {
              "input": "15 17\n2 11 9\n2 15 13\n1 14 2\n5 11 5\n3 15 11\n1 6 2\n4 15 12\n3 11 6\n9 13 10\n2 14 6\n10 15 11\n1 8 6\n6 14 8\n2 10 2\n6 12 6\n3 14 12\n2 6 2",
              "output": "921467228",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc183_d",
          "problem_letter": "D",
          "url": "https://arc183.contest.atcoder.jp/tasks/arc183_d?lang=en",
          "statement": "Problem Statement: Choose two leaves (vertices with degree exactly 1) and remove them from the tree.\r\nHere, the tree after removal must still have a perfect matching.\r\nIn this problem, we consider a graph with zero vertices to be a tree as well.",
          "constraints": "Constraints: 2 \\leq N \\leq 250000 \n N is even. \n 1 \\leq A_i < B_i \\leq N ( 1 \\leq i \\leq N-1) \n A_i=i \\times 2 -1, B_i=i \\times 2 ( 1 \\leq i \\leq N/2) \n The given graph is a tree. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nB_1\nA_2\nB_2\n\\vdots\nA_{N-1}\nB_{N-1}\n\nOutput: \n\nPrint a solution in the following format:\n\nX_1\nY_1\nX_2\nY_2\n\\vdots\nX_{N/2}\nY_{N/2}\n\nHere, X_i and Y_i are the two vertices chosen in the i -th operation.\nIf there are multiple solutions, you may print any of them.",
          "samples": [
            {
              "input": "4\n1 2\n3 4\n2 3",
              "output": "4 1\n2 3",
              "explanation": "The procedure in the sample output is as follows:\n\nIt is impossible to make the total score greater than 4, so this output solves this sample input.\n\n1st operation: Remove vertices 4 and 1. The remaining tree has vertices 2 and 3, and a perfect matching. The score of this operation is 3. \n 2nd operation: Remove vertices 2 and 3. The remaining tree has zero vertices and a perfect matching. The score of this operation is 1. \n The total score is 3 + 1 = 4."
            },
            {
              "input": "8\n1 2\n3 4\n5 6\n7 8\n2 3\n1 5\n1 7",
              "output": "4 8\n7 6\n5 3\n2 1",
              "explanation": null
            },
            {
              "input": "14\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n2 8\n4 11\n5 12\n7 13\n11 14\n9 13",
              "output": "1 6\n5 2\n8 12\n3 7\n10 4\n11 9\n13 14",
              "explanation": null
            },
            {
              "input": "20\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n8 10\n16 18\n16 19\n5 9\n10 17\n2 13\n7 14\n3 7\n3 12",
              "output": "6 1\n2 15\n20 13\n14 19\n16 4\n11 18\n17 12\n3 5\n9 7\n8 10",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc183_e",
          "problem_letter": "E",
          "url": "https://arc183.contest.atcoder.jp/tasks/arc183_e?lang=en",
          "statement": "Problem Statement: Choose an integer i ( 1 \\leq i \\leq M-1) and swap the values of A_i and A_{i+1}.\nHere, A must remain good after the operation.",
          "constraints": "Constraints: 2 \\leq N \\leq 250000 \n 2 \\leq M \\leq 250000 \n 1 \\leq P_i <i \n 1 \\leq A_i \\leq B_i \\leq N \n Vertex A_i is an ancestor of vertex B_i or A_i=B_i. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nP_2\nP_3\n...\nP_N\nA_1\nA_2\n...\nA_M\nB_1\nB_2\n...\nB_M\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3 3\n1 2\n1 2 1\n1 2 3",
              "output": "2",
              "explanation": "Consider choosing i=1. The A=(2,1,1) after the operation is not good, so this operation is invalid.\n\nConsider choosing i=2. The A=(1,1,2) after the operation is good, so this operation is valid.\n\nThere are two sequences that can result from performing zero or more operations on A : A=(1,2,1) and (1,1,2)."
            },
            {
              "input": "4 3\n1 1 1\n2 3 4\n2 3 4",
              "output": "1",
              "explanation": null
            },
            {
              "input": "8 13\n1 2 2 3 4 4 3\n5 3 2 5 4 6 2 8 2 6 7 4 7\n5 5 8 5 6 6 5 8 3 6 7 4 7",
              "output": "8",
              "explanation": null
            },
            {
              "input": "30 27\n1 2 1 1 5 1 7 1 5 10 1 12 12 13 15 16 12 18 19 18 21 21 23 13 18 18 27 27 13\n1 18 1 5 11 12 1 1 1 12 1 12 1 15 1 1 21 1 12 10 2 8 3 1 1 30 12\n14 27 30 5 11 17 1 18 24 27 29 27 19 15 28 5 21 21 29 11 2 8 3 4 10 30 22",
              "output": "60",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc183_f",
          "problem_letter": "F",
          "url": "https://arc183.contest.atcoder.jp/tasks/arc183_f?lang=en",
          "statement": "Problem Statement: A<B \n \\gcd(A,B)=1 \n 1 \\leq N \\leq A+B-1 \n You start with an integer x=0. f(n) is the minimum total cost to achieve x=n by repeatedly performing the following operations.Replace the value ofxwithx+A. The cost of this operation isX.Replace the value ofxwithx-A. The cost of this operation isX.Replace the value ofxwithx+B. The cost of this operation isY.Replace the value ofxwithx-B. The cost of this operation isY. \n Replace the value of x with x+A. The cost of this operation is X. \n Replace the value of x with x-A. The cost of this operation is X. \n Replace the value of x with x+B. The cost of this operation is Y. \n Replace the value of x with x-B. The cost of this operation is Y.",
          "constraints": "Constraints: 1 \\leq T \\leq 1000 \n 1 \\leq A<B \\leq 10^9 \n \\gcd(A,B)=1 \n 1 \\leq X,Y \\leq 10^9 \n 1 \\leq N \\leq A+B-1 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nT\ncase_1\ncase_2\n\\vdots\ncase_T\n\nEach test case is given in the following format:\n\nA\nB\nX\nY\nN\n\nOutput: \n\nPrint the answer for each test case.",
          "samples": [
            {
              "input": "4\n1 2 1 1 2\n3 5 2 4 6\n79 85 72 95 4\n80980429 110892168 22712439 520643153 66132787",
              "output": "2\n34\n18111\n785776602",
              "explanation": "In the first test case, f(1)=1 and f(2)=1.\n\nIn the second test case, f(1)=8, f(2)=6, f(3)=2, f(4)=10, f(5)=4, and f(6)=4."
            }
          ]
        }
      ]
    },
    {
      "id": "arc184",
      "url": "https://arc184.contest.atcoder.jp/?lang=en",
      "start_time": "2024-09-22T12:00:00",
      "problems": [
        {
          "id": "arc184_a",
          "problem_letter": "A",
          "url": "https://arc184.contest.atcoder.jp/tasks/arc184_a?lang=en",
          "statement": "Problem Statement: If the two coins are both genuine or both counterfeit, they are judged to be of the same type. \n Otherwise, they are judged to be of different types.",
          "constraints": "Constraints: \\color{red}{N = 1000} \n \\color{red}{M = 10} \n \\color{red}{Q = 950}",
          "io_format": null,
          "samples": []
        },
        {
          "id": "arc184_b",
          "problem_letter": "B",
          "url": "https://arc184.contest.atcoder.jp/tasks/arc184_b?lang=en",
          "statement": "Problem Statement: Choose any positive integer x. For each of x, 2x, and 3x, add it to S if it is not already in S.",
          "constraints": "Constraints: 1 \\leq N \\leq 10^{9}",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\n\nOutput: \n\nPrint the answer in one line.",
          "samples": [
            {
              "input": "7",
              "output": "4",
              "explanation": "Choosing 1, 2, 5, and 7 yields S = \\{1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 21\\}, which satisfies the condition. It is impossible to satisfy the condition with three or fewer operations."
            },
            {
              "input": "25",
              "output": "14",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc184_c",
          "problem_letter": "C",
          "url": "https://arc184.contest.atcoder.jp/tasks/arc184_c?lang=en",
          "statement": "Problem Statement: A crease is a mountain fold if it is folded so that the back sides of the paper come together at the crease. \n A crease is a valley fold if it is folded so that the front sides of the paper come together at the crease. \n The number of k = 1, 2, \\dots, N such that the (i + A_k) -th crease from the left is a mountain fold.",
          "constraints": "Constraints: 1 \\leq N \\leq 10^3 \n 0 = A_1 < A_2 < \\dots < A_N \\leq 10^{18}",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the answer in one line.",
          "samples": [
            {
              "input": "4\n0 1 2 3",
              "output": "3",
              "explanation": "If mountain and valley folds are represented byMandV, respectively, there is a contiguous subsequence of creases likeMMVM. There is no contiguous subsequence likeMMMM, so the answer is 3."
            },
            {
              "input": "6\n0 2 3 5 7 8",
              "output": "4",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc184_d",
          "problem_letter": "D",
          "url": "https://arc184.contest.atcoder.jp/tasks/arc184_d?lang=en",
          "statement": "Problem Statement: Choose one of the remaining balls, say ball k. Then, for each remaining ball i, if either \" X_i < X_k and Y_i < Y_k \" or \" X_i > X_k and Y_i > Y_k \" holds, remove ball i.",
          "constraints": "Constraints: 1 \\leq N \\leq 300 \n X and Y are permutations of (1, 2, \\dots, N).",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nX_1\nY_1\nX_2\nY_2\n\\vdots\nX_N\nY_N\n\nOutput: \n\nPrint the answer in one line.",
          "samples": [
            {
              "input": "3\n1 3\n2 1\n3 2",
              "output": "3",
              "explanation": "The possible sets of balls remaining after operations are \\{1, 2, 3\\}, \\{1, 3\\}, and \\{1, 2\\}."
            },
            {
              "input": "4\n4 2\n2 1\n3 3\n1 4",
              "output": "3",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc184_e",
          "problem_letter": "E",
          "url": "https://arc184.contest.atcoder.jp/tasks/arc184_e?lang=en",
          "statement": "Problem Statement:  f(i, j) := The smallest non-negative integer x such that A_i and A_j become identical after performing the following operation x times, or 0 if such x does not exist.For all integersk \\ (1 \\leq k \\leq M)simultaneously, replaceA_{i, k}with\\displaystyle \\left (\\sum_{l=1}^{k} A_{i, l} \\right ) \\bmod 2. \n For all integers k \\ (1 \\leq k \\leq M) simultaneously, replace A_{i, k} with \\displaystyle \\left (\\sum_{l=1}^{k} A_{i, l} \\right ) \\bmod 2.",
          "constraints": "Constraints: 1 \\leq N \\times M \\leq 10^6 \n A_{i, j} \\in \\{0, 1\\}",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nA_{1, 1}\nA_{1, 2}\n...\nA_{1, M}\nA_{2, 1}\nA_{2, 2}\n...\nA_{2, M}\n\\vdots\nA_{N, 1}\nA_{N, 2}\n...\nA_{N, M}\n\nOutput: \n\nPrint the answer in one line.",
          "samples": [
            {
              "input": "4 3\n1 0 0\n1 1 0\n1 0 1\n0 1 1",
              "output": "8",
              "explanation": "f(1, 1) = 0, f(1, 2) = 3, f(1, 3) = 2, f(1, 4) = 0, f(2, 2) = 0, f(2, 3) = 3, f(2, 4) = 0, f(3, 3) = 0, f(3, 4) = 0, f(4, 4) = 0, so print their sum, 8."
            },
            {
              "input": "7 6\n1 0 0 0 0 0\n1 1 1 0 0 0\n1 0 1 1 0 0\n1 0 0 0 1 1\n1 0 0 0 0 1\n1 0 0 0 0 0\n1 1 1 1 1 1",
              "output": "6",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "arc185",
      "url": "https://arc185.contest.atcoder.jp/?lang=en",
      "start_time": "2024-10-13T12:00:00",
      "problems": [
        {
          "id": "arc185_a",
          "problem_letter": "A",
          "url": "https://arc185.contest.atcoder.jp/tasks/arc185_a?lang=en",
          "statement": "Problem Statement: \n\nThere are positive integers N and M, where N \\lt M. Alice and Bob will play a game. Each player has N cards with 1, 2, ..., N written on them, one for each number.\nStarting with Alice, the two players take turns repeatedly performing this action: choose one card from their hand and play it onto the table. Immediately after a card is played onto the table, if the sum of the numbers on the cards that have been played so far is divisible by M, the player who just played the card loses, and the other player wins. If both players play all their cards without satisfying the above condition, Alice wins. Who will win, Alice or Bob, when both play optimally?\n\nYou are given T test cases. Solve each of them.",
          "constraints": "Constraints: 1 \\leq T \\leq 10^5 \n 1 \\leq N \\lt M \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format. Here, \\mathrm{case}_i denotes the i -th test case.\n\nT\n\\mathrm{case}_1\n\\mathrm{case}_2\n\\vdots\n\\mathrm{case}_T\n\nEach test case is given in the following format:\n\nN\nM\n\nOutput: \n\nPrint T lines. The i -th line should contain the answer for the i -th test case. For each test case, if Alice wins when both play optimally, printAlice ; if Bob wins, printBob.",
          "samples": [
            {
              "input": "8\n2 3\n3 6\n5 9\n45 58\n39 94\n36 54\n74 80\n61 95",
              "output": "Alice\nAlice\nBob\nBob\nAlice\nBob\nBob\nAlice",
              "explanation": "In the first test case, the game could proceed as follows.\n\nIn the first test case, no matter how Bob plays, Alice can win.\n\nInitially, both Alice and Bob have two cards: the card with 1 and the card with 2. \n Alice plays the card with 1.The sum of the numbers on the cards played so far is1, which is not divisible by3, so Alice does not lose. \n The sum of the numbers on the cards played so far is 1, which is not divisible by 3, so Alice does not lose. \n Bob plays the card with 1.The sum is now2, which is not divisible by3, so Bob does not lose. \n The sum is now 2, which is not divisible by 3, so Bob does not lose. \n Alice plays the card with 2.The sum is now4, which is not divisible by3, so Alice does not lose. \n The sum is now 4, which is not divisible by 3, so Alice does not lose. \n Bob plays the card with 2.The sum is now6, which is divisible by3, so Bob loses and Alice wins. \n The sum is now 6, which is divisible by 3, so Bob loses and Alice wins.\n\nThe sum of the numbers on the cards played so far is 1, which is not divisible by 3, so Alice does not lose.\n\nThe sum is now 2, which is not divisible by 3, so Bob does not lose.\n\nThe sum is now 4, which is not divisible by 3, so Alice does not lose.\n\nThe sum is now 6, which is divisible by 3, so Bob loses and Alice wins."
            }
          ]
        },
        {
          "id": "arc185_b",
          "problem_letter": "B",
          "url": "https://arc185.contest.atcoder.jp/tasks/arc185_b?lang=en",
          "statement": "Problem Statement: Choose an integer pair (i, j) satisfying 1 \\leq i \\lt j \\leq N, and replace A_i with A_i + 1 and A_j with A_j - 1.",
          "constraints": "Constraints: 1 \\leq T \\leq 2 \\times 10^5 \n 2 \\leq N \\leq 2 \\times 10^5 \n 0 \\leq A_i \\leq 10^9 \n The sum of N over all test cases is at most 2 \\times 10^5. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format. Here, \\mathrm{case}_i denotes the i -th test case.\n\nT\n\\mathrm{case}_1\n\\mathrm{case}_2\n\\vdots\n\\mathrm{case}_T\n\nEach test case is given in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint T lines. The i -th line should contain the answer for the i -th test case. For each test case, if it is possible to make A a non-decreasing sequence through the operations, printYes ; otherwise, printNo.",
          "samples": [
            {
              "input": "3\n3\n1 7 5\n2\n9 0\n10\n607 495 419 894 610 636 465 331 925 724",
              "output": "Yes\nNo\nYes",
              "explanation": "In the first test case, you can make A into a non-decreasing sequence by performing the following operations:\n\nIn the second test case, you cannot make A into a non-decreasing sequence no matter how you perform the operations.\n\nChoose (i, j) = (1, 2). After the operation, A is (2, 6, 5). \n Choose (i, j) = (1, 2). After the operation, A is (3, 5, 5)."
            }
          ]
        },
        {
          "id": "arc185_c",
          "problem_letter": "C",
          "url": "https://arc185.contest.atcoder.jp/tasks/arc185_c?lang=en",
          "statement": "Problem Statement: 1 \\leq i \\lt j \\lt k \\leq N \n A_i + A_j + A_k = X",
          "constraints": "Constraints: 3 \\leq N \\leq 10^6 \n 1 \\leq X \\leq 10^6 \n 1 \\leq A_i \\leq X \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nX\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nIf there exists an integer triple (i, j, k) satisfying the conditions, print one in the following format. If there are multiple solutions, you may print any of them.\n\ni\nj\nk\n\nIf no such triple exists, print-1.",
          "samples": [
            {
              "input": "5 16\n1 8 5 10 13",
              "output": "1 3 4",
              "explanation": "The triple (i, j, k) = (1, 3, 4) satisfies 1 \\leq i \\lt j \\lt k \\leq N and A_i + A_j + A_k = 1 + 5 + 10 = 16 = X."
            },
            {
              "input": "5 20\n1 8 5 10 13",
              "output": "-1",
              "explanation": null
            },
            {
              "input": "10 100000\n73766 47718 74148 49218 76721 31902 21994 18880 29598 98917",
              "output": "4 6 8",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc185_d",
          "problem_letter": "D",
          "url": "https://arc185.contest.atcoder.jp/tasks/arc185_d?lang=en",
          "statement": "Problem Statement: He chooses one of the vertices adjacent to his current vertex uniformly at random (all choices are independent) and moves to that vertex. Then, if the vertex he is on is unpainted, he paints it.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq M \\leq 2 \\times 10^5 \n N and M are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\n\nOutput: \n\nPrint the expected number of times he performs the operation, modulo 998244353.",
          "samples": [
            {
              "input": "2 2",
              "output": "20",
              "explanation": "For example, Takahashi could behave as follows.\n\nHe behaves in this way with probability \\frac{1}{128}, in which case the number of operations is 8. The expected number of operations is 20.\n\nMoves to vertex 1 and paints it. This action is chosen with probability \\frac{1}{2}. \n Moves to vertex 0. This action is chosen with probability \\frac{1}{2}. \n Moves to vertex 1. This action is chosen with probability \\frac{1}{2}. \n Moves to vertex 3 and paints it. This action is chosen with probability \\frac{1}{2}. \n Moves to vertex 1. This action is chosen with probability 1. \n Moves to vertex 0. This action is chosen with probability \\frac{1}{2}. \n Moves to vertex 2 and paints it. This action is chosen with probability \\frac{1}{2}. \n Moves to vertex 4 and paints it. This action is chosen with probability \\frac{1}{2}."
            },
            {
              "input": "123456 185185",
              "output": "69292914",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc185_e",
          "problem_letter": "E",
          "url": "https://arc185.contest.atcoder.jp/tasks/arc185_e?lang=en",
          "statement": "Problem Statement: There are 2^m - 1 non-empty subsequences of the sequence (A_1, A_2, \\dots, A_m). Find the sum of the scores of all those subsequences, modulo 998244353. Two subsequences are distinguished if they are taken from different positions in the sequence, even if they coincide as sequences.",
          "constraints": "Constraints: 1 \\leq N \\leq 5 \\times 10^5 \n 1 \\leq A_i \\leq 10^5 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint N lines. The i -th line should contain the answer for m = i.",
          "samples": [
            {
              "input": "3\n9 6 4",
              "output": "0\n3\n11",
              "explanation": "Consider the case m = 3. Here are the non-empty subsequences of (A_1, A_2, A_3) = (9, 6, 4) and their scores.\n\nTherefore, the answer for m = 3 is 0 + 0 + 0 + 3 + 1 + 2 + 5 = 11.\n\n(9) : Score is 0. \n (6) : Score is 0. \n (4) : Score is 0. \n (9, 6) : Score is \\gcd(9, 6) = 3. \n (9, 4) : Score is \\gcd(9, 4) = 1. \n (6, 4) : Score is \\gcd(6, 4) = 2. \n (9, 6, 4) : Score is \\gcd(9, 6) + \\gcd(6, 4) = 3 + 2 = 5."
            },
            {
              "input": "5\n3 8 12 6 9",
              "output": "0\n1\n13\n57\n155",
              "explanation": null
            },
            {
              "input": "10\n47718 21994 74148 76721 98917 73766 29598 59035 69293 29127",
              "output": "0\n2\n14\n35\n97\n372\n866\n1859\n4273\n43287",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "arc186",
      "url": "https://arc186.contest.atcoder.jp/?lang=en",
      "start_time": "2024-10-27T12:00:00",
      "problems": [
        {
          "id": "arc186_a",
          "problem_letter": "A",
          "url": "https://arc186.contest.atcoder.jp/tasks/arc186_a?lang=en",
          "statement": "Problem Statement: The sums of corresponding rows are equal. That is, A_{i,1} + \\dots + A_{i,N} = B_{i,1} + \\dots + B_{i,N} for any i=1,\\dots,N. \n The sums of corresponding columns are equal. That is, A_{1,j} + \\dots + A_{N,j} = B_{1,j} + \\dots + B_{N,j} for any j=1,\\dots,N. \n The i -th query: If there exists an N \\times N matrix whose elements are 0 or 1 such that exactly K_i elements are fixed, outputYes; otherwise, outputNo.",
          "constraints": "Constraints: 2 \\le N \\le 30 \n 1 \\le Q \\le N^2+1 \n 0 \\le K_i \\le N^2 \n K_i \\ne K_j (1 \\le i < j \\le Q) \n All inputs are integers",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nQ\nK_1\nK_2\n\\vdots\nK_Q\n\nOutput: \n\nOutput Q lines.\nFor the i -th line (1 \\le i \\le Q), output the answer for the i -th query.",
          "samples": [
            {
              "input": "3 3\n0\n9\n7",
              "output": "Yes\nYes\nNo",
              "explanation": "Query 1:\nFor example, the following matrix X has exactly 0 fixed elements.\n\nThis is because all the following matrices, obtained by cyclically shifting the columns, are similar to X, and each element can be either 0 or 1.\n\nQuery 2:\nFor example, the following matrix X has exactly 9 fixed elements.\n\nThis is because no other matrix similar to X exists, and all elements are fixed.\n\nQuery 3:\nNo matrix exists with exactly 7 fixed elements."
            },
            {
              "input": "29 6\n186\n681\n18\n108\n123\n321",
              "output": "No\nYes\nNo\nYes\nNo\nYes",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc186_b",
          "problem_letter": "B",
          "url": "https://arc186.contest.atcoder.jp/tasks/arc186_b?lang=en",
          "statement": "Problem Statement: For each i=1,\\dots,N :P_j > P_ifor any integerjwithA_i < j < iP_{A_i} < P_iifA_i > 0 \n P_j > P_i for any integer j with A_i < j < i \n P_{A_i} < P_i if A_i > 0",
          "constraints": "Constraints: 1\\le N\\le 3\\times 10^5 \n 0\\le A_i \\lt i \n For A_1,\\dots,A_N, there exists a permutation satisfying the conditions in the problem statement. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the number of permutations satisfying the conditions, modulo 998244353.",
          "samples": [
            {
              "input": "4\n0 1 0 3",
              "output": "3",
              "explanation": "There are three such permutations: (2, 3, 1, 4), (2, 4, 1, 3), and (3, 4, 1, 2)."
            },
            {
              "input": "22\n0 1 2 2 2 2 2 2 1 9 9 9 9 0 14 15 15 15 14 19 19 19",
              "output": "353820794",
              "explanation": "The answer is 353820794, which is 2350309500 modulo 998244353."
            }
          ]
        },
        {
          "id": "arc186_c",
          "problem_letter": "C",
          "url": "https://arc186.contest.atcoder.jp/tasks/arc186_c?lang=en",
          "statement": "Problem Statement: Mr. Ball chooses one ball and gives it to Mr. Box. \n Mr. Box either accepts the ball or ends the game without accepting it. \n If Mr. Box accepts the ball, he chooses one of his purchased boxes and puts the ball in it. \n If the box with the ball satisfies the following conditions, Mr. Box receives 1 yen. Otherwise, the game ends.The number of balls in the box does not exceed its capacity.All balls in the box are of the same type. \n The number of balls in the box does not exceed its capacity. \n All balls in the box are of the same type.",
          "constraints": "Constraints: 1\\le T,N,M\\le 3\\times 10^5 \n 1\\le V_i,P_i \\le 10^9 \n The sum of N over the T test cases is at most 3\\times 10^5. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format, where \\mathrm{case}_i represents the i -th test case:\n\nT\n\\mathrm{case}_1\n\\mathrm{case}_2\n\\vdots\n\\mathrm{case}_T\n\nEach test case is given in the following format:\n\nN\nM\nV_1\nP_1\nV_2\nP_2\n\\vdots\nV_N\nP_N\n\nOutput: \n\nPrint the difference between Mr. Box's final and initial money when both players play optimally.",
          "samples": [
            {
              "input": "3\n3 2\n1 1000000000\n3 1\n3 1\n1 300000\n1000000000 1\n10 4\n22 5\n26 45\n72 21\n47 39\n97 2\n75 35\n82 24\n17 46\n32 22\n28 67",
              "output": "2\n0\n28",
              "explanation": "In the first test case, there are two types of balls and three boxes.\nLet us call the two types of balls white and black balls, and call the i -th box box i.\nHere is an example of how the game could proceed where the money increases by 2 yen.\n\nFinally, box 2 contains 3 white balls and box 3 contains 1 black ball.\nMr. Box spent 2 yen and received 4 yen, so his money increased by 2 yen.\n\nIn the second test case, Mr. Ball can play in a way that prevents Mr. Box from earning any money.\n\nBox 2 contains 1 white ball. This satisfies the conditions, so Mr. Box receives 1 yen.\n\nBox 2 contains 2 white balls. This satisfies the conditions, so Mr. Box receives 1 yen.\n\nBox 3 contains 1 black ball. This satisfies the conditions, so Mr. Box receives 1 yen.\n\nBox 2 contains 3 white balls. This satisfies the conditions, so Mr. Box receives 1 yen."
            }
          ]
        },
        {
          "id": "arc186_d",
          "problem_letter": "D",
          "url": "https://arc186.contest.atcoder.jp/tasks/arc186_d?lang=en",
          "statement": "Problem Statement: We say (V_1, V_2, \\dots, V_M) is Polish if there exist V_1 Polish sequences W_1, W_2, \\dots, W_{V_1} such that the concatenation of sequences (V_1), W_1, W_2, \\dots, W_{V_1} in this order equals (V_1, V_2, \\dots, V_M). \n  |S| \\lt |T| and (S_1,S_2,\\ldots,S_{|S|}) = (T_1,T_2,\\ldots,T_{|S|}). \n There exists an integer 1 \\leq i \\leq \\min\\lbrace |S|, |T| \\rbrace such that both of the following hold:(S_1,S_2,\\ldots,S_{i-1}) = (T_1,T_2,\\ldots,T_{i-1})S_iis (numerically) less thanT_i. \n  (S_1,S_2,\\ldots,S_{i-1}) = (T_1,T_2,\\ldots,T_{i-1}) \n  S_i is (numerically) less than T_i.",
          "constraints": "Constraints: 1\\leq N \\leq 3\\times 10^5 \n 0\\leq A_i \\lt N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the number of sequences satisfying the conditions, modulo 998244353.",
          "samples": [
            {
              "input": "6\n1 1 1 2 0 0",
              "output": "2",
              "explanation": "(1, 1, 1, 1, 1, 0) and (1, 1, 1, 2, 0, 0) satisfy the conditions.\n\nWe can verify that (1, 1, 1, 2, 0, 0) is Polish as follows.\n\nAs stated in the problem statement, (0) is Polish. \n (2, 0, 0) is Polish because it equals the concatenation of (2) and two Polish sequences (0) and (0) in this order. \n (1, 2, 0, 0) is Polish because it equals the concatenation of (1) and one Polish sequence (2, 0, 0) in this order. \n (1, 1, 2, 0, 0) is Polish because it equals the concatenation of (1) and one Polish sequence (1, 2, 0, 0) in this order. \n (1, 1, 1, 2, 0, 0) is Polish because it equals the concatenation of (1) and one Polish sequence (1, 1, 2, 0, 0) in this order."
            },
            {
              "input": "11\n3 3 4 4 5 5 6 6 7 7 8",
              "output": "13002",
              "explanation": null
            },
            {
              "input": "19\n18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18",
              "output": "477638700",
              "explanation": null
            },
            {
              "input": "4\n1 1 0 0",
              "output": "0",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc186_e",
          "problem_letter": "E",
          "url": "https://arc186.contest.atcoder.jp/tasks/arc186_e?lang=en",
          "statement": "Problem Statement: Among all sequences of length M consisting of 1,\\dots,K, the only sequence that cannot be obtained as a (not necessarily contiguous) subsequence of (A_1,\\dots,A_N) is (X_1,\\dots,X_M).",
          "constraints": "Constraints: 2\\le M,K \\le N \\le 400 \n 1\\le X_i \\le K \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nK\nX_1\nX_2\n...\nX_M\n\nOutput: \n\nPrint the number of sequences satisfying the condition, modulo 998244353.",
          "samples": [
            {
              "input": "5 2 3\n1 1",
              "output": "4",
              "explanation": "The following four sequences satisfy the condition:\n\n(2, 3, 1, 2, 3) \n (2, 3, 1, 3, 2) \n (3, 2, 1, 2, 3) \n (3, 2, 1, 3, 2)"
            },
            {
              "input": "400 3 9\n1 8 6",
              "output": "417833302",
              "explanation": null
            },
            {
              "input": "29 3 10\n3 3 3",
              "output": "495293602",
              "explanation": null
            },
            {
              "input": "29 3 10\n3 3 4",
              "output": "0",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "arc187",
      "url": "https://arc187.contest.atcoder.jp/?lang=en",
      "start_time": "2024-11-17T12:00:00",
      "problems": [
        {
          "id": "arc187_a",
          "problem_letter": "A",
          "url": "https://arc187.contest.atcoder.jp/tasks/arc187_a?lang=en",
          "statement": "Problem Statement: Choose an integer i between 1 and N-1, inclusive. Simultaneously replace A_i with A_{i+1} + K, and A_{i+1} with A_i.",
          "constraints": "Constraints: All input numbers are integers. \n 2 \\leq N \\leq 50 \n 1 \\leq K \\leq 50 \n 1 \\leq A_i \\leq 50",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nA_1\n...\nA_N\n\nOutput: \n\nIf it is impossible to make A non-decreasing within 500000 operations, printNo. Otherwise, print a solution in the following format, where M is the number of operations (0 \\leq M \\leq 500000), and i_k is the i chosen in the k -th operation (1 \\leq k \\leq M) :\n\nYesM\ni_1\n...\ni_M\n\nIf multiple valid solutions exist, any of them will be considered correct.",
          "samples": [
            {
              "input": "3 2\n3 6 4",
              "output": "Yes\n1\n2",
              "explanation": "Let us perform the operation with i=2. This simultaneously replaces A_2 with A_3 + 2 = 6, and A_3 with A_2 = 6, making A = (3,6,6).\n\nNow A is non-decreasing, so this output satisfies the conditions."
            },
            {
              "input": "3 3\n1 5 8",
              "output": "Yes\n2\n2 2",
              "explanation": "It is not necessary to minimize the number of operations."
            }
          ]
        },
        {
          "id": "arc187_b",
          "problem_letter": "B",
          "url": "https://arc187.contest.atcoder.jp/tasks/arc187_b?lang=en",
          "statement": "Problem Statement: Prepare a graph with N vertices labeled 1 to N and zero edges. For every integer pair (i, j) satisfying 1 \\leq i < j \\leq N, if A_i \\leq A_j, draw a bidirectional edge connecting vertices i and j. Define f(A) as the number of connected components in the resulting graph.",
          "constraints": "Constraints: All input numbers are integers. \n 2 \\leq N \\leq 2000 \n 1 \\leq M \\leq 2000 \n Each B_i is -1 or an integer between 1 and M, inclusive.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nB_1\n...\nB_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3 3\n2 -1 1",
              "output": "6",
              "explanation": "There are three possible sequences B' : (2,1,1), (2,2,1), and (2,3,1).\n\nWhen B' = (2,1,1), an edge is drawn only between vertices 2 and 3, so the number of connected components is 2. Thus, f(B') = 2.\n\nSimilarly, f(B') = 2 for B' = (2,2,1) and f(B') = 2 for B' = (2,3,1), so the answer is 2 + 2 + 2 = 6."
            },
            {
              "input": "10 8\n-1 7 -1 -1 -1 2 -1 1 -1 2",
              "output": "329785",
              "explanation": null
            },
            {
              "input": "11 12\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1",
              "output": "529513150",
              "explanation": "Remember to find the sum modulo 998244353."
            }
          ]
        },
        {
          "id": "arc187_c",
          "problem_letter": "C",
          "url": "https://arc187.contest.atcoder.jp/tasks/arc187_c?lang=en",
          "statement": "Problem Statement: For i = 1, 2, \\ldots, N-1 in this order, if P_i > P_{i+1}, swap P_i and P_{i+1}.",
          "constraints": "Constraints: All input numbers are integers. \n 2 \\leq N \\leq 5000 \n Each Q_i is -1 or an integer between 1 and N. \n Each of 1,2,\\ldots,N appears at most once in Q.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nQ_1\n...\nQ_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "4\n-1 -1 2 4",
              "output": "6",
              "explanation": "For example, P = (3,1,4,2) satisfies the conditions. This can be confirmed by the following behavior of the operation.\n\nThere are six permutations P that satisfy the conditions:\n\nFor i=1, since P_1 > P_2, swap P_1 and P_2, resulting in P = (1,3,4,2). \n For i=2, since P_2 < P_3, do nothing. \n For i=3, since P_3 > P_4, swap P_3 and P_4, resulting in P = (1,3,2,4). \n Thus, P' = (1,3,2,4), satisfying P'_3=2 and P'_4=4.\n\n(1,3,4,2) \n (1,4,3,2) \n (3,1,4,2) \n (3,4,1,2) \n (4,1,3,2) \n (4,3,1,2)"
            },
            {
              "input": "6\n-1 -1 -1 -1 2 -1",
              "output": "120",
              "explanation": null
            },
            {
              "input": "15\n-1 -1 -1 -1 -1 4 -1 -1 -1 -1 7 -1 -1 -1 -1",
              "output": "237554682",
              "explanation": "Remember to find the count modulo 998244353."
            }
          ]
        },
        {
          "id": "arc187_d",
          "problem_letter": "D",
          "url": "https://arc187.contest.atcoder.jp/tasks/arc187_d?lang=en",
          "statement": "Problem Statement: Find the minimum possible cost of the sequence C = (C_1, \\ldots, C_k) whose i -th element C_i is A_i or B_i.",
          "constraints": "Constraints: All input numbers are integers. \n 1 \\leq N \\leq 5 \\times 10^5 \n 1 \\leq A_i, B_i \\leq 10^9",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\n...\nA_N\nB_1\n...\nB_N\n\nOutput: \n\nPrint N lines.\n\nThe i -th line (1 \\leq i \\leq N) should contain the minimum possible cost of sequence C for k = i.",
          "samples": [
            {
              "input": "3\n8 11 10\n7 6 1",
              "output": "0\n1\n3",
              "explanation": "For k=1, if we choose C = (8), the cost of C is 0, which is the minimum.\n\nFor k=2, if we choose C = (7,6), the cost of C is 1, which is the minimum.\n\nFor k=3, if we choose C = (8,11,10), the cost of C is 3, which is the minimum."
            },
            {
              "input": "10\n43 35 36 58 25 7 61 4 96 3\n55 29 88 15 99 49 67 57 92 49",
              "output": "0\n8\n8\n23\n28\n33\n36\n36\n64\n64",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc187_e",
          "problem_letter": "E",
          "url": "https://arc187.contest.atcoder.jp/tasks/arc187_e?lang=en",
          "statement": "Problem Statement: Choose an integer i satisfying 1 \\leq i \\leq N and A_i = A_{i+1} = A_{i+2}. Replace two of A_i, A_{i+1}, and A_{i+2} with integers between 1 and N, inclusive. Here, assume A_{N+1} = A_1 and A_{N+2} = A_2.",
          "constraints": "Constraints: All input numbers are integers. \n 3 \\leq N \\leq 5 \\times 10^5 \n 1 \\leq A_i \\leq N",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\n...\nA_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "6\n1 2 3 3 1 1",
              "output": "360",
              "explanation": "For example, we can obtain the permutation A = (1,2,4,3,5,6) through the following steps.\n\nThere are 360 possible resulting sequences A that are permutations of (1, ..., 6).\n\nPerform the operation with i=5. Replace A_5 with 3 and A_6 with 6. Now, A = (1,2,3,3,3,6). \n Perform the operation with i=3. Replace A_3 with 4 and A_5 with 5. Now, A = (1,2,4,3,5,6)."
            },
            {
              "input": "5\n3 1 3 4 1",
              "output": "0",
              "explanation": "There are no possible resulting sequences A that are permutations of (1, ..., 5)."
            },
            {
              "input": "10\n1 1 1 8 8 8 7 7 7 10",
              "output": "604800",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "arc188",
      "url": "https://arc188.contest.atcoder.jp/?lang=en",
      "start_time": "2024-11-23T12:00:00",
      "problems": [
        {
          "id": "arc188_a",
          "problem_letter": "A",
          "url": "https://arc188.contest.atcoder.jp/tasks/arc188_a?lang=en",
          "statement": "Problem Statement: Operation 1 : Choose two identical characters in the string and delete them (cannot be performed if there are not two or more identical characters). \n Operation 2 : Choose oneA, oneB, and oneCin the string and delete them (cannot be performed if there are not one or more of each ofA,B, andC). \n Choose the 2nd, 4th, and 5th characters and delete them (Operation 2). The string becomesAA. \n Choose the 1st and 2nd characters and delete them (Operation 1). The string becomes an empty string.",
          "constraints": "Constraints: 1 \\leq N \\leq 50 \n 0 \\leq K \\leq \\frac{N(N+1)}{2} \n N and K are integers. \n |S| = N \n S is a string consisting ofA,B,C, and?.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nS\n\nOutput: \n\nPrint the answer modulo 998244353.",
          "samples": [
            {
              "input": "4 2\nA?AB",
              "output": "1",
              "explanation": "By replacing?withA,B, orC, we can obtain the following three strings:AAAB,ABAB,ACAB.\n\nAmong these,AAABcontains two good substrings: theAAat positions 1,2 and theAAat positions 2,3. Note that even if the substrings are identical as strings, they are counted separately if they are at different positions in the original string.\n\nOn the other hand,ABABcontains only one good substringABAB. Also,ACABcontains only one good substringCAB."
            },
            {
              "input": "50 411\n??AB??C???????????????????????????????A???C????A??",
              "output": "457279314",
              "explanation": "Print the count modulo 998244353."
            },
            {
              "input": "1 0\nA",
              "output": "1",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc188_b",
          "problem_letter": "B",
          "url": "https://arc188.contest.atcoder.jp/tasks/arc188_b?lang=en",
          "statement": "Problem Statement: Choose one of the currently white points and color it black. Here, after the operation, the coloring of the points must be symmetric with respect to the straight line connecting the operator and the center of the circle.",
          "constraints": "Constraints: 1 \\leq T \\leq 10^5 \n 2 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq K \\leq N-1 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nT\n\\mathrm{case}_1\n\\mathrm{case}_2\n\\vdots\n\\mathrm{case}_T\n\nEach test case \\mathrm{case}_i (1 \\leq i \\leq T) is in the following format:\n\nN\nK\n\nOutput: \n\nPrint T lines. The i -th line should containYes if all points can be colored black for the i -th test case, andNo otherwise.",
          "samples": [
            {
              "input": "4\n6 2\n6 3\n6 1\n200000 100000",
              "output": "Yes\nNo\nYes\nNo",
              "explanation": "For N=6 and K=2, all points can be colored black by, for example, performing operations in the following order:\n\n\n\nFor N=6 and K=3, below is one possible progression. Actually, no matter what they do, they cannot color all points black."
            }
          ]
        },
        {
          "id": "arc188_c",
          "problem_letter": "C",
          "url": "https://arc188.contest.atcoder.jp/tasks/arc188_c?lang=en",
          "statement": "Problem Statement: If C_i=0, villager A_i testified that villager B_i is honest. \n If C_i=1, villager A_i testified that villager B_i is a liar. \n An honest villager who is not confused always tells the truth. \n A liar who is not confused always tells lies. \n A confused honest villager always tells lies. \n A confused liar always tells the truth.",
          "constraints": "Constraints: 2 \\leq N \\leq 2 \\times 10^5 \n 0 \\leq M \\leq \\mathrm{min} \\lbrace 2 \\times 10^5,N(N-1) \\rbrace \n 1 \\leq A_i, B_i \\leq N, A_i \\neq B_i \n A_i \\neq A_j or B_i \\neq B_j for i \\neq j. \n C_i = 0 or 1. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nA_1\nB_1\nC_1\nA_2\nB_2\nC_2\n\\vdots\nA_M\nB_M\nC_M\n\nOutput: \n\nIf there exists a set of confused villagers such that the given set of testimonies does not contradict, print a string of length N representing the set of confused villagers. In this string, the i -th character should be1 if villager i is confused, and0 otherwise.\n\nIf no such set of confused villagers exists, print-1.",
          "samples": [
            {
              "input": "3 3\n1 2 1\n1 3 0\n2 3 0",
              "output": "010",
              "explanation": "Suppose villager 1 is an honest villager who is not confused, villager 2 is a confused liar, and villager 3 is an honest villager who is not confused.\n\nIn this case, villager 1 correctly testifies that villager 2 is a liar and villager 3 is honest.\nAlso, villager 2, who is a liar but confused, tells the truth and testifies that villager 3 is honest.\n\nTherefore, all given testimonies are consistent with the villagers' testimony rules, so010, indicating that only villager 2 is confused, is one valid output."
            },
            {
              "input": "3 6\n1 2 1\n1 3 0\n2 1 1\n2 3 0\n3 1 1\n3 2 0",
              "output": "-1",
              "explanation": "Suppose villagers 2 and 3 are confused.\n\nIn this case, there are 2^3=8 possible combinations for whether each villager is honest or a liar.\nAmong them, for example, if villager 1 is an honest villager who is not confused, villager 2 is a confused liar, and villager 3 is a confused honest villager, then according to the rules, villager 2 should tell the truth, but they falsely testify that villager 1 is a liar.\n\nYou can confirm that also in other combinations, there will be some testimonies that violate the rules.\n\nTherefore, if villagers 2 and 3 are confused, the given set of testimonies contradicts.\n\nIn fact, in this test case, no matter which villagers are confused, the given set of testimonies contradicts."
            },
            {
              "input": "3 0",
              "output": "000",
              "explanation": "There may be any number of confused villagers, possibly zero or all."
            }
          ]
        },
        {
          "id": "arc188_d",
          "problem_letter": "D",
          "url": "https://arc188.contest.atcoder.jp/tasks/arc188_d?lang=en",
          "statement": "Problem Statement: For each of k = 1,2,3, the following holds:Among thek-th elements of the sequences, each integer from1throughNappears exactly once. \n Among the k -th elements of the sequences, each integer from 1 through N appears exactly once. \n Let s_i be the i -th sequence, and let t_i be the reverse of the i -th sequence. When all of these are sorted in lexicographical order, s_i comes a_i -th, and t_i comes b_i -th. \n Here, if there are identical sequences among the 2N sequences, a and b are not defined. \n a_i = A_i. \n b_i = B_i if B_i \\neq -1.",
          "constraints": "Constraints: 2 \\leq N \\leq 3000 \n 1 \\leq A_i \\leq 2N \n 1 \\leq B_i \\leq 2N or B_i = -1. \n In the concatenation of A and B, each integer other than -1 appears at most once. That is,A_i \\neq A_jifi \\neq j.B_i \\neq B_jifi \\neq jandB_i,B_j \\neq -1.A_i \\neq B_j. \n A_i \\neq A_j if i \\neq j. \n B_i \\neq B_j if i \\neq j and B_i,B_j \\neq -1. \n A_i \\neq B_j. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\nB_1\nB_2\n...\nB_N\n\nOutput: \n\nPrint the count modulo 998244353.",
          "samples": [
            {
              "input": "3\n2 3 6\n-1 1 -1",
              "output": "1",
              "explanation": "For example, consider creating the following three sequences:\n\nIn this case, when sorting s_i and t_i lexicographically, we have:\n\nt_2 = (1,1,2) < s_1 = (1,2,3) < s_2 = (2,1,1) < t_3 = (2,3,3) < t_1 = (3,2,1) < s_3 = (3,3,2)\n\nThus, (a_1,a_2,a_3,b_1,b_2,b_3) = (2,3,6,5,1,4). Here, a matches the given A, and the second element of b also matches that of B, so this is one pair of sequences a,b satisfying the conditions.\n\nOn the other hand, if we create the following three sequences, s_1 and t_1 become identical, so a and b are not defined.\n\nIn fact, a=(2,3,6), b=(5,1,4) is the only pair of sequences satisfying the conditions."
            },
            {
              "input": "15\n5 16 1 12 30 20 4 13 9 8 24 21 26 28 17\n-1 -1 6 -1 -1 -1 -1 -1 -1 -1 -1 29 -1 -1 -1",
              "output": "758094847",
              "explanation": "Print the count modulo 998244353."
            }
          ]
        },
        {
          "id": "arc188_e",
          "problem_letter": "E",
          "url": "https://arc188.contest.atcoder.jp/tasks/arc188_e?lang=en",
          "statement": "Problem Statement: First, for i=N,N-1,\\ldots,2,1 in this order, perform the following operation.If the position of balliatt=t_0+1has already been determined:Do nothing.If the position of balliatt=t_0+1has not been determined:If there exists a cell immediately below balliatt=t_0, and the ball in that cell (call it ballj) is lighter than balli,set the positions of ballsiandjatt=t_0+1to be swapped from their positions att=t_0.Otherwise,set the position of balliatt=t_0+1to be the same as att=t_0. \n If the position of ball i at t=t_0+1 has already been determined:Do nothing. \n Do nothing. \n If the position of ball i at t=t_0+1 has not been determined:If there exists a cell immediately below balliatt=t_0, and the ball in that cell (call it ballj) is lighter than balli,set the positions of ballsiandjatt=t_0+1to be swapped from their positions att=t_0.Otherwise,set the position of balliatt=t_0+1to be the same as att=t_0. \n If there exists a cell immediately below ball i at t=t_0, and the ball in that cell (call it ball j) is lighter than ball i,set the positions of ballsiandjatt=t_0+1to be swapped from their positions att=t_0. \n Otherwise,set the position of balliatt=t_0+1to be the same as att=t_0. \n Next, for all balls of weight 0 whose positions at t=t_0+1 have not been determined at this point,set their positions att=t_0+1to be the same as att=t_0.",
          "constraints": "Constraints: 1 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq m_i \\leq N \n m_i \\neq m_j for i \\neq j. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nm_1\nm_2\n...\nm_N\n\nOutput: \n\nPrint the answer as an integer.",
          "samples": [
            {
              "input": "3\n2 3 1",
              "output": "6",
              "explanation": "The movements from time t=0 to t=1 are determined as follows. (Refer to the diagram below if necessary.)\n\nNext, the movements from time t=1 to t=2 are determined as follows.\n\nContinuing to determine the positions of the balls in this way, at time t=6, the balls will be arranged from top to bottom as balls 0,0,0,1,2,3, and their positions will no longer change.\n\n"
            },
            {
              "input": "5\n4 1 2 3 5",
              "output": "9",
              "explanation": null
            },
            {
              "input": "1\n1",
              "output": "1",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "arc190",
      "url": "https://arc190.contest.atcoder.jp/?lang=en",
      "start_time": "2025-01-12T12:00:00",
      "problems": [
        {
          "id": "arc190_a",
          "problem_letter": "A",
          "url": "https://arc190.contest.atcoder.jp/tasks/arc190_a?lang=en",
          "statement": "Problem Statement: Operation 0 : Do nothing. This operation incurs a cost of 0. \n Operation 1 : For each integer j with 1 \\leq j \\leq N, if L_i \\leq j \\leq R_iholds, set x_j = 1. This operation incurs a cost of 1. \n Operation 2 : For each integer j with 1 \\leq j \\leq N, if L_i \\leq j \\leq R_idoes not hold, set x_j = 1. This operation incurs a cost of 1.",
          "constraints": "Constraints: 1 \\leq N \\leq 1000000 \n 1 \\leq M \\leq 200000 \n 1 \\leq L_i \\leq R_i \\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nL_1\nR_1\n\\vdots\nL_M\nR_M\n\nOutput: \n\nIf the goal is not achievable, print-1.\n\nIf the goal is achievable, print one way to achieve it where the total cost of the operations is minimized, in the following format, where K is the minimum total cost of the operations, and \\mathrm{op}_i is the type of operation ( 0, 1, or 2) chosen for the i -th operation.\n\nK\n\\mathrm{op}_1\n...\n\\mathrm{op}_M\n\nIf there are multiple ways that minimize the total cost, printing any one of them is accepted.",
          "samples": [
            {
              "input": "5 4\n2 4\n3 5\n1 4\n2 5",
              "output": "2\n2 0 1 0",
              "explanation": "In the sample output, x changes as follows:\n\nInitially, x = (0,0,0,0,0). \n In the 1st operation, Operation 2 is performed. x_1 and x_5 become 1, so x = (1,0,0,0,1). \n In the 2nd operation, Operation 0 is performed. x remains (1,0,0,0,1). \n In the 3rd operation, Operation 1 is performed. x_1, x_2, x_3, x_4 become 1, so x = (1,1,1,1,1). \n In the 4th operation, Operation 0 is performed. x remains (1,1,1,1,1)."
            },
            {
              "input": "5 4\n1 3\n1 5\n2 4\n3 5",
              "output": "1\n0 1 0 0",
              "explanation": null
            },
            {
              "input": "5 2\n1 3\n2 5",
              "output": "2\n1 1",
              "explanation": null
            },
            {
              "input": "5 2\n1 3\n2 4",
              "output": "-1",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc190_b",
          "problem_letter": "B",
          "url": "https://arc190.contest.atcoder.jp/tasks/arc190_b?lang=en",
          "statement": "Problem Statement: All cells reachable from a certain cell (i,j) by moving down or right between 0 and K-1 cells, inclusive (where 1 \\leq i \\leq N-K+1, 1 \\leq j \\leq N-K+1). \n All cells reachable from a certain cell (i,j) by moving down or left between 0 and K-1 cells, inclusive (where 1 \\leq i \\leq N-K+1, K \\leq j \\leq N). \n All cells reachable from a certain cell (i,j) by moving up or right between 0 and K-1 cells, inclusive (where K \\leq i \\leq N, 1 \\leq j \\leq N-K+1). \n All cells reachable from a certain cell (i,j) by moving up or left between 0 and K-1 cells, inclusive (where K \\leq i \\leq N, K \\leq j \\leq N).",
          "constraints": "Constraints: 1 \\leq N \\leq 10^7 \n 1 \\leq a \\leq N \n 1 \\leq b \\leq N \n 1 \\leq Q \\leq \\min\\lbrace N, 200000 \\rbrace \n 1 \\leq k_1 < \\cdots < k_Q \\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\na\nb\nQ\nk_1\n...\nk_Q\n\nOutput: \n\nPrint Q lines.\n\nThe i -th line should contain the number, modulo 998244353, of ways to partition the grid into exactly one level 1 L-shape, one level 2 L-shape, ..., and one level N L-shape so that cell (a,b) is contained in the level k_i L-shape.",
          "samples": [
            {
              "input": "3 1 2\n1\n2",
              "output": "6",
              "explanation": "The six ways shown in the following figure are the solutions. In the figure, an integer k in a cell means that the cell belongs to the level k L-shape.\n\n"
            },
            {
              "input": "5 2 5\n3\n1 3 5",
              "output": "4\n32\n128",
              "explanation": null
            },
            {
              "input": "100 50 50\n4\n1 10 50 100",
              "output": "934228871\n758172260\n444239843\n0",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc190_c",
          "problem_letter": "C",
          "url": "https://arc190.contest.atcoder.jp/tasks/arc190_c?lang=en",
          "statement": "Problem Statement: Move one cell in the direction d_i. That is, if d_i isL, move left; ifR, move right; ifU, move up; ifD, move down by one cell. Then, let the destination cell be (h,w), and set A_{h,w} to a_i. \n (h_1,w_1) = (1,1), (h_{M},w_{M}) = (H,W), and M = H + W - 1. \n For every i with 1 \\leq i \\leq M-1, either (h_{i+1}, w_{i+1}) = (h_i + 1, w_i) or (h_{i+1}, w_{i+1}) = (h_i, w_i + 1).",
          "constraints": "Constraints: 2 \\leq H, W \\leq 200000 \n HW \\leq 200000 \n 0 \\leq A_{h,w} < 998244353 \n 1 \\leq Q \\leq 200000 \n 1 \\leq sh \\leq H, 1 \\leq sw \\leq W \n 0 \\leq a_i < 998244353 \n H, W, A_{h,w}, Q, sh, sw, and a_i are integers. \n Each d_i isL,R,U, orD. \n In each change, Takahashi can move one cell in the direction d_i.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nH\nW\nA_{1,1}\n...\nA_{1,W}\n\\vdots\nA_{H,1}\n...\nA_{H,W}\nQ\nsh\nsw\nd_1\na_1\n\\vdots\nd_Q\na_Q\n\nOutput: \n\nPrint Q lines.\n\nThe i -th line should contain the sum, modulo 998244353, of f(P) over all paths P after performing the i -th change to the grid.",
          "samples": [
            {
              "input": "2 3\n1 2 3\n4 5 6\n3 2 2\nU 7\nR 8\nL 9",
              "output": "456\n666\n822",
              "explanation": "Initially, Takahashi is at (2,2). \n Move up, then set A_{1,2} to 7. The value of f(P) for each path is:P=((1,1),(1,2),(1,3),(2,3)):f(P)=1 \\times 7 \\times 3 \\times 6=126.P=((1,1),(1,2),(2,2),(2,3)):f(P)=1 \\times 7 \\times 5 \\times 6=210.P=((1,1),(2,1),(2,2),(2,3)):f(P)=1 \\times 4 \\times 5 \\times 6=120. \n P=((1,1),(1,2),(1,3),(2,3)) : f(P)=1 \\times 7 \\times 3 \\times 6=126. \n P=((1,1),(1,2),(2,2),(2,3)) : f(P)=1 \\times 7 \\times 5 \\times 6=210. \n P=((1,1),(2,1),(2,2),(2,3)) : f(P)=1 \\times 4 \\times 5 \\times 6=120. \n Move right, then set A_{1,3} to 8. The value of f(P) for each path is:P=((1,1),(1,2),(1,3),(2,3)):f(P)=1 \\times 7 \\times 8 \\times 6=336.P=((1,1),(1,2),(2,2),(2,3)):f(P)=1 \\times 7 \\times 5 \\times 6=210.P=((1,1),(2,1),(2,2),(2,3)):f(P)=1 \\times 4 \\times 5 \\times 6=120. \n P=((1,1),(1,2),(1,3),(2,3)) : f(P)=1 \\times 7 \\times 8 \\times 6=336. \n P=((1,1),(1,2),(2,2),(2,3)) : f(P)=1 \\times 7 \\times 5 \\times 6=210. \n P=((1,1),(2,1),(2,2),(2,3)) : f(P)=1 \\times 4 \\times 5 \\times 6=120. \n Move left, then set A_{1,2} to 9. The value of f(P) for each path is:P=((1,1),(1,2),(1,3),(2,3)):f(P)=1 \\times 9 \\times 8 \\times 6=432.P=((1,1),(1,2),(2,2),(2,3)):f(P)=1 \\times 9 \\times 5 \\times 6=270.P=((1,1),(2,1),(2,2),(2,3)):f(P)=1 \\times 4 \\times 5 \\times 6=120. \n P=((1,1),(1,2),(1,3),(2,3)) : f(P)=1 \\times 9 \\times 8 \\times 6=432. \n P=((1,1),(1,2),(2,2),(2,3)) : f(P)=1 \\times 9 \\times 5 \\times 6=270. \n P=((1,1),(2,1),(2,2),(2,3)) : f(P)=1 \\times 4 \\times 5 \\times 6=120.\n\nP=((1,1),(1,2),(1,3),(2,3)) : f(P)=1 \\times 7 \\times 3 \\times 6=126. \n P=((1,1),(1,2),(2,2),(2,3)) : f(P)=1 \\times 7 \\times 5 \\times 6=210. \n P=((1,1),(2,1),(2,2),(2,3)) : f(P)=1 \\times 4 \\times 5 \\times 6=120.\n\nP=((1,1),(1,2),(1,3),(2,3)) : f(P)=1 \\times 7 \\times 8 \\times 6=336. \n P=((1,1),(1,2),(2,2),(2,3)) : f(P)=1 \\times 7 \\times 5 \\times 6=210. \n P=((1,1),(2,1),(2,2),(2,3)) : f(P)=1 \\times 4 \\times 5 \\times 6=120.\n\nP=((1,1),(1,2),(1,3),(2,3)) : f(P)=1 \\times 9 \\times 8 \\times 6=432. \n P=((1,1),(1,2),(2,2),(2,3)) : f(P)=1 \\times 9 \\times 5 \\times 6=270. \n P=((1,1),(2,1),(2,2),(2,3)) : f(P)=1 \\times 4 \\times 5 \\times 6=120."
            },
            {
              "input": "5 4\n147015809 294958521 852121867 499798308\n790350368 404692331 645419803 290531806\n275766153 896286651 239187926 945049742\n340760022 236352314 926236110 223464913\n287023679 590772036 340282357 521075891\n6 3 1\nU 344644511\nR 45812235\nD 260083498\nR 781118585\nL 156297846\nL 411901560",
              "output": "299123226\n548055393\n810247224\n876210800\n773990840\n506814544",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc190_d",
          "problem_letter": "D",
          "url": "https://arc190.contest.atcoder.jp/tasks/arc190_d?lang=en",
          "statement": "Problem Statement: \n\nYou are given a prime number p and an N \\times N matrix A = (A_{i,j}) ( 1\\leq i,j\\leq N). Each element of A is an integer between 0 and p-1, inclusive.\n\nConsider a matrix B obtained by replacing each zero in A with an integer between 1 and p-1, inclusive. There are (p-1)^K such matrices B, where K is the number of zeros in A.\n\nFind each element, modulo p, of the sum of B^p over all possible B.",
          "constraints": "Constraints: 1 \\leq N \\leq 100 \n p is a prime such that 1 \\leq p \\leq 10^9. \n 0 \\leq A_{i,j} \\leq p-1 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\np\nA_{1,1}\n...\nA_{1,N}\n\\vdots\nA_{N,1}\n...\nA_{N,N}\n\nOutput: \n\nPrint N lines.\n\nThe i -th line should contain, in the order j=1,...,N, the (i,j) element of the sum, modulo p, of B^p over all possible B, separated by spaces.",
          "samples": [
            {
              "input": "2 3\n0 1\n0 2",
              "output": "0 2\n1 2",
              "explanation": "B^p for all possible B are as follows:\n\nPrint each element, modulo p=3, of their sum \\begin{pmatrix}48&44 67&65\\end{pmatrix}.\n\n\\begin{pmatrix}1&1 \\\\ 1&2\\end{pmatrix}^3=\\begin{pmatrix}5&8 \\\\ 8&13\\end{pmatrix} \n \\begin{pmatrix}1&1 \\\\ 2&2\\end{pmatrix}^3=\\begin{pmatrix}9&9 \\\\ 18&18\\end{pmatrix} \n \\begin{pmatrix}2&1 \\\\ 1&2\\end{pmatrix}^3=\\begin{pmatrix}14&13 \\\\ 13&14\\end{pmatrix} \n \\begin{pmatrix}2&1 \\\\ 2&2\\end{pmatrix}^3=\\begin{pmatrix}20&14 \\\\ 28&20\\end{pmatrix}"
            },
            {
              "input": "3 2\n1 0 0\n0 1 0\n0 0 1",
              "output": "1 1 1\n1 1 1\n1 1 1",
              "explanation": "B^p for all possible B are as follows:\n\nPrint each element, modulo p=2, of their sum \\begin{pmatrix}3&3&3 3&3&3 3&3&3\\end{pmatrix}.\n\n\\begin{pmatrix}1&1&1 \\\\ 1&1&1 \\\\ 1&1&1\\end{pmatrix}^2=\\begin{pmatrix}3&3&3\\\\3&3&3\\\\3&3&3\\end{pmatrix}"
            },
            {
              "input": "4 13\n0 1 2 0\n3 4 0 5\n0 6 0 7\n8 9 0 0",
              "output": "8 0 6 5\n11 1 8 5\n8 0 4 12\n8 0 1 9",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc190_e",
          "problem_letter": "E",
          "url": "https://arc190.contest.atcoder.jp/tasks/arc190_e?lang=en",
          "statement": "Problem Statement: Choose integers i and j with 1 \\leq i, j \\leq |B| such that B_i \\ge 1, B_j \\ge 1, and 1 \\leq j - i \\leq 2. Subtract 1 from B_i and B_j.",
          "constraints": "Constraints: 1 \\leq N \\leq 200000 \n 1 \\leq Q \\leq 200000 \n 0 \\leq A_i \\leq 10^9 \n 1 \\leq L_i \\leq R_i \\leq N \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nQ\nA_1\n...\nA_N\nL_1\nR_1\n\\vdots\nL_Q\nR_Q\n\nOutput: \n\nPrint Q lines.\n\nThe i -th line should contain the maximum number of times the operation can be performed for B = (A_{L_i}, ..., A_{R_i}).",
          "samples": [
            {
              "input": "6 1\n1 1 4 0 3 2\n1 6",
              "output": "5",
              "explanation": "In this example, we solve the problem for B = (1,1,4,0,3,2). We can perform five operations as follows:\n\nChoose i=1 and j=3. Then B = (0,1,3,0,3,2). \n Choose i=2 and j=3. Then B = (0,0,2,0,3,2). \n Choose i=3 and j=5. Then B = (0,0,1,0,2,2). \n Choose i=5 and j=6. Then B = (0,0,1,0,1,1). \n Choose i=5 and j=6. Then B = (0,0,1,0,0,0)."
            },
            {
              "input": "6 6\n49 83 10 77 21 62\n1 1\n1 2\n1 3\n3 5\n1 6\n5 6",
              "output": "0\n49\n59\n31\n151\n21",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "arc191",
      "url": "https://arc191.contest.atcoder.jp/?lang=en",
      "start_time": "2025-01-26T12:00:00",
      "problems": [
        {
          "id": "arc191_a",
          "problem_letter": "A",
          "url": "https://arc191.contest.atcoder.jp/tasks/arc191_a?lang=en",
          "statement": "Problem Statement: Choose an integer i such that 1 \\le i \\le N. Then, replace the i -th character of S with the k -th character of T.",
          "constraints": "Constraints: 1 \\le N,M \\le 10^6 \n N and M are integers. \n S is a string of length N consisting of digits from1through9. \n T is a string of length M consisting of digits from1through9.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nS\nT\n\nOutput: \n\nPrint the maximum possible value of the resulting string S interpreted as an integer after performing the M operations.",
          "samples": [
            {
              "input": "3 3\n191\n325",
              "output": "593",
              "explanation": "The following sequence of operations is optimal:\n\nIn this case, the value of S interpreted as an integer is 593, which is the maximum.\n\nFor k=1 : Choose i=3. Then, S =193. \n For k=2 : Choose i=1. Then, S =293. \n For k=3 : Choose i=1. Then, S =593."
            },
            {
              "input": "3 9\n191\n998244353",
              "output": "993",
              "explanation": null
            },
            {
              "input": "11 13\n31415926535\n2718281828459",
              "output": "98888976555",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc191_b",
          "problem_letter": "B",
          "url": "https://arc191.contest.atcoder.jp/tasks/arc191_b?lang=en",
          "statement": "Problem Statement: The bitwise XOR of X and N is equal to the remainder when X is divided by N. \n In the binary representation of A\\ \\mathrm{XOR}\\ B, the digit in the 2^k place (for k \\geq 0) is 1 if and only if exactly one of A and B has a 1 in the 2^k place in its binary representation. Otherwise, it is 0.",
          "constraints": "Constraints: 1 \\le T \\le 2\\times 10^5 \n 1 \\le N,K \\le 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nT\n\\text{case}_1\n\\text{case}_2\n\\vdots\n\\text{case}_T\n\nHere, \\text{case}_i denotes the i -th test case.Each test case is given in the following format:\n\nN\nK\n\nOutput: \n\nFor each test case, if there exist at least K positive integers that are compatible with N, print the K -th smallest such integer. Otherwise, print-1.",
          "samples": [
            {
              "input": "4\n2 1\n2 2\n1 7\n20250126 191",
              "output": "2\n3\n-1\n20381694",
              "explanation": "Consider the case N=2.\n\nHence, among the numbers that are compatible with 2, the smallest is 2 and the second smallest is 3. Therefore, the answer to \\text{case}_1 is 2 and the answer to \\text{case}_2 is 3.\n\nWhen X=1, X\\ \\mathrm{XOR}\\ N = 3 and the remainder of X when divided by N is 1. Therefore, 1 is not compatible with N. \n When X=2, X\\ \\mathrm{XOR}\\ N = 0 and the remainder of X when divided by N is 0. Therefore, 2 is compatible with N. \n When X=3, X\\ \\mathrm{XOR}\\ N = 1 and the remainder of X when divided by N is 1. Therefore, 3 is compatible with N."
            }
          ]
        },
        {
          "id": "arc191_c",
          "problem_letter": "C",
          "url": "https://arc191.contest.atcoder.jp/tasks/arc191_c?lang=en",
          "statement": "Problem Statement: Both A and M are positive integers between 1 and 10^{18}, inclusive. \n There exists a positive integer n such that A^n - 1 is a multiple of M, and the smallest such n is N.",
          "constraints": "Constraints: 1 \\le T \\le 10^4 \n 1 \\le N \\le 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nT\n\\text{case}_1\n\\text{case}_2\n\\vdots\n\\text{case}_T\n\nHere, \\text{case}_i denotes the i -th test case. Each test case is given in the following format:\n\nN\n\nOutput: \n\nFor each test case, print a pair of positive integers (A, M) in the following format:\n\nA\nM\n\nIf there are multiple valid solutions, any one of them is considered correct.",
          "samples": [
            {
              "input": "4\n3\n16\n1\n55",
              "output": "2 7\n11 68\n20250126 1\n33 662",
              "explanation": "Consider \\text{case}_1.\n\nFor example, if we choose (A,M)=(2,7), then:\n\nHence, the smallest n for which A^n - 1 is a multiple of M is 3. Therefore, (A,M)=(2,7) is a correct solution. Other valid solutions include (A,M)=(100,777).\n\nWhen n=1 : 2^1 - 1 = 1 is not a multiple of 7. \n When n=2 : 2^2 - 1 = 3 is not a multiple of 7. \n When n=3 : 2^3 - 1 = 7 is a multiple of 7."
            }
          ]
        },
        {
          "id": "arc191_d",
          "problem_letter": "D",
          "url": "https://arc191.contest.atcoder.jp/tasks/arc191_d?lang=en",
          "statement": "Problem Statement: Choose either piece A or piece B, and move it from its current vertex to an adjacent vertex via an edge. However, you cannot make a move that results in both pieces ending up on the same vertex.",
          "constraints": "Constraints: 2 \\le N \\le 2\\times 10^5 \n \\displaystyle N-1 \\le M \\le \\min\\left(\\frac{N(N-1)}{2},\\,2\\times 10^5\\right) \n 1 \\le u_i < v_i \\le N \n The given graph is simple and connected. \n 1 \\le S, T \\le N \n S \\neq T \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nM\nS\nT\nu_1\nv_1\nu_2\nv_2\n\\vdots\nu_M\nv_M\n\nOutput: \n\nIf it is impossible to achieve the goal, print-1.\n\nIf it is possible, print the minimum number of operations required.",
          "samples": [
            {
              "input": "4 4 3 4\n2 4\n1 4\n3 4\n2 3",
              "output": "3",
              "explanation": "For example, the following sequence of operations completes the goal in three moves:\n\nIt is impossible to complete the goal in fewer than three moves, so print 3.\n\nPiece A is on vertex 2, piece B is on vertex 4.\n\nPiece A is on vertex 2, piece B is on vertex 3.\n\nPiece A is on vertex 4, piece B is on vertex 3."
            },
            {
              "input": "2 1 1 2\n1 2",
              "output": "-1",
              "explanation": "No matter how you move the pieces, you cannot achieve the goal."
            },
            {
              "input": "5 6 3 5\n1 2\n2 3\n1 5\n2 4\n1 3\n2 5",
              "output": "4",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc191_e",
          "problem_letter": "E",
          "url": "https://arc191.contest.atcoder.jp/tasks/arc191_e?lang=en",
          "statement": "Problem Statement: Choose one bag held by the player with at least one gold coin or silver coin in it, and do one of the following two actions for that bag.Remove one gold coin and add silver coins; the number of silver coins to be added isXfor Takahashi andYfor Aoki. This action can only be done if the chosen bag has at least one gold coin.Remove one silver coin. This action can only be done if the chosen bag has at least one silver coin. \n Remove one gold coin and add silver coins; the number of silver coins to be added is X for Takahashi and Y for Aoki. This action can only be done if the chosen bag has at least one gold coin. \n Remove one silver coin. This action can only be done if the chosen bag has at least one silver coin. \n Then, give the chosen bag to the other player.",
          "constraints": "Constraints: 1 \\le N \\le 2\\times 10^5 \n 1 \\le X, Y \\le 10^9 \n 0 \\le A_i, B_i \\le 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nX\nY\nA_1\nB_1\nA_2\nB_2\n\\vdots\nA_N\nB_N\n\nOutput: \n\nPrint the number, modulo 998244353, of ways Takahashi can initially take bags so that he will win under optimal play by both players.",
          "samples": [
            {
              "input": "2 1 1\n1 0\n1 1",
              "output": "2",
              "explanation": "Consider the case where Takahashi initially takes bags 1 and 2. One possible progression of the game is as follows:\n\nTakahashi can win if he initially takes only bag 2, or if he takes both bags 1 and 2. Therefore, the answer is 2.\n\nTakahashi holds bag 1 with 1 gold coin. Aoki holds bag 2 with 2 silver coins.\n\nTakahashi holds bags 1 with 1 gold coin and bag 2 with 1 silver coin. Aoki holds none.\n\nTakahashi holds bag 2 with 1 silver coin. Aoki holds bag 1 with 1 silver coin.\n\nTakahashi holds bag 1 which is empty and bag 2 with 1 silver coin. Aoki holds none.\n\nTakahashi holds bag 1 which is empty. Aoki holds bag 2 which is empty."
            },
            {
              "input": "2 2 1\n1 2\n1 2",
              "output": "3",
              "explanation": "Takahashi wins if he initially takes bag 1, bag 2, or both."
            },
            {
              "input": "5 8 3\n0 0\n0 0\n0 0\n0 0\n0 0",
              "output": "0",
              "explanation": "No matter how Takahashi chooses the bags initially, he will lose."
            },
            {
              "input": "7 2025 191\n1323 9953\n2763 3225\n2624 5938\n6718 2998\n3741 7040\n9837 1681\n8817 4471",
              "output": "40",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "arc192",
      "url": "https://arc192.contest.atcoder.jp/?lang=en",
      "start_time": "2025-02-09T12:00:00",
      "problems": [
        {
          "id": "arc192_a",
          "problem_letter": "A",
          "url": "https://arc192.contest.atcoder.jp/tasks/arc192_a?lang=en",
          "statement": "Problem Statement: Perform one of the following operations:Choose an integeriwith1\\leq i\\leq Nsuch thatS_i=A,S_{i+1}=R, andS_{i+2}=C, and replace each ofA_iandA_{i+1}with1.Choose an integeriwith1\\leq i\\leq Nsuch thatS_{i+2}=A,S_{i+1}=R, andS_i=C, and replace each ofA_iandA_{i+1}with1. \n Choose an integer i with 1\\leq i\\leq N such that S_i=A, S_{i+1}=R, and S_{i+2}=C, and replace each of A_i and A_{i+1} with 1. \n Choose an integer i with 1\\leq i\\leq N such that S_{i+2}=A, S_{i+1}=R, and S_i=C, and replace each of A_i and A_{i+1} with 1.",
          "constraints": "Constraints: 3\\leq N\\leq 200000 \n A_i\\in \\lbrace 0,1 \\rbrace (1\\leq i\\leq N) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nIf there exists a good string, printYes ; otherwise, printNo.\n\nThe judge is case-insensitive; for example, if the correct answer isYes, outputs such asyes,YES, oryEs will also be accepted.",
          "samples": [
            {
              "input": "12\n0 1 0 1 1 1 1 0 1 1 1 0",
              "output": "Yes",
              "explanation": "For example,RARCARCCRAGCis a good string. This is because it is possible to change all elements of A to 1 by performing the following operations:\n\nSince there exists a good string, outputYes.\n\nInitially, A=(0,1,0,1,1,1,1,0,1,1,1,0). \n Perform the first operation with i=2. Then, A=(0,1,1,1,1,1,1,0,1,1,1,0). \n Perform the first operation with i=5. Then, A=(0,1,1,1,1,1,1,0,1,1,1,0). \n Perform the second operation with i=8. Then, A=(0,1,1,1,1,1,1,1,1,1,1,0). \n Perform the second operation with i=12. Then, A=(1,1,1,1,1,1,1,1,1,1,1,1)."
            },
            {
              "input": "3\n0 0 0",
              "output": "No",
              "explanation": "Good strings do not exist."
            },
            {
              "input": "29\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
              "output": "Yes",
              "explanation": "Since A already contains no 0, every string of length 29 consisting of uppercase English letters is a good string."
            }
          ]
        },
        {
          "id": "arc192_b",
          "problem_letter": "B",
          "url": "https://arc192.contest.atcoder.jp/tasks/arc192_b?lang=en",
          "statement": "Problem Statement: Choose an index i such that 1\\leq A_i. Subtract 1 from A_i, and if i\\notin S, add i to S. \n If S=\\lbrace 1,2,\\dots,N \\rbrace, the game ends and the player who performed the last operation wins.",
          "constraints": "Constraints: 1\\leq N\\leq 2\\times 10^5 \n 1\\leq A_i\\leq 10^9 (1\\leq i\\leq N) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrintFennec if Fennec wins, orSnuke if Snuke wins.\n\nThe judge is case-insensitive; for example, if the correct answer isFennec, outputs such asfennec,FENNEC, orfEnNeC will also be accepted.",
          "samples": [
            {
              "input": "3\n1 9 2",
              "output": "Fennec",
              "explanation": "For example, the game may proceed as follows:\n\nThis sequence of moves may not be optimal; however, it can be shown that even when both players play optimally, Fennec will win.\n\nInitially, A=(1,9,2) and S is empty. \n Fennec chooses index 2. Then, A=(1,8,2) and S=\\lbrace 2 \\rbrace. \n Snuke chooses index 2. Then, A=(1,7,2) and S=\\lbrace 2 \\rbrace. \n Fennec chooses index 1. Then, A=(0,7,2) and S=\\lbrace 1,2 \\rbrace. \n Snuke chooses index 2. Then, A=(0,6,2) and S=\\lbrace 1,2 \\rbrace. \n Fennec chooses index 3. Then, A=(0,6,1) and S=\\lbrace 1,2,3 \\rbrace. The game ends with Fennec declared the winner."
            },
            {
              "input": "2\n25 29",
              "output": "Snuke",
              "explanation": null
            },
            {
              "input": "6\n1 9 2 25 2 9",
              "output": "Snuke",
              "explanation": null
            }
          ]
        },
        {
          "id": "arc192_c",
          "problem_letter": "C",
          "url": "https://arc192.contest.atcoder.jp/tasks/arc192_c?lang=en",
          "statement": "Problem Statement: Specify twodistinctpositive integers s and t with 1\\leq s,t\\leq N, and you will be given the value of \\displaystyle \\sum_{i=\\min(P_s,P_t)}^{\\max(P_s,P_t)}A_i.",
          "constraints": "Constraints: 3\\leq N\\leq 5000 \n 1\\leq P_i\\leq N (1\\leq i\\leq N) \n P_i\\ne P_j for i\\ne j. \n P_1<P_2 \n 1\\leq A_i\\leq 10^9 (1\\leq i\\leq N) \n N, P_i, and A_i are integers. \n P and A are fixed before the interaction with the judge.",
          "io_format": null,
          "samples": []
        },
        {
          "id": "arc192_d",
          "problem_letter": "D",
          "url": "https://arc192.contest.atcoder.jp/tasks/arc192_d?lang=en",
          "statement": "Problem Statement: For every integer i with 1\\leq i\\leq N-1, it holds that f\\left(\\dfrac{S_i}{S_{i+1}}\\right)=A_i. \n \\gcd(S_1,S_2,\\dots,S_N)=1.",
          "constraints": "Constraints: 2\\leq N\\leq 1000 \n 1\\leq A_i\\leq 1000 (1\\leq i\\leq N-1) \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nA_1\nA_2\n...\nA_{N-1}\n\nOutput: \n\nPrint the sum, modulo 998244353, of the scores of all good sequences.",
          "samples": [
            {
              "input": "6\n1 9 2 2 9",
              "output": "939634344",
              "explanation": "For example, both (2,2,18,9,18,2) and (18,18,2,1,2,18) are good sequences, and both have a score of 23328.\n\nThere are a total of 16 good sequences, and the sum of the scores of all of them is 939634344."
            },
            {
              "input": "2\n9",
              "output": "18",
              "explanation": "There are 2 good sequences, both with a score of 9."
            },
            {
              "input": "25\n222 299 229 22 999 922 99 992 22 292 222 229 992 922 22 992 222 222 99 29 92 999 2 29",
              "output": "192457116",
              "explanation": "Do not forget to compute the sum modulo 998244353."
            }
          ]
        },
        {
          "id": "arc192_e",
          "problem_letter": "E",
          "url": "https://arc192.contest.atcoder.jp/tasks/arc192_e?lang=en",
          "statement": "Problem Statement: 0\\leq x\\leq W \n 0\\leq y\\leq H \n x<L or R<x or y<D or U<y \n First, he chooses one block and stands there. \n Then, he performs the following operation any number of times (possibly zero):Move one unit in the positive direction of thex-axis or the positive direction of they-axis. However, the point after moving must also have a block. \n Move one unit in the positive direction of the x -axis or the positive direction of the y -axis. However, the point after moving must also have a block.",
          "constraints": "Constraints: 0\\leq L\\leq R\\leq W\\leq 10^6 \n 0\\leq D\\leq U\\leq H\\leq 10^6 \n There is at least one block. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nW\nH\nL\nR\nD\nU\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "4 3 1 2 2 3",
              "output": "192",
              "explanation": "The following are examples of possible paths. Here, a path is represented by listing the lattice points visited in order.\n\nThere are 192 possible paths.\n\n(3,0) \n (0,0)\\rightarrow (1,0)\\rightarrow (2,0)\\rightarrow (2,1)\\rightarrow (3,1)\\rightarrow (3,2)\\rightarrow (4,2)\\rightarrow (4,3) \n (0,1)\\rightarrow (0,2)"
            },
            {
              "input": "10 12 4 6 8 11",
              "output": "4519189",
              "explanation": null
            },
            {
              "input": "192 25 0 2 0 9",
              "output": "675935675",
              "explanation": "Do not forget to print the number of paths modulo 998244353."
            }
          ]
        }
      ]
    },
    {
      "id": "awtf2024",
      "url": "https://awtf2024.contest.atcoder.jp/?lang=en",
      "start_time": "2024-07-12T04:45:00",
      "problems": [
        {
          "id": "awtf2024_a",
          "problem_letter": "A",
          "url": "https://awtf2024.contest.atcoder.jp/tasks/awtf2024_a?lang=en",
          "statement": "Problem Statement: Movement of each slime: Let R be the total weight of slimes at coordinates greater than its own, and L be the total weight of slimes at coordinates less than its own. \nThen, it moves with a velocity of R-L. Note that the velocity can be negative. That is, it moves in the negative direction if R-L<0.",
          "constraints": "Constraints: 2 \\leq K \\leq N \\leq 250000 \n 0 = A_1 < A_2 < \\cdots < A_N \\leq 10^9 \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nK\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nPrint the answer as a real number. \nIt will be considered correct if the absolute or relative error is at most 10^{-9}.",
          "samples": [
            {
              "input": "3 2\n0 1 2",
              "output": "1.00000000000000000000",
              "explanation": "Thus, the answer is 1.\n\nChoosing the 1st and 2nd slimes results in t=0.5. \n Choosing the 1st and 3rd slimes results in t=1. \n Choosing the 2nd and 3rd slimes results in t=0.5."
            },
            {
              "input": "4 3\n0 1 4 9",
              "output": "2.83333333333333333333",
              "explanation": "If you choose the 1st, 2nd, and 4th slimes, the slimes move as follows:\n\nIt is impossible to make t larger than 17/6, so this is the answer.\n\nFor convenience, call the 1st, 2nd, and 4th slimes X, Y, and Z, respectively. \n At time 0 : X, Y, and Z start moving with velocity +2, 0, and -2, respectively. \n At time 1/2 : X and Y merge at coordinate 1. The merged slime, called XY, starts moving with velocity 1. On the other hand, Z is at coordinate 8 and continues moving with velocity -2. \n At time 17/6 : XY and Z merge at coordinate 10/3. Thus, t=17/6."
            },
            {
              "input": "4 4\n0 1 2 3",
              "output": "0.50000000000000000000",
              "explanation": null
            },
            {
              "input": "20 6\n0 3441380 120768398 229897071 231209282 232046760 254924545 325399248 385631087 400098966 480503302 501372095 502644652 524585010 541761042 691400171 725009462 767549897 837806226 927396743",
              "output": "135453315.33333333333333333333",
              "explanation": null
            }
          ]
        },
        {
          "id": "awtf2024_b",
          "problem_letter": "B",
          "url": "https://awtf2024.contest.atcoder.jp/tasks/awtf2024_b?lang=en",
          "statement": "Problem Statement: Randomly choose an inversion pair (i, j). The choice is independent of previous choices and is uniformly random.\r\n  Then, swap the i -th and j -th characters of S.",
          "constraints": "Constraints: 1 \\leq N \\leq 250000 \n S is a string of length N consisting of0and1.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "2\n10",
              "output": "1",
              "explanation": "The expected number of operations is 1."
            },
            {
              "input": "3\n110",
              "output": "499122178",
              "explanation": "The expected number of operations is 3/2."
            },
            {
              "input": "1\n0",
              "output": "0",
              "explanation": null
            },
            {
              "input": "10\n1011000010",
              "output": "133099253",
              "explanation": null
            },
            {
              "input": "100\n0101110010001000111000111001001101001100000111110001010010001010101100011001011011101101100001100111",
              "output": "407907276",
              "explanation": null
            }
          ]
        },
        {
          "id": "awtf2024_c",
          "problem_letter": "C",
          "url": "https://awtf2024.contest.atcoder.jp/tasks/awtf2024_c?lang=en",
          "statement": "Problem Statement: \n\nSolve the following problem for T test cases.\n\nYou are currently at coordinate 0 on a number line, and you want to reach coordinate L.\n\nYou will use a car for the movement. This car runs on two types of fuel: types 1 and 2. For each type, the car has a fuel tank of that type with a capacity of C liters. Currently, both fuel tanks are full. The car can consume x liters of either type of fuel (where x is any positive integer not exceeding the remaining fuel) to move x units in any direction on the number line. You can choose which type of fuel to use for each movement.\n\nThere are N fuel stations on the number line. The i -th fuel station is located at coordinate X_i. When the car is exactly at coordinate X_i, you can buy type- K_i fuel at a cost of 1 per liter. Of course, you cannot buy more fuel than allowed by the tank capacity.\n\nDetermine whether it is possible to reach coordinate L. If it is possible, find the minimum total cost of purchasing fuel.",
          "constraints": "Constraints: 1 \\leq T \\leq 250000 \n 1 \\leq N \\leq 5000 \n 1 \\leq L \\leq 10^9 \n 1 \\leq C \\leq 10^9 \n 0 < X_1 < X_2 < \\cdots < X_N < L \n K_i=1 or 2 \n The sum of N^2 across all test cases in a single input does not exceed 5000^2. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nT\ncase_1\ncase_2\n\\vdots\ncase_T\n\nEach test case is given in the following format:\n\nN\nL\nC\nX_1\nX_2\n...\nX_N\nK_1\nK_2\n...\nK_N\n\nOutput: \n\nPrint T lines.\nIn the i -th line, for the i -th test case, print -1 if it is impossible to reach coordinate L, and print the minimum total cost of purchasing fuel otherwise.",
          "samples": [
            {
              "input": "5\n1 10 4\n7\n1\n1 10 6\n7\n1\n2 12 3\n5 7\n1 1\n2 12 3\n5 7\n1 2\n20 749013197 23809523\n46981984 70791437 118235723 132421762 180040807 203849360 251468335 275277857 322889975 346699150 394318091 418113855 465732891 489532137 537144103 558852533 606466719 630275002 677584754 701394209\n1 2 2 1 1 2 1 2 1 2 2 1 2 1 2 1 1 2 1 2",
              "output": "2\n0\n-1\n6\n585545066743659",
              "explanation": "Let us explain the first test case.\nYou can reach coordinate L with a cost of 2 as follows:\n\nIt is impossible to reach coordinate L with a cost less than 2. Thus, the answer is 2.\n\nConsume 3 liters of type- 1 fuel to move from coordinate 0 to 3. The remaining type- 1 fuel is 1 liter. \n Consume 4 liters of type- 2 fuel to move from coordinate 3 to 7. The remaining type- 2 fuel is 0 liters. \n Buy 2 liters of type- 1 fuel at the fuel station. The remaining type- 1 fuel is 3 liters. \n Consume 3 liters of type- 1 fuel to move from coordinate 7 to 10. The remaining type- 1 fuel is 0 liters."
            }
          ]
        },
        {
          "id": "awtf2024_d",
          "problem_letter": "D",
          "url": "https://awtf2024.contest.atcoder.jp/tasks/awtf2024_d?lang=en",
          "statement": "Problem Statement: The number of indices i such that P_i > P_{i+1} is at most 1.",
          "constraints": "Constraints: 2 \\leq N \\leq 800000 \n (P_1,P_2,\\cdots,P_N) is a permutation of (1,2,\\cdots,N). \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nP_1\nP_2\n...\nP_N\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3\n3 2 1",
              "output": "1",
              "explanation": "Swapping P_1 and P_2 turns P into (2,3,1), which satisfies the condition."
            },
            {
              "input": "4\n2 4 1 3",
              "output": "0",
              "explanation": null
            },
            {
              "input": "6\n2 3 1 6 4 5",
              "output": "1",
              "explanation": null
            },
            {
              "input": "20\n8 13 6 11 20 3 12 18 17 4 10 1 7 16 19 5 2 15 14 9",
              "output": "36",
              "explanation": null
            }
          ]
        },
        {
          "id": "awtf2024_e",
          "problem_letter": "E",
          "url": "https://awtf2024.contest.atcoder.jp/tasks/awtf2024_e?lang=en",
          "statement": "Problem Statement: Choose a position (a,b) ( 1 \\leq a \\leq N-h+1,\\ 1 \\leq b \\leq N-w+1). Then, color all cells (i,j) ( a \\leq i \\leq a+h-1, b \\leq j \\leq b+w-1) with the color of stamp (h,w). If a cell is already colored, the color will be overwritten.",
          "constraints": "Constraints: 1 \\leq T \n 2 \\leq N \\leq 400 \n 0 \\leq K < N^2 \n 1 \\leq H_i,W_i \\leq N \n 1 \\leq A_i \\leq N-H_i+1 \n 1 \\leq B_i \\leq N-W_i+1 \n (H_i,W_i) \\neq (H_j,W_j) ( i \\neq j) \n The sum of N^2 across all test cases in a single input does not exceed 400^2. \n You are only provided with inputs where you can achieve the goal by pressing the remaining stamps in an appropriate order and positions. \n All input values are integers.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nT\ncase_1\ncase_2\n\\vdots\ncase_T\n\nEach test case is given in the following format:\n\nN\nK\nH_1\nW_1\nA_1\nB_1\nH_2\nW_2\nA_2\nB_2\n\\vdots\nH_K\nW_K\nA_K\nB_K\n\nOutput: \n\nFor each test case, print an answer in the following format:\n\nh_1\nw_1\na_1\nb_1\nh_2\nw_2\na_2\nb_2\n\\vdots\nh_{N^2-K}\nw_{N^2-K}\na_{N^2-K}\nb_{N^2-K}\n\nThis means that the i -th stamp to be pressed (excluding the already pressed K stamps) is (h_i,w_i), and its position is (a_i,b_i).",
          "samples": [
            {
              "input": "4\n2 2\n2 2 1 1\n1 2 2 1\n2 0\n3 3\n3 3 1 1\n3 2 1 2\n2 3 1 1\n5 15\n5 5 1 1\n4 5 2 1\n5 4 1 1\n4 4 2 1\n3 5 3 1\n2 5 4 1\n1 5 4 1\n5 3 1 1\n3 4 3 1\n2 4 3 1\n4 3 2 1\n1 4 4 1\n3 3 3 1\n2 3 4 1\n1 3 5 1",
              "output": "2 1 1 1\n1 1 2 1\n\n2 2 1 1\n2 1 1 1\n1 2 1 1\n1 1 1 1\n\n2 2 1 2\n3 1 1 2\n1 3 2 1\n1 2 2 1\n2 1 1 2\n1 1 1 2\n\n5 2 1 1\n4 2 1 1\n3 2 1 1\n5 1 1 1\n2 2 1 1\n4 1 1 1\n1 2 1 1\n3 1 1 1\n2 1 1 1\n1 1 1 1",
              "explanation": "Consider the first test case.\n\nIf we let i denote the color of the i -th pressed stamp (including the already pressed K stamps), the board changes as follows:\n\nNote that the sample output includes extra newlines for readability, but you do not need to print these (although you may if you wish)."
            }
          ]
        }
      ]
    },
    {
      "id": "ttpc2024_1",
      "url": "https://ttpc2024_1.contest.atcoder.jp/?lang=en",
      "start_time": "2024-12-15T04:00:00",
      "problems": [
        {
          "id": "ttpc2024_1_a",
          "problem_letter": "A",
          "url": "https://ttpc2024_1.contest.atcoder.jp/tasks/ttpc2024_1_a?lang=en",
          "statement": "Problem Statement: For i = 1, 2, \\dots, M, repeat the following:If there is already a cycle inGcontaining either vertexu_{P_i}or vertexv_{P_i}, the condition is not satisfied, and the procedure ends.Add edgeP_i(the undirected edge connectingu_{P_i}andv_{P_i}) toG. \n If there is already a cycle in G containing either vertex u_{P_i} or vertex v_{P_i}, the condition is not satisfied, and the procedure ends. \n Add edge P_i (the undirected edge connecting u_{P_i} and v_{P_i}) to G. \n L \\ge 1i \\neq j \\implies v_i \\neq v_j, e_i \\neq e_jFor0 \\le i \\le L - 2, edgee_iconnects verticesv_iandv_{i+1}Edgee_{L-1}connects verticesv_{L-1}andv_0 \n i \\neq j \\implies v_i \\neq v_j, e_i \\neq e_jFor0 \\le i \\le L - 2, edgee_iconnects verticesv_iandv_{i+1}Edgee_{L-1}connects verticesv_{L-1}andv_0 \n For 0 \\le i \\le L - 2, edge e_i connects vertices v_i and v_{i+1}Edgee_{L-1}connects verticesv_{L-1}andv_0 \n Edge e_{L-1} connects vertices v_{L-1} and v_0",
          "constraints": "Constraints: All input values are integers. \n 1 \\le T \\le 2000 \n For each test case:2 \\le N \\le 40001 \\le M \\le 40001 \\le u_i, v_i \\le N\\ (1 ≤ i ≤ M)The graph formed by adding all given edges is simple. \n 2 \\le N \\le 4000 \n 1 \\le M \\le 4000 \n 1 \\le u_i, v_i \\le N\\ (1 ≤ i ≤ M) \n The graph formed by adding all given edges is simple. \n The sum of N over all test cases is at most 4000. \n The sum of M over all test cases is at most 4000.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nT\n\\text{case}_1\n\\text{case}_2\n\\vdots\n\\text{case}_T\n\nHere, \\text{case}_i (1 ≤ i ≤ T) represents the i -th test case. Each test case is given in the following format:\n\nN\nM\nu_1\nv_1\nu_2\nv_2\n\\vdots\nu_M\nv_M\n\nOutput: \n\nFor each test case, if a permutation (P_1, P_2, ..., P_M) satisfying the conditions exists, output such a P separated by spaces. If no such permutation exists, output-1.",
          "samples": [
            {
              "input": "1\n4 4\n1 2\n2 3\n3 4\n4 2",
              "output": "2 4 1 3",
              "explanation": "The given graph has the following shape:\n\n\n\nIf we add the edges in the order P = (1, 2, 3, 4), the conditions are satisfied as shown below:\n\n\n\nThus,1 2 3 4is one valid output.\n\nHowever, if we add edges in the order P = (2, 3, 4, 1), a cycle containing vertex 2 is created before edge 1 can be added, so the conditions are not satisfied.\n\n\n\nOther valid outputs include P = (1, 4, 3, 2) or P = (2, 4, 1, 3)."
            },
            {
              "input": "4\n4 5\n1 2\n2 3\n3 4\n3 1\n1 4\n5 3\n1 2\n2 3\n3 4\n9 10\n3 5\n1 8\n5 8\n4 9\n6 7\n7 9\n1 2\n1 4\n2 4\n4 6\n8 10\n1 4\n3 8\n2 5\n3 4\n1 5\n5 8\n2 8\n5 7\n4 5\n3 7",
              "output": "-1\n3 2 1\n4 10 2 8 7 9 6 5 3 1\n-1",
              "explanation": "If no valid P exists, output-1. Note that the graph is not necessarily connected."
            }
          ]
        },
        {
          "id": "ttpc2024_1_b",
          "problem_letter": "B",
          "url": "https://ttpc2024_1.contest.atcoder.jp/tasks/ttpc2024_1_b?lang=en",
          "statement": "Problem Statement: Set a variable C = 0. \n If A contains at least one 1, remove the first occurrence of 1 from A and add 1 to C. \n If A is not empty, remove the first element x of A and add x to C. \n Append C to the end of T. \n If A is empty, terminate the process. Otherwise, return to step 1.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le N \\le 10^6 \n 1 \\le S_i \\le 3",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS_1\nS_2\n...\nS_N\n\nOutput: \n\nOutput the number of sequences A that satisfy the conditions, modulo 998244353.",
          "samples": [
            {
              "input": "2\n3 2",
              "output": "5",
              "explanation": "There are 5 possible sequences A that result in T = (3, 2) : A = (1, 2, 2), (2, 1, 2), (2, 2, 1), (2, 1, 1, 1), (1, 2, 1, 1).\n\nFor example, for A = (2, 1, 1, 1), the process proceeds as follows:\n\nRemove the first occurrence of 1 in A, which is A_2 = 1. Now A = (2, 1, 1) and C = 1. \n Remove the first element of A, which is A_1 = 2. Now A = (1, 1) and C = 3. \n Append C to the end of T. Now T = (3). \n Remove the first occurrence of 1 in A, which is A_1 = 1. Now A = (1) and C = 1. \n Remove the first element of A, which is A_1 = 1. Now A = () and C = 2. \n Append C to the end of T. Now T = (3, 2)."
            },
            {
              "input": "6\n3 2 2 3 2 1",
              "output": "4",
              "explanation": null
            },
            {
              "input": "5\n3 2 1 3 2",
              "output": "0",
              "explanation": "Note that there may be cases where no sequence A produces S, in which case the answer is 0."
            }
          ]
        },
        {
          "id": "ttpc2024_1_c",
          "problem_letter": "C",
          "url": "https://ttpc2024_1.contest.atcoder.jp/tasks/ttpc2024_1_c?lang=en",
          "statement": "Problem Statement: 1 j x: Change the length of edge j to x. \n 2 s t: Find the shortest path length from vertex s to vertex t.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le N \\le 18 \n 1 \\le C_j \\le 10^7 (1 \\le j \\le 2^{N+1}-1) \n 1 \\le Q \\le 2 \\times 10^5 \n In the query1 j x, 1 \\le j \\le 2^{N+1}-1 and 1 \\le x \\le 10^7. \n In the query2 s t, 0 \\le s < t \\le 2^N. \n There is at least one2 s tquery.",
          "io_format": "Input: \n\nThe input is given in the following format. Note that vertex numbering starts from 0, while edge numbering starts from 1.\n\nN\nC_1\nC_2\n...\nC_{2^{N+1}-1}\nQ\n\\text{query}_1\n\\text{query}_2\n\\vdots\n\\text{query}_Q\n\nHere, \\text{query}_i represents the i -th query. Each query is given in one of the following formats:\n\n1j\nx\n\n2s\nt\n\nOutput: \n\nLet m be the number of queries of type2 s t. Output m lines, where the i -th line contains the answer to the i -th2 s t query.",
          "samples": [
            {
              "input": "3\n7 1 14 3 9 4 8 2 6 5 5 13 8 2 3\n10\n2 0 1\n2 0 4\n2 4 6\n2 4 8\n2 3 5\n1 6 30\n2 3 5\n2 4 6\n1 1 10000000\n2 0 8",
              "output": "2\n1\n4\n8\n17\n18\n13\n15",
              "explanation": "In the 1st query, using edge 8, the path 0 \\to 1 results in a total distance of 2. \n In the 2nd query, using edge 2, the path 0 \\to 4 results in a total distance of 1. \n In the 3rd query, using edge 6, the path 4 \\to 6 results in a total distance of 4. \n In the 4th query, using edges 2, 1, the path 4 \\to 0 \\to 8 results in a total distance of 8. \n In the 5th query, using edges 11, 6, 13, the path 3 \\to 4 \\to 6 \\to 5 results in a total distance of 17. \n In the 6th query, the length of edge 6 is updated from 4 to 30. \n In the 7th query, using edges 11, 12, the path 3 \\to 4 \\to 5 results in a total distance of 18. \n In the 8th query, using edges 2, 1, 15, 14, the path 4 \\to 0 \\to 8 \\to 7 \\to 6 results in a total distance of 13. \n In the 9th query, the length of edge 1 is updated from 7 to 10000000. \n In the 10th query, using edges 2, 3, the path 0 \\to 4 \\to 8 results in a total distance of 15."
            }
          ]
        },
        {
          "id": "ttpc2024_1_d",
          "problem_letter": "D",
          "url": "https://ttpc2024_1.contest.atcoder.jp/tasks/ttpc2024_1_d?lang=en",
          "statement": "Problem Statement: X_1 = A \n X_2 = B \n X_{i+2} = (X_i \\oplus X_{i+1}) + C\\ \\ (i=1,2,\\dots)",
          "constraints": "Constraints: All input values are integers. \n 0 \\leq A, B, C < 2^{20} \n 1 \\leq N \\leq 10^{18}",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nA\nB\nC\nN\n\nOutput: \n\nOutput X_N \\bmod 998244353.",
          "samples": [
            {
              "input": "1 2 3 4",
              "output": "7",
              "explanation": "X = (1, 2, 6, 7, ...). Here, X_4 = 7 is the answer."
            },
            {
              "input": "123 456 789 123456789",
              "output": "567982455",
              "explanation": null
            },
            {
              "input": "0 0 0 1000000000000000000",
              "output": "0",
              "explanation": null
            }
          ]
        },
        {
          "id": "ttpc2024_1_e",
          "problem_letter": "E",
          "url": "https://ttpc2024_1.contest.atcoder.jp/tasks/ttpc2024_1_e?lang=en",
          "statement": "Problem Statement: Operation 1 : Increase the robot's x coordinate by 1 and appendXto the end of S. This operation costs 1. \n Operation 2 : Increase the robot's y coordinate by 1 and appendYto the end of S. This operation costs 1. \n Operation 3 : Decrease the robot's x coordinate by 1 and remove the last character of S. This operation can only be performed if the last character of S isX. This operation costs 0. \n Operation 4 : Decrease the robot's y coordinate by 1 and remove the last character of S. This operation can only be performed if the last character of S isY. This operation costs 0.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le N \\le 500 \n 0 \\le X_i, Y_i \\le 10^9",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nX_1\nY_1\nX_2\nY_2\n\\vdots\nX_N\nY_N\n\nOutput: \n\nOutput the minimum cost required for the robot to visit all points in order.",
          "samples": [
            {
              "input": "2\n3 3\n1 2",
              "output": "6",
              "explanation": "By performing Operation 1 once, Operation 2 three times, and Operation 1 twice, you can reach point 1.Then, by performing Operation 3 twice and Operation 4 once, you can reach point 2.\n\nThe total cost of this sequence of operations is the sum of the number of times Operations 1 and 2 are performed, which is 6."
            },
            {
              "input": "3\n2 2\n3 3\n1 3",
              "output": "7",
              "explanation": null
            }
          ]
        },
        {
          "id": "ttpc2024_1_f",
          "problem_letter": "F",
          "url": "https://ttpc2024_1.contest.atcoder.jp/tasks/ttpc2024_1_f?lang=en",
          "statement": "Problem Statement: \n\nYou are given N lines on the xy -plane. The i -th line (1 \\le i \\le N) passes through two distinct points (a_i, b_i) and (c_i, d_i). Specifically, (a_1, b_1, c_1, d_1) = (0, 0, 1, 0) and (a_2, b_2, c_2, d_2) = (0, 0, 0, 1). That is, the first line represents the x -axis, and the second line represents the y -axis.\n\nAlice is on the xy -plane. She can perform the following operation any number of times (including zero):\n\nChoose one of the N given lines. Alice moves to the position symmetric to her current position with respect to the chosen line.\n\nAdditionally, we define that point P isreachable from point S if the following condition is satisfied:\n\nFor any real number \\varepsilon > 0, there exists a point Q such that the Euclidean distance between Q and P is at most \\varepsilon, and Alice can move from S to Q in a finite number of operations.\n\nAnswer Q queries.\nFor the i -th query (1 \\le i \\le Q), you are given integers X_i, Y_i, Z_i, W_i. OutputYes if (Z_i, W_i) is reachable from (X_i, Y_i). Otherwise, outputNo.\n\nSolve the problem for T test cases.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le T \\le 100 \n For each test case:2 \\le N \\le 20001 \\le Q \\le 2000-10^8 \\le a_i, b_i, c_i, d_i \\le 10^8 \\ (1 \\le i \\le N)(a_i, b_i) \\neq (c_i, d_i)(a_1, b_1, c_1, d_1) = (0, 0, 1, 0)(a_2, b_2, c_2, d_2) = (0, 0, 0, 1)All given lines are distinct.-10^8 \\le X_i, Y_i, Z_i, W_i \\le 10^8 \\ (1 \\le i \\le Q) \n 2 \\le N \\le 2000 \n 1 \\le Q \\le 2000 \n -10^8 \\le a_i, b_i, c_i, d_i \\le 10^8 \\ (1 \\le i \\le N) \n (a_i, b_i) \\neq (c_i, d_i) \n (a_1, b_1, c_1, d_1) = (0, 0, 1, 0) \n (a_2, b_2, c_2, d_2) = (0, 0, 0, 1) \n All given lines are distinct. \n -10^8 \\le X_i, Y_i, Z_i, W_i \\le 10^8 \\ (1 \\le i \\le Q)",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nT\n\\text{case}_1\n\\text{case}_2\n\\vdots\n\\text{case}_T\n\nHere, \\text{case}_i represents the i -th test case. Each test case is given in the following format:\n\nN\na_1\nb_1\nc_1\nd_1\na_2\nb_2\nc_2\nd_2\n\\vdots\na_N\nb_N\nc_N\nd_N\nQ\nX_1\nY_1\nZ_1\nW_1\nX_2\nY_2\nZ_2\nW_2\n\\vdots\nX_Q\nY_Q\nZ_Q\nW_Q\n\nOutput: \n\nFor each test case, output Q lines. The i -th line (1 \\le i \\le Q) should contain the answer to the i -th query. The judge is case-insensitive forYes andNo.",
          "samples": [
            {
              "input": "2\n3\n0 0 1 0\n0 0 0 1\n0 2 2 0\n4\n1 0 2 3\n1 -2 -1 2\n1 1 -1 0\n3 3 3 3\n3\n0 0 1 0\n0 0 0 1\n-2 1 2 3\n2\n2 1 -1 5\n-1 -1 3 3",
              "output": "Yes\nYes\nNo\nYes\nYes\nYes",
              "explanation": "Let us explain the first test case. For the first query, Alice can use the second and third lines in sequence to move (1, 0) \\to (-1, 0) \\to (2, 3). Thus, (2, 3) is reachable from (1, 0). Note that for the fourth query, if (X_i, Y_i) = (Z_i, W_i), the destination is always reachable.\n\nNow let us explain the second test case. For the first query, Alice can use the first and third lines in sequence to move (2, 1) \\to (2, -1) \\to \\left(-\\frac{6}{5}, \\frac{27}{5}\\right). The distance between (-1, 5) and \\left(-\\frac{6}{5}, \\frac{27}{5}\\right) is \\frac{1}{\\sqrt{5}}. This means that for \\varepsilon \\ge \\frac{1}{\\sqrt{5}}, Alice can find a point Q that satisfies the \"reachable\" condition. Moreover, for any \\varepsilon > 0, Alice can find such a point Q. As a result, (2, 1) is reachable from (-1, 5)."
            }
          ]
        },
        {
          "id": "ttpc2024_1_g",
          "problem_letter": "G",
          "url": "https://ttpc2024_1.contest.atcoder.jp/tasks/ttpc2024_1_g?lang=en",
          "statement": "Problem Statement: In tree A, remove the edge connecting vertices u_{P_k} and v_{P_k}, and add an edge connecting vertices x_{Q_k} and y_{Q_k}. \n In tree B, remove the edge connecting vertices x_{Q_k} and y_{Q_k}, and add an edge connecting vertices u_{P_k} and v_{P_k}.",
          "constraints": "Constraints: All input values are integers. \n 2 \\leq N \\leq 1000 \n 1 \\leq u_i, v_i, x_j, y_j \\leq N \n The given A and B form trees.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nu_1\nv_1\nu_2\nv_2\n\\vdots\nu_{N-1}\nv_{N-1}\nx_1\ny_1\nx_2\ny_2\n\\vdots\nx_{N-1}\ny_{N-1}\n\nOutput: \n\nOutput the answer in the following format:\n\nP_1\nP_2\n...\nP_{N-1}\nQ_1\nQ_2\n...\nQ_{N-1}",
          "samples": [
            {
              "input": "4\n1 2\n2 3\n3 4\n1 2\n2 4\n2 3",
              "output": "3 1 2\n2 1 3",
              "explanation": "Before the operation, A is a path graph, and B is a star graph.\n\nAfter the operation for k = 1, A becomes a star graph, and B becomes a path graph.\n\nIn the operations for k = 2, the same edge (in terms of vertex numbers) is removed and added, so the shape of the tree remains unchanged.\n\nAfter completing the operations for k = 3, the original shapes of trees A and B are completely swapped."
            },
            {
              "input": "2\n1 2\n2 1",
              "output": "1\n1",
              "explanation": null
            },
            {
              "input": "7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n1 5\n1 6\n1 7\n5 2\n6 3\n7 4",
              "output": "1 2 3 4 5 6\n1 2 6 4 5 3",
              "explanation": null
            }
          ]
        },
        {
          "id": "ttpc2024_1_h",
          "problem_letter": "H",
          "url": "https://ttpc2024_1.contest.atcoder.jp/tasks/ttpc2024_1_h?lang=en",
          "statement": "Problem Statement: \n\nA set of points U in the xy -plane is calledgood if no point in U lies in theinterior of the convex hull of U. Note that the empty set is considered good.\n\nYou are given N distinct points v_1, v_2, ..., v_N in the xy -plane. The coordinates of the point v_i are (x_i, y_i). No three distinct points are collinear.\n\nCount the number of subsets S of V = \\lbrace v_1, v_2, ..., v_N \\rbrace such that both S and V \\setminus S are good sets.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le N \\le 40 \n |x_i|,|y_i|\\le 10^6 \n (x_i,y_i)\\neq (x_j,y_j)\\ (i\\neq j) \n No three distinct points are collinear.",
          "io_format": "Input: \n\nThe input is given in the following format:\n\nN\nx_1\ny_1\nx_2\ny_2\n\\vdots\nx_N\ny_N\n\nOutput: \n\nOutput the answer.",
          "samples": [
            {
              "input": "4\n0 0\n3 0\n0 3\n1 1",
              "output": "14",
              "explanation": "Except for \\emptyset and V, all other sets S satisfy the condition."
            },
            {
              "input": "8\n1 0\n2 0\n3 1\n3 2\n2 3\n1 3\n0 2\n0 1",
              "output": "256",
              "explanation": null
            },
            {
              "input": "10\n0 0\n1 1\n7 1\n1 7\n3 2\n2 3\n4 2\n2 4\n5 4\n4 5",
              "output": "0",
              "explanation": null
            }
          ]
        },
        {
          "id": "ttpc2024_1_i",
          "problem_letter": "I",
          "url": "https://ttpc2024_1.contest.atcoder.jp/tasks/ttpc2024_1_i?lang=en",
          "statement": "Problem Statement: Choose a subset S from \\lbrace 1, 2, \\dots, N \\rbrace. The judge will return the number of distinct pairs (i, j) such that i < j and |a_i - a_j| \\leq K where i, j \\in S.",
          "constraints": "Constraints: All input values are integers. \n N = 20000 \n 1 \\leq K \\leq 10 \n Q = 30(K + 1)",
          "io_format": "Input and Output: Print a newline and flush Standard Output at the end of each message. Otherwise, you may get aTLEverdict. \n If your query format is invalid or you exceed the number of queries, the judge will respond with T = -1. If you receive this response, you should immediately terminate your program. Otherwise, you may get aTLEverdict. \n Beware that unnecessary newlines are considered as malformed.\n\nNotes: Print a newline and flush Standard Output at the end of each message. Otherwise, you may get aTLEverdict. \n If your query format is invalid or you exceed the number of queries, the judge will respond with T = -1. If you receive this response, you should immediately terminate your program. Otherwise, you may get aTLEverdict. \n Beware that unnecessary newlines are considered as malformed.\n\nSample Interaction: \n\nThe following is a sample interaction for N = 5, K = 2, Q = 90. Note that this example does not meet the constraints and will not appear in the test cases.",
          "samples": []
        },
        {
          "id": "ttpc2024_1_j",
          "problem_letter": "J",
          "url": "https://ttpc2024_1.contest.atcoder.jp/tasks/ttpc2024_1_j?lang=en",
          "statement": "Problem Statement: Choose integers 1 \\le x \\le H and 1 \\le y \\le W. \n From the following four line segments, select any three distinct ones:The line segment connecting(x-1, y-1)and(x-1, y)The line segment connecting(x-1, y-1)and(x, y-1)The line segment connecting(x, y)and(x-1, y)The line segment connecting(x, y)and(x, y-1) \n The line segment connecting (x-1, y-1) and (x-1, y) \n The line segment connecting (x-1, y-1) and (x, y-1) \n The line segment connecting (x, y) and (x-1, y) \n The line segment connecting (x, y) and (x, y-1) \n Draw the selected three line segments on the coordinate plane.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le H, W \\le 1000",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nH\nW\n\nOutput: If there is no operation with (x, y) = (i, j), the j -th character of S_i is.. \n Otherwise, there is exactly one operation with (x, y) = (i, j). In that operation:If the three selected line segments are thoseexcluding\"the line segment connecting(x-1, y-1)and(x-1, y),\" then thej-th character ofS_iisv.If the three selected line segments are thoseexcluding\"the line segment connecting(x-1, y-1)and(x, y-1),\" then thej-th character ofS_iis>.If the three selected line segments are thoseexcluding\"the line segment connecting(x, y)and(x-1, y),\" then thej-th character ofS_iis<.If the three selected line segments are thoseexcluding\"the line segment connecting(x, y)and(x, y-1),\" then thej-th character ofS_iis^. \n If the three selected line segments are thoseexcluding\"the line segment connecting (x-1, y-1) and (x-1, y),\" then the j -th character of S_i isv. \n If the three selected line segments are thoseexcluding\"the line segment connecting (x-1, y-1) and (x, y-1),\" then the j -th character of S_i is>. \n If the three selected line segments are thoseexcluding\"the line segment connecting (x, y) and (x-1, y),\" then the j -th character of S_i is<. \n If the three selected line segments are thoseexcluding\"the line segment connecting (x, y) and (x, y-1),\" then the j -th character of S_i is^.\n\nVisualizer: \n\nYou can use the visualizer via the following link:\n\nhttps://img.atcoder.jp/ttpc2024_1/grid_construction_visualizer_9cdb863ae8b195d0a47d8d6e2c9e05cd.html",
          "samples": [
            {
              "input": "3 3",
              "output": "Yes\n<<^\nv.^\nv>>",
              "explanation": "As shown in the figure, you can draw a 3 \\times 3 grid by drawing U-shapes. Note that no U-shape is drawn at the location corresponding to the center cell. (For clarity, the U-shapes are colored, but this is irrelevant to the problem.)\n\n"
            },
            {
              "input": "4 4",
              "output": "No",
              "explanation": null
            },
            {
              "input": "4 5",
              "output": "No",
              "explanation": null
            }
          ]
        },
        {
          "id": "ttpc2024_1_k",
          "problem_letter": "K",
          "url": "https://ttpc2024_1.contest.atcoder.jp/tasks/ttpc2024_1_k?lang=en",
          "statement": "Problem Statement: For every pair of integers (i, j) satisfying 1 \\leq i < j \\leq N, (i, j) \\in V. This vertex is called vertex (i, j). \n For every triple of integers (i, j, k) satisfying 1 \\leq i < j < k \\leq N and A_i + A_j + A_k = 1, there is an edge connecting vertex (i, j) and vertex (j, k). \n No other pairs of vertices have edges.",
          "constraints": "Constraints: All input values are integers. \n 1 \\leq T \\leq 10^5 \n 3 \\leq N \\leq 10^6 \n A_i is 0 or 1 ( 1 \\leq i \\leq N) \n The total sum of N over all test cases in a single input is at most 10^6.",
          "io_format": "Input: \n\nThe input is given in the following format:\n\nT\n\\text{case}_1\n\\text{case}_2\n\\vdots\n\\text{case}_T\n\nHere, \\text{case}_i represents the i -th test case. Each test case is given in the following format:\n\nN\nA_1\nA_2\n...\nA_N\n\nOutput: \n\nFor each test case, output the answer.",
          "samples": [
            {
              "input": "4\n5\n1 0 0 1 0\n5\n1 1 1 1 1\n12\n0 0 1 1 1 0 0 0 1 0 1 0\n20\n0 0 1 0 0 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1",
              "output": "4\n10\n13\n58",
              "explanation": "For the first test case, the connected components are as follows:\n\nFor the second test case, the graph has no edges, so the number of connected components is 10.\n\n\\lbrace (1,2),(2,3),(2,4),(2,5),(3,4),(4,5) \\rbrace \n \\lbrace (1,3),(3,5) \\rbrace \n \\lbrace (1,4) \\rbrace \n \\lbrace (1,5) \\rbrace"
            }
          ]
        },
        {
          "id": "ttpc2024_1_l",
          "problem_letter": "L",
          "url": "https://ttpc2024_1.contest.atcoder.jp/tasks/ttpc2024_1_l?lang=en",
          "statement": "Problem Statement: \n\nIn this problem, when we refer to a \"permutation of length K \", we mean a permutation of (0, 1, ..., K - 1). Also, we denote the k -th element ( 0 -based) of a sequence X as X[k].\n\nYou are given a permutation P of length L, and L permutations of length B, denoted as V_{0}, V_{1}, ..., V_{L - 1}. We define a sequence A of length B^L as follows:\n\nFind the inversion number of the sequence A modulo 998244353.",
          "constraints": "Constraints: All input values are integers \n 1 \\leq L \n 2 \\leq B \n L \\times (B + 1) \\leq 5 \\times 10^{5} \n P is a permutation of length L \n For each 0 \\leq i < L, V_{i} is a permutation of length B",
          "io_format": "Input: \n\nInput is given from standard input in the following format:\n\nL\nB\nP[0]\nP[1]\n...\nP[L - 1]\nV_{0}[0]\nV_{0}[1]\n...\nV_{0}[B - 1]\n\\vdots\nV_{L - 1}[0]\nV_{L - 1}[1]\n...\nV_{L - 1}[B - 1]\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3 2\n2 0 1\n1 0\n1 0\n0 1",
              "output": "14",
              "explanation": "For example, when n = 5, since N = (1, 0, 1), we have A[5] = V_{0}[1] \\cdot 2^{P[0]} + V_{1}[0] \\cdot 2^{P[1]} + V_{2}[1] \\cdot 2^{P[2]}=3.By calculating similarly, we get A = (5, 1, 4, 0, 7, 3, 6, 2). The inversion count of A is 14, so output 14."
            },
            {
              "input": "2 4\n1 0\n2 0 3 1\n1 2 3 0",
              "output": "60",
              "explanation": "A = (9, 1, 13, 5, 10, 2, 14, 6, 11, 3, 15, 7, 8, 0, 12, 4). The inversion count of A is 60, so output 60."
            },
            {
              "input": "9 10\n2 5 7 3 8 1 4 6 0\n9 2 4 0 1 6 7 3 5 8\n4 1 6 7 8 0 5 9 2 3\n1 9 2 4 6 8 5 7 0 3\n9 0 8 2 5 1 6 7 3 4\n1 6 0 7 3 9 2 4 5 8\n4 5 2 9 1 6 7 3 0 8\n7 0 5 6 1 9 2 4 3 8\n3 2 1 6 7 0 8 9 4 5\n9 2 4 3 5 8 0 6 7 1",
              "output": "138876070",
              "explanation": "Output the answer modulo 998244353."
            }
          ]
        },
        {
          "id": "ttpc2024_1_m",
          "problem_letter": "M",
          "url": "https://ttpc2024_1.contest.atcoder.jp/tasks/ttpc2024_1_m?lang=en",
          "statement": "Problem Statement: \\text{C}(l, r) is a rooted binary tree with r - l + 1 nodes. We denote the root of this tree as \\mathit{rt}. \n Let m be the unique integer such that A_m = \\min\\lbrace A_l, A_{l+1}, \\dots, A_r\\rbrace. \n If l < m, then the left subtree of \\mathit{rt} is \\text{C}(l, m-1). If l = m, then \\mathit{rt} has no left child. \n If m < r, then the right subtree of \\mathit{rt} is \\text{C}(m+1, r). If m = r, then \\mathit{rt} has no right child. \n If \\mathit{rt}_X has a left child, then \\mathit{rt}_Y also has a left child and the left subtrees of \\mathit{rt}_X and \\mathit{rt}_Y are the same Cartesian Tree. \n If \\mathit{rt}_X has no left child, then \\mathit{rt}_Y also has no left child. \n If \\mathit{rt}_X has a right child, then \\mathit{rt}_Y also has a right child and the right subtrees of \\mathit{rt}_X and \\mathit{rt}_Y are the same Cartesian Tree. \n If \\mathit{rt}_X has no right child, then \\mathit{rt}_Y also has no right child.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le N \\le 4 \\times 10^5 \n A is a permutation of (1, 2, \\dots, N). \n 1 \\le Q \\le 4 \\times 10^5 \n 1 \\le l_i \\le r_i \\le N ( 1 \\le i \\le Q) \n (l_i, r_i) \\ne (l_j, r_j) ( 1 \\le i < j \\le Q)",
          "io_format": "Input: \n\nThe input is given in the following format:\n\nN\nA_1\nA_2\n...\nA_N\nQ\nl_1\nr_1\nl_2\nr_2\n\\vdots\nl_Q\nr_Q\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "6\n1 4 2 6 3 5\n3\n1 4\n2 5\n3 6",
              "output": "2",
              "explanation": "\\text{C}(1, 4), \\text{C}(2, 5), \\text{C}(3, 6) are the following Cartesian Trees:\n\n\n\n\\text{C}(1, 4) and \\text{C}(3, 6) are the same Cartesian Tree, while \\text{C}(2, 5) is a different Cartesian Tree from these. Therefore, there are 2 different Cartesian Trees."
            },
            {
              "input": "4\n1 2 3 4\n10\n1 1\n2 2\n3 3\n4 4\n1 2\n2 3\n3 4\n1 3\n2 4\n1 4",
              "output": "4",
              "explanation": null
            },
            {
              "input": "10\n3 8 4 7 2 5 9 10 1 6\n13\n5 8\n2 6\n7 9\n3 8\n3 5\n2 4\n4 6\n1 9\n3 7\n6 9\n2 10\n4 9\n3 9",
              "output": "11",
              "explanation": null
            }
          ]
        }
      ]
    },
    {
      "id": "ttpc2024_2",
      "url": "https://ttpc2024_2.contest.atcoder.jp/?lang=en",
      "start_time": "2024-12-15T04:00:00",
      "problems": [
        {
          "id": "ttpc2024_1_a",
          "problem_letter": "A",
          "url": "https://ttpc2024_2.contest.atcoder.jp/tasks/ttpc2024_1_a?lang=en",
          "statement": "Problem Statement: For i = 1, 2, \\dots, M, repeat the following:If there is already a cycle inGcontaining either vertexu_{P_i}or vertexv_{P_i}, the condition is not satisfied, and the procedure ends.Add edgeP_i(the undirected edge connectingu_{P_i}andv_{P_i}) toG. \n If there is already a cycle in G containing either vertex u_{P_i} or vertex v_{P_i}, the condition is not satisfied, and the procedure ends. \n Add edge P_i (the undirected edge connecting u_{P_i} and v_{P_i}) to G. \n L \\ge 1i \\neq j \\implies v_i \\neq v_j, e_i \\neq e_jFor0 \\le i \\le L - 2, edgee_iconnects verticesv_iandv_{i+1}Edgee_{L-1}connects verticesv_{L-1}andv_0 \n i \\neq j \\implies v_i \\neq v_j, e_i \\neq e_jFor0 \\le i \\le L - 2, edgee_iconnects verticesv_iandv_{i+1}Edgee_{L-1}connects verticesv_{L-1}andv_0 \n For 0 \\le i \\le L - 2, edge e_i connects vertices v_i and v_{i+1}Edgee_{L-1}connects verticesv_{L-1}andv_0 \n Edge e_{L-1} connects vertices v_{L-1} and v_0",
          "constraints": "Constraints: All input values are integers. \n 1 \\le T \\le 2000 \n For each test case:2 \\le N \\le 40001 \\le M \\le 40001 \\le u_i, v_i \\le N\\ (1 ≤ i ≤ M)The graph formed by adding all given edges is simple. \n 2 \\le N \\le 4000 \n 1 \\le M \\le 4000 \n 1 \\le u_i, v_i \\le N\\ (1 ≤ i ≤ M) \n The graph formed by adding all given edges is simple. \n The sum of N over all test cases is at most 4000. \n The sum of M over all test cases is at most 4000.",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nT\n\\text{case}_1\n\\text{case}_2\n\\vdots\n\\text{case}_T\n\nHere, \\text{case}_i (1 ≤ i ≤ T) represents the i -th test case. Each test case is given in the following format:\n\nN\nM\nu_1\nv_1\nu_2\nv_2\n\\vdots\nu_M\nv_M\n\nOutput: \n\nFor each test case, if a permutation (P_1, P_2, ..., P_M) satisfying the conditions exists, output such a P separated by spaces. If no such permutation exists, output-1.",
          "samples": [
            {
              "input": "1\n4 4\n1 2\n2 3\n3 4\n4 2",
              "output": "2 4 1 3",
              "explanation": "The given graph has the following shape:\n\n\n\nIf we add the edges in the order P = (1, 2, 3, 4), the conditions are satisfied as shown below:\n\n\n\nThus,1 2 3 4is one valid output.\n\nHowever, if we add edges in the order P = (2, 3, 4, 1), a cycle containing vertex 2 is created before edge 1 can be added, so the conditions are not satisfied.\n\n\n\nOther valid outputs include P = (1, 4, 3, 2) or P = (2, 4, 1, 3)."
            },
            {
              "input": "4\n4 5\n1 2\n2 3\n3 4\n3 1\n1 4\n5 3\n1 2\n2 3\n3 4\n9 10\n3 5\n1 8\n5 8\n4 9\n6 7\n7 9\n1 2\n1 4\n2 4\n4 6\n8 10\n1 4\n3 8\n2 5\n3 4\n1 5\n5 8\n2 8\n5 7\n4 5\n3 7",
              "output": "-1\n3 2 1\n4 10 2 8 7 9 6 5 3 1\n-1",
              "explanation": "If no valid P exists, output-1. Note that the graph is not necessarily connected."
            }
          ]
        },
        {
          "id": "ttpc2024_1_b",
          "problem_letter": "B",
          "url": "https://ttpc2024_2.contest.atcoder.jp/tasks/ttpc2024_1_b?lang=en",
          "statement": "Problem Statement: Set a variable C = 0. \n If A contains at least one 1, remove the first occurrence of 1 from A and add 1 to C. \n If A is not empty, remove the first element x of A and add x to C. \n Append C to the end of T. \n If A is empty, terminate the process. Otherwise, return to step 1.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le N \\le 10^6 \n 1 \\le S_i \\le 3",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nS_1\nS_2\n...\nS_N\n\nOutput: \n\nOutput the number of sequences A that satisfy the conditions, modulo 998244353.",
          "samples": [
            {
              "input": "2\n3 2",
              "output": "5",
              "explanation": "There are 5 possible sequences A that result in T = (3, 2) : A = (1, 2, 2), (2, 1, 2), (2, 2, 1), (2, 1, 1, 1), (1, 2, 1, 1).\n\nFor example, for A = (2, 1, 1, 1), the process proceeds as follows:\n\nRemove the first occurrence of 1 in A, which is A_2 = 1. Now A = (2, 1, 1) and C = 1. \n Remove the first element of A, which is A_1 = 2. Now A = (1, 1) and C = 3. \n Append C to the end of T. Now T = (3). \n Remove the first occurrence of 1 in A, which is A_1 = 1. Now A = (1) and C = 1. \n Remove the first element of A, which is A_1 = 1. Now A = () and C = 2. \n Append C to the end of T. Now T = (3, 2)."
            },
            {
              "input": "6\n3 2 2 3 2 1",
              "output": "4",
              "explanation": null
            },
            {
              "input": "5\n3 2 1 3 2",
              "output": "0",
              "explanation": "Note that there may be cases where no sequence A produces S, in which case the answer is 0."
            }
          ]
        },
        {
          "id": "ttpc2024_1_c",
          "problem_letter": "C",
          "url": "https://ttpc2024_2.contest.atcoder.jp/tasks/ttpc2024_1_c?lang=en",
          "statement": "Problem Statement: 1 j x: Change the length of edge j to x. \n 2 s t: Find the shortest path length from vertex s to vertex t.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le N \\le 18 \n 1 \\le C_j \\le 10^7 (1 \\le j \\le 2^{N+1}-1) \n 1 \\le Q \\le 2 \\times 10^5 \n In the query1 j x, 1 \\le j \\le 2^{N+1}-1 and 1 \\le x \\le 10^7. \n In the query2 s t, 0 \\le s < t \\le 2^N. \n There is at least one2 s tquery.",
          "io_format": "Input: \n\nThe input is given in the following format. Note that vertex numbering starts from 0, while edge numbering starts from 1.\n\nN\nC_1\nC_2\n...\nC_{2^{N+1}-1}\nQ\n\\text{query}_1\n\\text{query}_2\n\\vdots\n\\text{query}_Q\n\nHere, \\text{query}_i represents the i -th query. Each query is given in one of the following formats:\n\n1j\nx\n\n2s\nt\n\nOutput: \n\nLet m be the number of queries of type2 s t. Output m lines, where the i -th line contains the answer to the i -th2 s t query.",
          "samples": [
            {
              "input": "3\n7 1 14 3 9 4 8 2 6 5 5 13 8 2 3\n10\n2 0 1\n2 0 4\n2 4 6\n2 4 8\n2 3 5\n1 6 30\n2 3 5\n2 4 6\n1 1 10000000\n2 0 8",
              "output": "2\n1\n4\n8\n17\n18\n13\n15",
              "explanation": "In the 1st query, using edge 8, the path 0 \\to 1 results in a total distance of 2. \n In the 2nd query, using edge 2, the path 0 \\to 4 results in a total distance of 1. \n In the 3rd query, using edge 6, the path 4 \\to 6 results in a total distance of 4. \n In the 4th query, using edges 2, 1, the path 4 \\to 0 \\to 8 results in a total distance of 8. \n In the 5th query, using edges 11, 6, 13, the path 3 \\to 4 \\to 6 \\to 5 results in a total distance of 17. \n In the 6th query, the length of edge 6 is updated from 4 to 30. \n In the 7th query, using edges 11, 12, the path 3 \\to 4 \\to 5 results in a total distance of 18. \n In the 8th query, using edges 2, 1, 15, 14, the path 4 \\to 0 \\to 8 \\to 7 \\to 6 results in a total distance of 13. \n In the 9th query, the length of edge 1 is updated from 7 to 10000000. \n In the 10th query, using edges 2, 3, the path 0 \\to 4 \\to 8 results in a total distance of 15."
            }
          ]
        },
        {
          "id": "ttpc2024_2_d",
          "problem_letter": "D",
          "url": "https://ttpc2024_2.contest.atcoder.jp/tasks/ttpc2024_2_d?lang=en",
          "statement": "Problem Statement: Type 1 : Given in the format1 i a b. Update the value of A_i to a and the value of B_i to b. \n Type 2 : Given in the format2 Y 0 0. Solve the following problem:For a non-negative integerS, define a sequence of non-negative integersX = (X_0, X_1, \\dots, X_N)using the following recurrence:X_0 = SFor each1 \\le i \\le N,X_i = \\begin{cases} X_{i - 1} \\oplus A_i & \\text{if } X_{i - 1} \\equiv 1 \\pmod{2} \\\\ X_{i - 1} \\oplus B_i & \\text{if } X_{i - 1} \\equiv 0 \\pmod{2} \\end{cases}Determine whether it is possible to set a non-negative integerSsuch thatX_N = Y. If possible, output the smallest suchS.If no suchSexists, output-1. \n X_0 = S \n For each 1 \\le i \\le N, X_i = \\begin{cases} X_{i - 1} \\oplus A_i & \\text{if } X_{i - 1} \\equiv 1 \\pmod{2} \\\\ X_{i - 1} \\oplus B_i & \\text{if } X_{i - 1} \\equiv 0 \\pmod{2} \\end{cases}",
          "constraints": "Constraints: All inputs are integers. \n 1 \\le N \\le 2 \\times 10^5 \n 1 \\le Q \\le 2 \\times 10^5 \n 0 \\le A_i, B_i < 2^{60} \\ (1 \\le i \\le N) \n For a Type 1 query, 1 \\le i \\le N, 0 \\le a, b < 2^{60} \n For a Type 2 query, 0 \\le Y < 2^{60} \n There is at least one Type 2 query.",
          "io_format": "Input: \n\nThe input is given in the following format:\n\nN\nQ\nA_1\nA_2\n...\nA_N\nB_1\nB_2\n...\nB_N\n\\mathrm{query}_1\n\\vdots\n\\mathrm{query}_Q\n\nHere, \\mathrm{query}_i represents the i -th query and is given in one of the following formats:\n\n1i\na\nb\n\n2Y\n 0 0\n\nOutput: \n\nLet q be the number of Type 2 queries. Output q lines, where the i -th line contains the answer to the i -th Type 2 query.",
          "samples": [
            {
              "input": "1 3\n0\n1\n2 5 0 0\n2 6 0 0\n2 7 0 0",
              "output": "4\n-1\n6",
              "explanation": "Given A = (0), B = (1), the value of X_N is:\n\nFor the first query with Y = 5, both S = 4 and S = 5 result in X_N = 5, so the smallest S is 4.For the second query with Y = 6, there is no S such that X_N = 6, so output-1.For the third query with Y = 7, both S = 6 and S = 7 result in X_N = 7, so the smallest S is 6.\n\nX_N = S if S is odd. \n X_N = S \\oplus 1 if S is even."
            },
            {
              "input": "10 1\n310214852498133736 505276263682091678 273987911350501637 317207700241861186 878845869214220663 722059890180131902 597424946894933345 74297940232615233 969543184238991085 567669635596262039\n760374976835769237 114205047640377864 975115657391620675 659404150340533368 514313531921108960 255579815636209538 1042405225853490071 891193105039531117 1032475514675208675 968262176137127595\n2 942999108116930288 0 0",
              "output": "494185924924343867",
              "explanation": null
            },
            {
              "input": "10 5\n20 19 18 17 16 15 14 13 12 11\n11 12 13 14 15 16 17 18 19 20\n2 8 0 0\n1 6 100 200\n2 12 0 0\n1 10 32 662\n2 100 0 0",
              "output": "8\n103\n-1",
              "explanation": null
            },
            {
              "input": "10 5\n464468010685205695 652469322679259637 207750579744900414 551282264132274959 477385551779769369 457669217633528368 1124978699497706079 993018743713584412 347799342391956023 253839229959865684\n43481420251962425 913779804742334221 721829783836314668 643562100144275666 148532568860178532 348780722732705987 905040003050597634 962374691997649953 160408954061784257 6313574278114070\n2 942999108116930288 0 0\n1 7 911289147093700219 315969390490734880\n2 570806468566359262 0 0\n1 5 865153057674787555 127079554510737035\n2 71991180131886804 0 0",
              "output": "167766290121628811\n833427363106128513\n657636533261400102",
              "explanation": null
            }
          ]
        },
        {
          "id": "ttpc2024_1_e",
          "problem_letter": "E",
          "url": "https://ttpc2024_2.contest.atcoder.jp/tasks/ttpc2024_1_e?lang=en",
          "statement": "Problem Statement: Operation 1 : Increase the robot's x coordinate by 1 and appendXto the end of S. This operation costs 1. \n Operation 2 : Increase the robot's y coordinate by 1 and appendYto the end of S. This operation costs 1. \n Operation 3 : Decrease the robot's x coordinate by 1 and remove the last character of S. This operation can only be performed if the last character of S isX. This operation costs 0. \n Operation 4 : Decrease the robot's y coordinate by 1 and remove the last character of S. This operation can only be performed if the last character of S isY. This operation costs 0.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le N \\le 500 \n 0 \\le X_i, Y_i \\le 10^9",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nN\nX_1\nY_1\nX_2\nY_2\n\\vdots\nX_N\nY_N\n\nOutput: \n\nOutput the minimum cost required for the robot to visit all points in order.",
          "samples": [
            {
              "input": "2\n3 3\n1 2",
              "output": "6",
              "explanation": "By performing Operation 1 once, Operation 2 three times, and Operation 1 twice, you can reach point 1.Then, by performing Operation 3 twice and Operation 4 once, you can reach point 2.\n\nThe total cost of this sequence of operations is the sum of the number of times Operations 1 and 2 are performed, which is 6."
            },
            {
              "input": "3\n2 2\n3 3\n1 3",
              "output": "7",
              "explanation": null
            }
          ]
        },
        {
          "id": "ttpc2024_2_f",
          "problem_letter": "F",
          "url": "https://ttpc2024_2.contest.atcoder.jp/tasks/ttpc2024_2_f?lang=en",
          "statement": "Problem Statement: If there exists a substring of S such thatTIOT, choose one and replace it withISCT.\r\n  (More precisely, if there exists 1 \\le i \\le N-3 such that S_{i}={} T, S_{i+1}={} I, S_{i+2}={} O, S_{i+3}={} T, choose one and replace it with S_{i}={} I, S_{i+1}={} S, S_{i+2}={} C, S_{i+3}={} T.)",
          "constraints": "Constraints: 1 \\leq Q \\leq 5 \\times 10^4 \n 4 \\le N \\le 2 \\times 10^5 \n S and T are strings of length N consisting of uppercase English letters. \n The sum of N across the test cases is at most 2 \\times 10^5.",
          "io_format": "Input: \n\nThe input is given in the following format:\n\nQ\n{case}_1\n{case}_2\n\\vdots\n{case}_Q\n\nEach test cases is given in the following format:\n\nN\nS\nT\n\nOutput: \n\nPrint Q lines. On the i -th line, print the answer to the i -th test case as eitherYes orNo.",
          "samples": [
            {
              "input": "3\n10\nETIOTROPIC\nEISCTROPIC\n6\nBTIEOT\nBISECT\n10\nTIOTIOTIOT\nTIOISCISCT",
              "output": "Yes\nNo\nYes",
              "explanation": "For the first test case, you can matchETIOTROPICtoEISCTROPICby performing the operation once as follows:\n\nFor the second test case, you cannot match two strings through the operation.\n\nThe substring from the 2 nd to 5 th characters inETIOTROPICisTIOT, so replace it withISCT."
            }
          ]
        },
        {
          "id": "ttpc2024_2_g",
          "problem_letter": "G",
          "url": "https://ttpc2024_2.contest.atcoder.jp/tasks/ttpc2024_2_g?lang=en",
          "statement": "Problem Statement: Let the color of vertex i be c_i. For any three distinct vertices u, v, and w, if w = \\mathrm{lca}(u, v) and c_u = c_v, then c_u \\neq c_w.",
          "constraints": "Constraints: All input values are integers. \n 3 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq A_i, B_i \\leq N \n The input graph is a tree.",
          "io_format": "Input: \n\nThe input is given in the following format:\n\nN\nA_1\nB_1\nA_2\nB_2\n\\vdots\nA_{N-1}\nB_{N-1}\n\nOutput: \n\nPrint the minimum number of distinct colors required.",
          "samples": [
            {
              "input": "8\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n6 8",
              "output": "3",
              "explanation": "For example, the coloring shown below satisfies the given conditions.\n\nSince there is no way to satisfy the conditions using two or fewer colors, the minimum number of colors needed is 3.\n\n"
            },
            {
              "input": "4\n1 2\n2 3\n3 4",
              "output": "1",
              "explanation": null
            }
          ]
        },
        {
          "id": "ttpc2024_2_h",
          "problem_letter": "H",
          "url": "https://ttpc2024_2.contest.atcoder.jp/tasks/ttpc2024_2_h?lang=en",
          "statement": "Problem Statement: Abbreviation Button: Machine \\mathrm{M} outputs a string of length 4 formed by concatenating the characters pointed to by cursors 1, 2, 3, 4 in this order. \n Update Button: For each i = 1, 2, 3, 4, the following happens:Letybe the current position of cursori. Cursorimoves from they-th character ofSto theA_y-th character ofS. \n Let y be the current position of cursor i. Cursor i moves from the y -th character of S to the A_y -th character of S. \n Press the update button. \n Press the abbreviation button to determine the abbreviation.",
          "constraints": "Constraints: N, A_i, x_1, x_2, x_3, x_4 are integers. \n 3 \\leq N \\leq 50 \n S is a string of length N consisting of uppercase English letters. \n 1 \\leq A_i \\leq N\\ (1 \\leq i \\leq N) \n 1 \\leq x_1, x_2, x_3, x_4 \\leq N \n S_{x_1} = {} T \n S_{x_2} = {} T \n S_{x_3} = {} P \n S_{x_4} = {} C",
          "io_format": "Input: \n\nThe input is given in the following format:\n\nN\nS\nA_1\nA_2\n...\nA_N\nx_1\nx_2\nx_3\nx_4\n\nOutput: The abbreviation becomesTTPC k years from now. \n For any integer l > k, the abbreviation does not becomeTTPC l years from now.",
          "samples": [
            {
              "input": "5\nTTTPC\n2 3 4 4 5\n1 2 4 5",
              "output": "1",
              "explanation": "The last time the abbreviation becomesTTPCis 1 year from now.\n\n0 years from now, the abbreviation isTTPC, and the cursor positions are (1,2,4,5). \n 1 year from now, the abbreviation isTTPC, and the cursor positions are (2,3,4,5). \n 2 years from now, the abbreviation isTPPC, and the cursor positions are (3,4,4,5). \n 3 years from now, the abbreviation isPPPC, and the cursor positions are (4,4,4,5)."
            },
            {
              "input": "4\nTTPC\n2 3 4 1\n1 2 3 4",
              "output": "NeverEnds",
              "explanation": "The abbreviation becomesTTPCat years 0, 4, 8, 12, ... and so on.TTPCnever ends."
            },
            {
              "input": "6\nTTPCZT\n5 3 2 6 4 4\n1 2 3 4",
              "output": "0",
              "explanation": null
            }
          ]
        },
        {
          "id": "ttpc2024_1_i",
          "problem_letter": "I",
          "url": "https://ttpc2024_2.contest.atcoder.jp/tasks/ttpc2024_1_i?lang=en",
          "statement": "Problem Statement: Choose a subset S from \\lbrace 1, 2, \\dots, N \\rbrace. The judge will return the number of distinct pairs (i, j) such that i < j and |a_i - a_j| \\leq K where i, j \\in S.",
          "constraints": "Constraints: All input values are integers. \n N = 20000 \n 1 \\leq K \\leq 10 \n Q = 30(K + 1)",
          "io_format": "Input and Output: Print a newline and flush Standard Output at the end of each message. Otherwise, you may get aTLEverdict. \n If your query format is invalid or you exceed the number of queries, the judge will respond with T = -1. If you receive this response, you should immediately terminate your program. Otherwise, you may get aTLEverdict. \n Beware that unnecessary newlines are considered as malformed.\n\nNotes: Print a newline and flush Standard Output at the end of each message. Otherwise, you may get aTLEverdict. \n If your query format is invalid or you exceed the number of queries, the judge will respond with T = -1. If you receive this response, you should immediately terminate your program. Otherwise, you may get aTLEverdict. \n Beware that unnecessary newlines are considered as malformed.\n\nSample Interaction: \n\nThe following is a sample interaction for N = 5, K = 2, Q = 90. Note that this example does not meet the constraints and will not appear in the test cases.",
          "samples": []
        },
        {
          "id": "ttpc2024_1_j",
          "problem_letter": "J",
          "url": "https://ttpc2024_2.contest.atcoder.jp/tasks/ttpc2024_1_j?lang=en",
          "statement": "Problem Statement: Choose integers 1 \\le x \\le H and 1 \\le y \\le W. \n From the following four line segments, select any three distinct ones:The line segment connecting(x-1, y-1)and(x-1, y)The line segment connecting(x-1, y-1)and(x, y-1)The line segment connecting(x, y)and(x-1, y)The line segment connecting(x, y)and(x, y-1) \n The line segment connecting (x-1, y-1) and (x-1, y) \n The line segment connecting (x-1, y-1) and (x, y-1) \n The line segment connecting (x, y) and (x-1, y) \n The line segment connecting (x, y) and (x, y-1) \n Draw the selected three line segments on the coordinate plane.",
          "constraints": "Constraints: All input values are integers. \n 1 \\le H, W \\le 1000",
          "io_format": "Input: \n\nThe input is given from Standard Input in the following format:\n\nH\nW\n\nOutput: If there is no operation with (x, y) = (i, j), the j -th character of S_i is.. \n Otherwise, there is exactly one operation with (x, y) = (i, j). In that operation:If the three selected line segments are thoseexcluding\"the line segment connecting(x-1, y-1)and(x-1, y),\" then thej-th character ofS_iisv.If the three selected line segments are thoseexcluding\"the line segment connecting(x-1, y-1)and(x, y-1),\" then thej-th character ofS_iis>.If the three selected line segments are thoseexcluding\"the line segment connecting(x, y)and(x-1, y),\" then thej-th character ofS_iis<.If the three selected line segments are thoseexcluding\"the line segment connecting(x, y)and(x, y-1),\" then thej-th character ofS_iis^. \n If the three selected line segments are thoseexcluding\"the line segment connecting (x-1, y-1) and (x-1, y),\" then the j -th character of S_i isv. \n If the three selected line segments are thoseexcluding\"the line segment connecting (x-1, y-1) and (x, y-1),\" then the j -th character of S_i is>. \n If the three selected line segments are thoseexcluding\"the line segment connecting (x, y) and (x-1, y),\" then the j -th character of S_i is<. \n If the three selected line segments are thoseexcluding\"the line segment connecting (x, y) and (x, y-1),\" then the j -th character of S_i is^.\n\nVisualizer: \n\nYou can use the visualizer via the following link:\n\nhttps://img.atcoder.jp/ttpc2024_1/grid_construction_visualizer_9cdb863ae8b195d0a47d8d6e2c9e05cd.html",
          "samples": [
            {
              "input": "3 3",
              "output": "Yes\n<<^\nv.^\nv>>",
              "explanation": "As shown in the figure, you can draw a 3 \\times 3 grid by drawing U-shapes. Note that no U-shape is drawn at the location corresponding to the center cell. (For clarity, the U-shapes are colored, but this is irrelevant to the problem.)\n\n"
            },
            {
              "input": "4 4",
              "output": "No",
              "explanation": null
            },
            {
              "input": "4 5",
              "output": "No",
              "explanation": null
            }
          ]
        },
        {
          "id": "ttpc2024_2_k",
          "problem_letter": "K",
          "url": "https://ttpc2024_2.contest.atcoder.jp/tasks/ttpc2024_2_k?lang=en",
          "statement": "Problem Statement: \n\nYou are given a sequence A = (A_1, A_2, ..., A_N) of length N, consisting of 0, 1, and -1.\n\nThere are 2^q ways to replace all -1 s in A with either 0 or 1, where q is the number of -1 s in A. Among these, for all sequences that contain both 0 and 1, calculate the sum of the answers to the following problem modulo 998244353 :\n\nLet \\alpha and \\beta be the number of 0 s and 1 s in A, respectively. Also, let X = (X_0, X_1, ..., X_{\\alpha-1}) be the sequence of indices of A_i = 0, arranged in increasing order, and let Y = (Y_0, Y_1, ..., Y_{\\beta-1}) be the sequence of indices of A_i = 1, arranged in increasing order (note that the indices of X and Y start from 0).\n\n\\displaystyle\\sum_{i=0}^{\\mathrm{LCM}(\\alpha, \\beta)-1} |X_{(i \\bmod \\alpha)} - Y_{(i \\bmod \\beta)}|",
          "constraints": null,
          "io_format": null,
          "samples": []
        },
        {
          "id": "ttpc2024_1_l",
          "problem_letter": "L",
          "url": "https://ttpc2024_2.contest.atcoder.jp/tasks/ttpc2024_1_l?lang=en",
          "statement": "Problem Statement: \n\nIn this problem, when we refer to a \"permutation of length K \", we mean a permutation of (0, 1, ..., K - 1). Also, we denote the k -th element ( 0 -based) of a sequence X as X[k].\n\nYou are given a permutation P of length L, and L permutations of length B, denoted as V_{0}, V_{1}, ..., V_{L - 1}. We define a sequence A of length B^L as follows:\n\nFind the inversion number of the sequence A modulo 998244353.",
          "constraints": "Constraints: All input values are integers \n 1 \\leq L \n 2 \\leq B \n L \\times (B + 1) \\leq 5 \\times 10^{5} \n P is a permutation of length L \n For each 0 \\leq i < L, V_{i} is a permutation of length B",
          "io_format": "Input: \n\nInput is given from standard input in the following format:\n\nL\nB\nP[0]\nP[1]\n...\nP[L - 1]\nV_{0}[0]\nV_{0}[1]\n...\nV_{0}[B - 1]\n\\vdots\nV_{L - 1}[0]\nV_{L - 1}[1]\n...\nV_{L - 1}[B - 1]\n\nOutput: \n\nPrint the answer.",
          "samples": [
            {
              "input": "3 2\n2 0 1\n1 0\n1 0\n0 1",
              "output": "14",
              "explanation": "For example, when n = 5, since N = (1, 0, 1), we have A[5] = V_{0}[1] \\cdot 2^{P[0]} + V_{1}[0] \\cdot 2^{P[1]} + V_{2}[1] \\cdot 2^{P[2]}=3.By calculating similarly, we get A = (5, 1, 4, 0, 7, 3, 6, 2). The inversion count of A is 14, so output 14."
            },
            {
              "input": "2 4\n1 0\n2 0 3 1\n1 2 3 0",
              "output": "60",
              "explanation": "A = (9, 1, 13, 5, 10, 2, 14, 6, 11, 3, 15, 7, 8, 0, 12, 4). The inversion count of A is 60, so output 60."
            },
            {
              "input": "9 10\n2 5 7 3 8 1 4 6 0\n9 2 4 0 1 6 7 3 5 8\n4 1 6 7 8 0 5 9 2 3\n1 9 2 4 6 8 5 7 0 3\n9 0 8 2 5 1 6 7 3 4\n1 6 0 7 3 9 2 4 5 8\n4 5 2 9 1 6 7 3 0 8\n7 0 5 6 1 9 2 4 3 8\n3 2 1 6 7 0 8 9 4 5\n9 2 4 3 5 8 0 6 7 1",
              "output": "138876070",
              "explanation": "Output the answer modulo 998244353."
            }
          ]
        },
        {
          "id": "ttpc2024_2_m",
          "problem_letter": "M",
          "url": "https://ttpc2024_2.contest.atcoder.jp/tasks/ttpc2024_2_m?lang=en",
          "statement": "Problem Statement: Choose an integer x such that -10^9 \\leq x \\leq 10^9-1 and there are stones at both coordinates x and x+1. Let the stone at x be A and the stone at x+1 be B. Remove A and B from the number line. \n Choose an integer y such that -10^9 \\leq y \\leq 10^9-1 and there are no stones at both coordinates y and y+1. Place A at y and B at y+1. \n All stones are part of a single contiguous block. That is, there exists an integer n such that for all integers x satisfying n \\leq x \\leq n + NM - 1, there is exactly one stone at coordinate x. \n Additionally, the stones are sorted by color in ascending order. Specifically, among the stones of color i, the j -th stone from the left (1 ≤ i ≤ M,\\ 1 ≤ j ≤ N) is at coordinate n + (i-1) \\times N + (j-1).",
          "constraints": "Constraints: 2 \\leq N \\leq 1000 \n 3 \\leq M \\leq 999 \n N is even \n M is odd",
          "io_format": "Input: \n\nThe input is given in the following format:\n\nN\nM\n\nOutput: 0 \\leq K \\leq (N+1) \\times M \n -10^9 \\leq x_k, y_k \\leq 10^9-1\\ (1 \\leq k \\leq K)",
          "samples": [
            {
              "input": "4 3",
              "output": "13\n3 13\n10 3\n12 10\n6 12\n4 6\n1 4\n13 14\n14 14\n14 999999999\n999999999 -1000000000\n9 13\n5 9\n-1000000000 5",
              "explanation": "Initially, the stones are placed as follows (.indicates an unoccupied position). The coordinate of the leftmost.is 0, and the coordinate of the rightmost.is 15.\n\nAfter the first three operations, the stone arrangement changes as follows:\n\nFinally, the stones are rearranged as follows:\n\nThis arrangement satisfies the conditions of being a single contiguous block and sorted by color. Additionally, the number of operations is at most (N + 1) \\times M = 15, so this output is valid."
            }
          ]
        },
        {
          "id": "ttpc2024_2_n",
          "problem_letter": "N",
          "url": "https://ttpc2024_2.contest.atcoder.jp/tasks/ttpc2024_2_n?lang=en",
          "statement": "Problem Statement: Choose a vertex v that satisfies the following conditions:Vertexvis not marked.There exists a vertexuconnected tovby an edge such thatuis marked with the opponent's marker. \n Vertex v is not marked. \n There exists a vertex u connected to v by an edge such that u is marked with the opponent's marker. \n Mark the chosen vertex v with their own marker.",
          "constraints": "Constraints: All input values are integers. \n 1 \\leq N \\leq 2 \\times 10^5 \n 1 \\leq u_i, v_i \\leq N \n The given graph is a tree.",
          "io_format": "Input: \n\nThe input is given in the following format:\n\nN\nu_1\nv_1\n\\vdots\nu_{N-1}\nv_{N-1}\n\nOutput: \n\nIf Alice wins, outputAlice. If Bob wins, outputBob.",
          "samples": [
            {
              "input": "5\n1 2\n2 3\n3 4\n2 5",
              "output": "Alice",
              "explanation": "For example, consider the following scenario:\n\nIn this tree, Alice has a winning strategy, so you should outputAlice."
            },
            {
              "input": "4\n1 2\n3 4\n3 2",
              "output": "Bob",
              "explanation": null
            },
            {
              "input": "7\n1 2\n2 3\n3 4\n3 5\n1 6\n6 7",
              "output": "Alice",
              "explanation": null
            }
          ]
        },
        {
          "id": "ttpc2024_2_o",
          "problem_letter": "O",
          "url": "https://ttpc2024_2.contest.atcoder.jp/tasks/ttpc2024_2_o?lang=en",
          "statement": "Problem Statement: Choose two living slimes, say Slime i and Slime j ( i \\neq j).Let the current weight of SlimeibeW_iand that of SlimejbeW_j.IfW_i \\gt W_j, the number of victories of Slimeiincreases by1, its weight becomesW_i + W_j, and Slimejdies.If this condition is not satisfied, nothing happens. \n Let the current weight of Slime i be W_i and that of Slime j be W_j. \n If W_i \\gt W_j, the number of victories of Slime i increases by 1, its weight becomes W_i + W_j, and Slime j dies. \n If this condition is not satisfied, nothing happens.",
          "constraints": "Constraints: All input values are integers. \n 1 \\leq M \\leq 2 \\times 10^5 \n 1 \\leq a_i \\leq 10^9\\ (1 \\leq i \\leq M)",
          "io_format": "Input: \n\nThe input is given in the following format:\n\nM\na_1\na_2\n...\na_M\n\nOutput: \n\nOutput M lines. The i -th line ( 1 \\leq i \\leq M) should contain the answer to the Marunomi problem for W = (a_1, a_2, ..., a_i).",
          "samples": [
            {
              "input": "5\n1 2 3 5 20",
              "output": "0 1 3 7 11",
              "explanation": null
            },
            {
              "input": "3\n1 1 1",
              "output": "0 0 0",
              "explanation": null
            },
            {
              "input": "10\n17 3467 115 716 9070 32 12251 237 549 17",
              "output": "0 1 3 6 10 15 22 29 38 46",
              "explanation": null
            }
          ]
        }
      ]
    }
  ],
  "accessed_timestamp": "2025-02-11T17:39:18.124665",
  "min_date": "2024-07-01T00:00:00",
  "statistics": {
    "total_contests": 56,
    "abc_contests": 32,
    "arc_contests": 11,
    "agc_contests": 4,
    "other_contests": 3,
    "total_problems": 335
  }
}